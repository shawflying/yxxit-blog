{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/vexo/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/vexo/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/vexo/source/js/qrious.js","path":"js/qrious.js","modified":0,"renderable":1},{"_id":"themes/vexo/source/fonts/SourceSansPro.ttf","path":"fonts/SourceSansPro.ttf","modified":0,"renderable":1},{"_id":"themes/vexo/source/css/images/escheres.png","path":"css/images/escheres.png","modified":0,"renderable":1},{"_id":"themes/vexo/source/css/plugins/gitment.css","path":"css/plugins/gitment.css","modified":0,"renderable":1},{"_id":"themes/vexo/source/css/images/menu.png","path":"css/images/menu.png","modified":0,"renderable":1},{"_id":"themes/vexo/source/css/images/alipay.jpg","path":"css/images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/vexo/source/css/images/logo.png","path":"css/images/logo.png","modified":0,"renderable":1},{"_id":"themes/vexo/source/js/gitment.js","path":"js/gitment.js","modified":0,"renderable":1},{"_id":"themes/vexo/source/css/images/top.png","path":"css/images/top.png","modified":0,"renderable":1},{"_id":"themes/vexo/source/css/images/wechat.jpg","path":"css/images/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/vexo/source/css/images/logo.ico","path":"css/images/logo.ico","modified":0,"renderable":1}],"Cache":[{"_id":"themes/vexo/.gitignore","hash":"99e5bb4cc2a0b34f697ecc7c146f9d10d0a986e8","modified":1502758680313},{"_id":"themes/vexo/LICENSE","hash":"96a961acb8766182dca9e15280b37ee18156cee9","modified":1502758680319},{"_id":"themes/vexo/.travis.yml","hash":"5f32a4b4f10c5bd346330be623fbad064eec5129","modified":1502758680316},{"_id":"themes/vexo/README.md","hash":"bc09031573ec51da92b7c41123dad5f097016ab8","modified":1502758680322},{"_id":"themes/vexo/_config.yml","hash":"d24492cff400a76273f16d5145258052379248c2","modified":1510494245240},{"_id":"themes/vexo/lint.sh","hash":"2f3d1e5bab055677cab305b34220ba090a59f49e","modified":1502758680386},{"_id":"themes/vexo/package.json","hash":"959ce9dd213d7bcec60f1de4215b4534e098f232","modified":1502758680388},{"_id":"source/_drafts/list.md","hash":"969460ca51710d9379303991518334911733e3b9","modified":1484827083753},{"_id":"source/_posts/Spring.boot 项目创建之傻瓜教程.md","hash":"cc0c3345465674a4094f2c935b11eed585c40bc8","modified":1502758679966},{"_id":"source/_posts/hexo.md","hash":"c70fe506365e05dbb605032f4655ca06eeb24d5a","modified":1502793789812},{"_id":"source/_posts/git.md","hash":"d2cdc630ba8e661f32680be113f006001138b061","modified":1502758679972},{"_id":"source/_posts/es5.md","hash":"4f9115fb75f3b4690388b62b3950a71ff2dfc9b7","modified":1502774137370},{"_id":"source/_posts/bookslist.md","hash":"6a3dac3d33631bacb8213ed9b9507891f99f0472","modified":1505659533026},{"_id":"source/_posts/http-server.md","hash":"0afdb89c705a1f0f9611839058ee5da47991803a","modified":1502808697640},{"_id":"source/_posts/node.js 模块之 pm2.md","hash":"4d6d996f3418bbc586941adfc68063a829fd87c9","modified":1502758680015},{"_id":"source/_posts/nodeppt.md","hash":"7d9f751c2583d25dbbfed9d629f107af954e3f7e","modified":1502808083588},{"_id":"source/_posts/node.js 6.9.4 升级.md","hash":"afe78c77f30a6312bc9ec4f7d0b585768f90e2f6","modified":1502758680012},{"_id":"source/_posts/node.js下用window.onerror捕获并上报Js错误.md","hash":"2d8dfabd81601954eb065174f0dd2381ad80595f","modified":1502758680018},{"_id":"source/_posts/npm.md","hash":"7a9dc10fd72411e95d429ce6c8cbe8ab0ec6fa25","modified":1502758680025},{"_id":"source/_posts/repeat-request.md","hash":"98b557e5e86f993b154274d3960eb74694998879","modified":1502982467697},{"_id":"source/_posts/nodejs开发规范.md","hash":"8360a85ed87620f46419e047c99950d22cc13c61","modified":1490926752642},{"_id":"source/about/index.md","hash":"54861b4ba18c5d09a6b0d92429cabd617023caa0","modified":1502758680039},{"_id":"source/project/index.md","hash":"9e533e682312e2dc14844baa0c2576f4ee11169a","modified":1502758680048},{"_id":"source/home/index.md","hash":"7922ffd426a95d9d2b4085251f9e3b2dacb986d1","modified":1484827641567},{"_id":"source/tags/index.md","hash":"ae19acf22f855d3acfd9f58d28aebd1bd8ba4def","modified":1502758680052},{"_id":"source/_posts/windows nginx natapp.md","hash":"61a69c7312b2e88289ddbc66ff355eb896e644fc","modified":1502758680034},{"_id":"source/_posts/webstorm.md","hash":"aae5a22ef0ad429ac089360be13e61007549ae15","modified":1502758680032},{"_id":"themes/vexo/layout/archive.ejs","hash":"96ee9d5765fba055a31095cfa2e4532b01ff4656","modified":1502758680369},{"_id":"themes/vexo/layout/layout.ejs","hash":"f2663b2d38d506488954de4ee88437f7ecd8bef6","modified":1502758680375},{"_id":"themes/vexo/layout/about.ejs","hash":"dcd706f2c6eee17e85e5a82e179a34160e8f9b6d","modified":1502758680366},{"_id":"themes/vexo/layout/index.ejs","hash":"368741bd99b47547cd2aa9ae0b86dce433963b51","modified":1502758680372},{"_id":"themes/vexo/layout/project.ejs","hash":"fe0261640ea5f090e75cb9cd8b76ec60a3092801","modified":1502758680380},{"_id":"themes/vexo/layout/page.ejs","hash":"78c8fa5cd612bdc81ae84b1f7210535c8e320141","modified":1502758680377},{"_id":"themes/vexo/layout/tags.ejs","hash":"d212c99fe1283e2939a31c1137a861b985d20054","modified":1502758680383},{"_id":"source/_posts/img/img-04.jpg","hash":"cd8a9ac6f9e317471daac3170cf173152e2949ac","modified":1502758679993},{"_id":"source/_posts/img/img-08.jpg","hash":"518ded069b82365140d6a8c8a22dfd4486a2724e","modified":1502758680009},{"_id":"source/_posts/tool/常用工具.md","hash":"3551257e1417b2a0fb8aa0aa384e99b01d4d27b6","modified":1502758680029},{"_id":"themes/vexo/_source/project/index.md","hash":"9e533e682312e2dc14844baa0c2576f4ee11169a","modified":1502758680335},{"_id":"themes/vexo/layout/_partial/archive.ejs","hash":"99cf513b3ffdd800672cf7171cd60279fedd8576","modified":1502758680346},{"_id":"themes/vexo/layout/_partial/pager.ejs","hash":"b56ebe2bff1223b76865c4a43f2a0c28c08e9e7e","modified":1502758680357},{"_id":"themes/vexo/layout/_partial/tag.ejs","hash":"ff8f66ad350a0da1b7ef03840f70b637024e028c","modified":1502758680360},{"_id":"themes/vexo/layout/_partial/top.ejs","hash":"cb8abc06fa14d3ccc085629bbff0333d2f7aef37","modified":1502758680363},{"_id":"themes/vexo/_source/tags/index.md","hash":"ae19acf22f855d3acfd9f58d28aebd1bd8ba4def","modified":1502758680339},{"_id":"themes/vexo/layout/_partial/head.ejs","hash":"8d00fa001b9d84ba204e10ed3987e7da12a33d21","modified":1502767658548},{"_id":"themes/vexo/layout/_partial/header.ejs","hash":"1d680ac1391216405ef052fe41ea6d9da5400078","modified":1502758680354},{"_id":"themes/vexo/layout/_partial/footer.ejs","hash":"e571075553c44e55973115becda5a1d16ae7c4e2","modified":1502758680348},{"_id":"themes/vexo/_source/about/index.md","hash":"54861b4ba18c5d09a6b0d92429cabd617023caa0","modified":1502758680330},{"_id":"themes/vexo/source/css/_config.styl","hash":"6df1b9d757f5eb60af22a39be5a1f58988795da4","modified":1502767110839},{"_id":"themes/vexo/source/css/style.styl","hash":"9024e244db904aa6992ed946a8ca2b85e9c61a52","modified":1502771971119},{"_id":"themes/vexo/source/js/script.js","hash":"3b16f2ff1d6596b2206127bf7ea8855fb6894987","modified":1502758680460},{"_id":"themes/vexo/source/js/qrious.js","hash":"8017310ee572950086944a4c26e2017522add8e9","modified":1502758680457},{"_id":"source/_posts/img/img-05.jpg","hash":"e191c65e1288b694fb38a3c1d869a7bd682b1451","modified":1502758679996},{"_id":"source/_posts/img/img-03.jpg","hash":"611fb734bd986465f73319c51871fcae4a1844b6","modified":1502758679989},{"_id":"source/_posts/img/img-06.jpg","hash":"a86e1621fec332c714b958b25236a95b8c37f2b3","modified":1502758680001},{"_id":"themes/vexo/source/css/_partial/archive.styl","hash":"5150e6ed6c9b0613da014304048650659412fd33","modified":1502758680400},{"_id":"themes/vexo/source/css/_partial/footer.styl","hash":"28c891d63bd827cb9f34fa5154c01a226d0eeafc","modified":1502758680402},{"_id":"themes/vexo/source/fonts/SourceSansPro.ttf","hash":"1e9f0372c269da205fdbac8cf27cb9cf59f6ad45","modified":1502758680449},{"_id":"themes/vexo/source/css/_partial/markdown.styl","hash":"01a36f1e5ffa3ba0da80764c3a0f3f674b758525","modified":1502758680408},{"_id":"themes/vexo/source/css/_partial/about.styl","hash":"0629b52750aa409e025ee1a76c9afbb2be5376d8","modified":1502758680397},{"_id":"themes/vexo/source/css/_partial/pager.styl","hash":"506c59380c56f03b9ddd08fd18cfaaf17888858a","modified":1502758680412},{"_id":"themes/vexo/source/css/_partial/tags.styl","hash":"14cd7fbc4309ed2c470746497af14d79e62b6641","modified":1502758680417},{"_id":"themes/vexo/source/css/_partial/header.styl","hash":"011eaab0d7657a2fd08a3549a19f284e90da7946","modified":1510483225252},{"_id":"themes/vexo/source/css/_partial/project.styl","hash":"a4dc0b4bdf1b5e8fcd3a4c6f4d9b2ed8c06e72ba","modified":1502758680414},{"_id":"themes/vexo/source/css/images/escheres.png","hash":"55deece3236dcc2fb44c28dec3e8bacbb7b46542","modified":1502758680425},{"_id":"themes/vexo/source/css/plugins/gitment.css","hash":"1190f8b5c9962b96c3d3631b15ab8680faa9ddef","modified":1502758680441},{"_id":"themes/vexo/source/css/images/menu.png","hash":"bdaa35eb1ed119caeb934e15a05b9f4a5396d957","modified":1502758680430},{"_id":"themes/vexo/source/css/images/alipay.jpg","hash":"224a90e90c49c05dee01b39f980bbe396c23ef6e","modified":1510489094532},{"_id":"themes/vexo/source/css/images/logo.png","hash":"d766aad450483a79063754a2965065f057d24def","modified":1510483735175},{"_id":"themes/vexo/source/js/gitment.js","hash":"2d93d84b8d49ad2f9c9c6e02ceacef6c4b0f61bf","modified":1510493257271},{"_id":"themes/vexo/source/css/images/top.png","hash":"611a257907474ca02828319f81b006c1d818bb84","modified":1502758680433},{"_id":"source/_posts/img/img-01.jpg","hash":"cac288cb5f48909a2e442049a699a0c9bf99e82f","modified":1502758679981},{"_id":"themes/vexo/source/css/images/wechat.jpg","hash":"6af0ca0fd7a3cec42b72de4ac77a32dd2d3acdb6","modified":1510488852429},{"_id":"source/_posts/img/img-02.jpg","hash":"b57e63fd643a64a2cf09583b01f74066d107b787","modified":1502758679985},{"_id":"source/_posts/img/img-07.jpg","hash":"62feefbb94be500a845b198d5e7dc816a24b39ca","modified":1502758680006},{"_id":"public/about/index.html","hash":"901c47e8061734f3692bfcfefcb7808e15092110","modified":1510488600734},{"_id":"public/project/index.html","hash":"ae50365b20899eddfb0ec1db8d11181600ea6ad0","modified":1505384026485},{"_id":"public/home/index.html","hash":"e2a358b783b39b82c06805dba0031c0a9f4531b7","modified":1510494252893},{"_id":"public/tags/index.html","hash":"d356ffa39b8af75d5bcb54e3ff9ddefe94aa1fdf","modified":1510494252893},{"_id":"public/2017/08/17/repeat-request/index.html","hash":"e5056a2f38ba1aa0e3bf30cdbf69093841a9804a","modified":1510494252894},{"_id":"public/2017/08/15/http-server/index.html","hash":"3bcf09df1bba7feca65090977b13cc6fd06c7b6c","modified":1510494252894},{"_id":"public/2017/08/15/nodeppt/index.html","hash":"6d08f2660b891f74512593b039f5efe0f35a8bd1","modified":1510494252894},{"_id":"public/2017/08/15/webstorm/index.html","hash":"02659326992971ae0a77d682a2445e7b112b70b3","modified":1510494252894},{"_id":"public/2017/08/15/tool/常用工具/index.html","hash":"0d74dce1a3d7e3b350249e7d099126182787c457","modified":1510494252894},{"_id":"public/2017/08/15/node.js 模块之 pm2/index.html","hash":"0332467502e2135a434b8e1cc67500d7ced5563a","modified":1510494252894},{"_id":"public/2017/08/15/hexo/index.html","hash":"b46478fe459c27ab0fe3408d69362de4b6877b35","modified":1510494252894},{"_id":"public/2017/08/15/git/index.html","hash":"2e33276cc99e5b8fcd2bc0c3310301a2847d79b4","modified":1510494252895},{"_id":"public/2017/08/15/es5/index.html","hash":"ec8ea3b78d6a3bb35d626f25a23326130a01d7cb","modified":1510494252895},{"_id":"public/2017/08/15/Spring.boot 项目创建之傻瓜教程/index.html","hash":"0469b86d092d84a79554bf2f201e24fc31e37ade","modified":1510494252895},{"_id":"public/archives/index.html","hash":"367da7f6246a871a8467929e469da8cde3a27825","modified":1505384026488},{"_id":"public/archives/page/2/index.html","hash":"5d01c30a29d4f823bc7624cf265e0d8accb4b1bf","modified":1505384026488},{"_id":"public/archives/2017/index.html","hash":"f8026f65726a7213450d263fe10408bd842c94d4","modified":1505384026488},{"_id":"public/archives/2017/page/2/index.html","hash":"9555911041fa3546c582ef944bc5c7897442be31","modified":1505384026488},{"_id":"public/archives/2017/01/index.html","hash":"628b0b04810f2132478240d4be095311b51736d3","modified":1505384026488},{"_id":"public/2017/08/15/node.js下用window.onerror捕获并上报Js错误/index.html","hash":"48d55d58c61d7927b91252658df16e598dcc3d3e","modified":1510494252894},{"_id":"public/2017/08/15/windows nginx natapp/index.html","hash":"07ec7091e8ea72aacacee8cbcac284db0d2e2583","modified":1510494252895},{"_id":"public/2017/08/15/npm/index.html","hash":"7fda100ef90c5bd18eea4c3f8d025d283a7daf34","modified":1510494252895},{"_id":"public/2017/08/15/node.js 6.9.4 升级/index.html","hash":"0738e3a17ec553fde81a8f28d0445c2cf24ff654","modified":1510494252895},{"_id":"public/2017/01/19/nodejs开发规范/index.html","hash":"73b4c8a94f0088d59ee0de6be86fa491abc0ad9a","modified":1510494252895},{"_id":"public/2017/09/14/bookslist/index.html","hash":"5a8981f3d1aa3da45dfcdbd6c6f493ce802e022d","modified":1510494252894},{"_id":"public/archives/2017/08/index.html","hash":"f22563bda3366a1280bd842b5a68c9b0cad421c8","modified":1505384026508},{"_id":"public/archives/2017/08/page/2/index.html","hash":"58dfcb4c57cffa5ed2cf15225268ac162df512de","modified":1505384026509},{"_id":"public/index.html","hash":"84e0c0e57d468d1a60c4e89cc380e9c8a807554a","modified":1505659618148},{"_id":"public/page/2/index.html","hash":"7fb865d9b7f01ce013a499d98af7c5d555690924","modified":1505384026509},{"_id":"public/tags/node-js/index.html","hash":"bf9482e6030f9d3b0af7e9263805c4cc90ff02cc","modified":1505384026510},{"_id":"public/tags/node-js-规范/index.html","hash":"a7fb011f98ac6ea695d1743489cf571a0c838919","modified":1505384026510},{"_id":"public/tags/javascript/index.html","hash":"cfe90887359b576b431c0129d01fe37bd9cb4e5d","modified":1505384026510},{"_id":"public/archives/2017/09/index.html","hash":"32565609448546c8124949b0521de372d0fd570e","modified":1505384026514},{"_id":"public/css/images/escheres.png","hash":"55deece3236dcc2fb44c28dec3e8bacbb7b46542","modified":1505384026514},{"_id":"public/css/images/menu.png","hash":"bdaa35eb1ed119caeb934e15a05b9f4a5396d957","modified":1505384026514},{"_id":"public/css/images/alipay.jpg","hash":"224a90e90c49c05dee01b39f980bbe396c23ef6e","modified":1510489118535},{"_id":"public/css/images/logo.png","hash":"718c6e48956249121cf3cca1a22a99f8372a3f0d","modified":1505384026514},{"_id":"public/css/images/top.png","hash":"611a257907474ca02828319f81b006c1d818bb84","modified":1505384026514},{"_id":"public/css/images/wechat.jpg","hash":"6af0ca0fd7a3cec42b72de4ac77a32dd2d3acdb6","modified":1510489118535},{"_id":"public/js/script.js","hash":"a19ed5f3c1d9c64855f162bce7ec66b47aada780","modified":1505384027117},{"_id":"public/js/qrious.js","hash":"a9271e81e2ac6a692b1c133811afa33f0f3d7dc5","modified":1505384027117},{"_id":"public/css/style.css","hash":"1e65476a37568a40f79034761f330e23583a6cbc","modified":1505384027117},{"_id":"public/css/plugins/gitment.css","hash":"541ff18d7f3542b5663dc6aad06d43e135332b71","modified":1505384027117},{"_id":"public/js/gitment.js","hash":"6e586a17f72c5acbbd3a08276077114610d513e6","modified":1510493264040},{"_id":"public/fonts/SourceSansPro.ttf","hash":"1e9f0372c269da205fdbac8cf27cb9cf59f6ad45","modified":1505384027117},{"_id":"public/tags/book/index.html","hash":"8301d264f781700e0e6dc3ca8dc9866d59f0e701","modified":1505659618149},{"_id":"themes/vexo/source/css/images/logo.ico","hash":"d766aad450483a79063754a2965065f057d24def","modified":1510483735175}],"Category":[],"Data":[],"Page":[{"title":"About","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: About\nlayout: about\n---","date":"2017-08-15T00:58:00.039Z","updated":"2017-08-15T00:58:00.039Z","path":"about/index.html","comments":1,"_id":"cj7kas44b000ey0jh5xiav0ay","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Project","layout":"project","_content":"","source":"project/index.md","raw":"---\ntitle: Project\nlayout: project\n---\n","date":"2017-08-15T00:58:00.048Z","updated":"2017-08-15T00:58:00.048Z","path":"project/index.html","comments":1,"_id":"cj7kas44f000gy0jh1ilkbevs","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"hexo部署项目","date":"2017-01-19T11:57:39.000Z","_content":"\n## 命令行安装\n```\nnpm install -g hexo-cli\n```\n\n## 初始化\n```\nhexo init <folder>\n```\n\n## new 新建一篇文章\n```\nhexo new [layout] <title>\n```\n新建一篇文章。如果没有设置 `layout` 的话，默认使用 `_config.yml` 中的 `default_layout` 参数代替。如果标题包含空格的话，请使用引号括起来。\n\n## generate 生成静态文件\n```\nhexo generate\n```\n-d, --deploy\t文件生成后立即部署网站\n-w, --watch\t监视文件变动\n\n## publish 发表草稿。\n```\nhexo publish [layout] <filename>\n```\n\n## server\n* 启动服务器。默认情况下，访问网址为： http://localhost:4000/。\n```\nhexo server\n```\n-p, --port\t重设端口\n-s, --static\t只使用静态文件\n-l, --log\t启动日记记录，使用覆盖记录格式\n\n## deploy 部署网站。\n```\nhexo deploy\n```\n-g, --generate\t部署之前预先生成静态文件\n\n## render 渲染文件。\n```\nhexo render <file1> [file2] ...\n```\n-o, --output\t设置输出路径\n\n## clean\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。\n\n## 部署成功结果\n- [http://blog.yxxit.com/](http://blog.yxxit.com/)\n\n## 部署错误\n```\n> /usr/local/bin/jekyll build --safe\nConfiguration file: /data/_config.yml\njekyll 3.3.0 | Error:  The landscape theme could not be found.\n```\n\n在根目录下建一个.nojekyll空文件就可以了，因为Coding默认支持Jekyll搭建网站\n\n## 参考\n- [hexo.io 官网](https://hexo.io/zh-cn/docs/themes.html)\n- [在 Coding 上搭建 Hexo 个人博客！](https://segmentfault.com/a/1190000002900848?utm_source=tuicool)\n- [hexo 部署至Git遇到的坑](http://www.jianshu.com/p/67c57c70f275)\n- [hexo常见问题解决方案](http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88)\n- [hexo博客搭建时遇到的一些问题](https://segmentfault.com/a/1190000003710962?_ea=336354)\n- [玩转git之webhook应用初探](http://ued.ctrip.com/blog/play-with-git-webhook-application.html)\n- [Hexo常见问题解决方案](https://xuanwo.org/2014/08/14/hexo-usual-problem/)","source":"home/index.md","raw":"---\ntitle: hexo部署项目\ndate: 2017-01-19 19:57:39\n---\n\n## 命令行安装\n```\nnpm install -g hexo-cli\n```\n\n## 初始化\n```\nhexo init <folder>\n```\n\n## new 新建一篇文章\n```\nhexo new [layout] <title>\n```\n新建一篇文章。如果没有设置 `layout` 的话，默认使用 `_config.yml` 中的 `default_layout` 参数代替。如果标题包含空格的话，请使用引号括起来。\n\n## generate 生成静态文件\n```\nhexo generate\n```\n-d, --deploy\t文件生成后立即部署网站\n-w, --watch\t监视文件变动\n\n## publish 发表草稿。\n```\nhexo publish [layout] <filename>\n```\n\n## server\n* 启动服务器。默认情况下，访问网址为： http://localhost:4000/。\n```\nhexo server\n```\n-p, --port\t重设端口\n-s, --static\t只使用静态文件\n-l, --log\t启动日记记录，使用覆盖记录格式\n\n## deploy 部署网站。\n```\nhexo deploy\n```\n-g, --generate\t部署之前预先生成静态文件\n\n## render 渲染文件。\n```\nhexo render <file1> [file2] ...\n```\n-o, --output\t设置输出路径\n\n## clean\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。\n\n## 部署成功结果\n- [http://blog.yxxit.com/](http://blog.yxxit.com/)\n\n## 部署错误\n```\n> /usr/local/bin/jekyll build --safe\nConfiguration file: /data/_config.yml\njekyll 3.3.0 | Error:  The landscape theme could not be found.\n```\n\n在根目录下建一个.nojekyll空文件就可以了，因为Coding默认支持Jekyll搭建网站\n\n## 参考\n- [hexo.io 官网](https://hexo.io/zh-cn/docs/themes.html)\n- [在 Coding 上搭建 Hexo 个人博客！](https://segmentfault.com/a/1190000002900848?utm_source=tuicool)\n- [hexo 部署至Git遇到的坑](http://www.jianshu.com/p/67c57c70f275)\n- [hexo常见问题解决方案](http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88)\n- [hexo博客搭建时遇到的一些问题](https://segmentfault.com/a/1190000003710962?_ea=336354)\n- [玩转git之webhook应用初探](http://ued.ctrip.com/blog/play-with-git-webhook-application.html)\n- [Hexo常见问题解决方案](https://xuanwo.org/2014/08/14/hexo-usual-problem/)","updated":"2017-01-19T12:07:21.567Z","path":"home/index.html","_id":"cj7kas44m000iy0jhpo2qjdl1","comments":1,"layout":"page","content":"<h2 id=\"命令行安装\"><a href=\"#命令行安装\" class=\"headerlink\" title=\"命令行安装\"></a>命令行安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;folder&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"new-新建一篇文章\"><a href=\"#new-新建一篇文章\" class=\"headerlink\" title=\"new 新建一篇文章\"></a>new 新建一篇文章</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <code>_config.yml</code> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<h2 id=\"generate-生成静态文件\"><a href=\"#generate-生成静态文件\" class=\"headerlink\" title=\"generate 生成静态文件\"></a>generate 生成静态文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate</div></pre></td></tr></table></figure>\n<p>-d, –deploy    文件生成后立即部署网站<br>-w, –watch    监视文件变动</p>\n<h2 id=\"publish-发表草稿。\"><a href=\"#publish-发表草稿。\" class=\"headerlink\" title=\"publish 发表草稿。\"></a>publish 发表草稿。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo publish [layout] &lt;filename&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h2><ul>\n<li>启动服务器。默认情况下，访问网址为： <a href=\"http://localhost:4000/。\" target=\"_blank\" rel=\"external\">http://localhost:4000/。</a><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>-p, –port    重设端口<br>-s, –static    只使用静态文件<br>-l, –log    启动日记记录，使用覆盖记录格式</p>\n<h2 id=\"deploy-部署网站。\"><a href=\"#deploy-部署网站。\" class=\"headerlink\" title=\"deploy 部署网站。\"></a>deploy 部署网站。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy</div></pre></td></tr></table></figure>\n<p>-g, –generate    部署之前预先生成静态文件</p>\n<h2 id=\"render-渲染文件。\"><a href=\"#render-渲染文件。\" class=\"headerlink\" title=\"render 渲染文件。\"></a>render 渲染文件。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo render &lt;file1&gt; [file2] ...</div></pre></td></tr></table></figure>\n<p>-o, –output    设置输出路径</p>\n<h2 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h2><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>\n<h2 id=\"部署成功结果\"><a href=\"#部署成功结果\" class=\"headerlink\" title=\"部署成功结果\"></a>部署成功结果</h2><ul>\n<li><a href=\"http://blog.yxxit.com/\" target=\"_blank\" rel=\"external\">http://blog.yxxit.com/</a></li>\n</ul>\n<h2 id=\"部署错误\"><a href=\"#部署错误\" class=\"headerlink\" title=\"部署错误\"></a>部署错误</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; /usr/local/bin/jekyll build --safe</div><div class=\"line\">Configuration file: /data/_config.yml</div><div class=\"line\">jekyll 3.3.0 | Error:  The landscape theme could not be found.</div></pre></td></tr></table></figure>\n<p>在根目录下建一个.nojekyll空文件就可以了，因为Coding默认支持Jekyll搭建网站</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://hexo.io/zh-cn/docs/themes.html\" target=\"_blank\" rel=\"external\">hexo.io 官网</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000002900848?utm_source=tuicool\" target=\"_blank\" rel=\"external\">在 Coding 上搭建 Hexo 个人博客！</a></li>\n<li><a href=\"http://www.jianshu.com/p/67c57c70f275\" target=\"_blank\" rel=\"external\">hexo 部署至Git遇到的坑</a></li>\n<li><a href=\"http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\" target=\"_blank\" rel=\"external\">hexo常见问题解决方案</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000003710962?_ea=336354\" target=\"_blank\" rel=\"external\">hexo博客搭建时遇到的一些问题</a></li>\n<li><a href=\"http://ued.ctrip.com/blog/play-with-git-webhook-application.html\" target=\"_blank\" rel=\"external\">玩转git之webhook应用初探</a></li>\n<li><a href=\"https://xuanwo.org/2014/08/14/hexo-usual-problem/\" target=\"_blank\" rel=\"external\">Hexo常见问题解决方案</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"命令行安装\"><a href=\"#命令行安装\" class=\"headerlink\" title=\"命令行安装\"></a>命令行安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;folder&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"new-新建一篇文章\"><a href=\"#new-新建一篇文章\" class=\"headerlink\" title=\"new 新建一篇文章\"></a>new 新建一篇文章</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <code>_config.yml</code> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<h2 id=\"generate-生成静态文件\"><a href=\"#generate-生成静态文件\" class=\"headerlink\" title=\"generate 生成静态文件\"></a>generate 生成静态文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate</div></pre></td></tr></table></figure>\n<p>-d, –deploy    文件生成后立即部署网站<br>-w, –watch    监视文件变动</p>\n<h2 id=\"publish-发表草稿。\"><a href=\"#publish-发表草稿。\" class=\"headerlink\" title=\"publish 发表草稿。\"></a>publish 发表草稿。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo publish [layout] &lt;filename&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h2><ul>\n<li>启动服务器。默认情况下，访问网址为： <a href=\"http://localhost:4000/。\" target=\"_blank\" rel=\"external\">http://localhost:4000/。</a><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>-p, –port    重设端口<br>-s, –static    只使用静态文件<br>-l, –log    启动日记记录，使用覆盖记录格式</p>\n<h2 id=\"deploy-部署网站。\"><a href=\"#deploy-部署网站。\" class=\"headerlink\" title=\"deploy 部署网站。\"></a>deploy 部署网站。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy</div></pre></td></tr></table></figure>\n<p>-g, –generate    部署之前预先生成静态文件</p>\n<h2 id=\"render-渲染文件。\"><a href=\"#render-渲染文件。\" class=\"headerlink\" title=\"render 渲染文件。\"></a>render 渲染文件。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo render &lt;file1&gt; [file2] ...</div></pre></td></tr></table></figure>\n<p>-o, –output    设置输出路径</p>\n<h2 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h2><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>\n<h2 id=\"部署成功结果\"><a href=\"#部署成功结果\" class=\"headerlink\" title=\"部署成功结果\"></a>部署成功结果</h2><ul>\n<li><a href=\"http://blog.yxxit.com/\" target=\"_blank\" rel=\"external\">http://blog.yxxit.com/</a></li>\n</ul>\n<h2 id=\"部署错误\"><a href=\"#部署错误\" class=\"headerlink\" title=\"部署错误\"></a>部署错误</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt; /usr/local/bin/jekyll build --safe</div><div class=\"line\">Configuration file: /data/_config.yml</div><div class=\"line\">jekyll 3.3.0 | Error:  The landscape theme could not be found.</div></pre></td></tr></table></figure>\n<p>在根目录下建一个.nojekyll空文件就可以了，因为Coding默认支持Jekyll搭建网站</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://hexo.io/zh-cn/docs/themes.html\" target=\"_blank\" rel=\"external\">hexo.io 官网</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000002900848?utm_source=tuicool\" target=\"_blank\" rel=\"external\">在 Coding 上搭建 Hexo 个人博客！</a></li>\n<li><a href=\"http://www.jianshu.com/p/67c57c70f275\" target=\"_blank\" rel=\"external\">hexo 部署至Git遇到的坑</a></li>\n<li><a href=\"http://wp.huangshiyang.com/hexo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\" target=\"_blank\" rel=\"external\">hexo常见问题解决方案</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000003710962?_ea=336354\" target=\"_blank\" rel=\"external\">hexo博客搭建时遇到的一些问题</a></li>\n<li><a href=\"http://ued.ctrip.com/blog/play-with-git-webhook-application.html\" target=\"_blank\" rel=\"external\">玩转git之webhook应用初探</a></li>\n<li><a href=\"https://xuanwo.org/2014/08/14/hexo-usual-problem/\" target=\"_blank\" rel=\"external\">Hexo常见问题解决方案</a></li>\n</ul>\n"},{"title":"Tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: Tags\nlayout: tags\n---\n","date":"2017-08-15T00:58:00.052Z","updated":"2017-08-15T00:58:00.052Z","path":"tags/index.html","comments":1,"_id":"cj7kas44q000ly0jhnhit7dql","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Spring.boot 项目创建之傻瓜教程","_content":"\n## 新建项目\n\n#### 【File】-->【New】-->【Spring Starter Project】\n![新建项目](/view/img/img-01.jpg)\n\n#### 填写项目信息\n* Name\t\t项目名称\n* Location \t文件位置\n* Type\t\t选择Maven\n* Group\t\tcom.shaw.wap\n* Artifact\twap\n* version\t0.0.1-SNAPSHOT\n* Description\t描述\n* Package\t包结构\n![New Spring Start Project](/view/img/img-02.jpg)\n\n\n#### 选择Spring Boot 版本\n\n![New Spring Start Project](/view/img/img-03.jpg)\n\n#### 导入架包\n![New Spring Start Project](/view/img/img-04.jpg)\n\n#### 项目结构\n![project](/view/img/img-05.jpg)\n\n#### 备注\napplication.properties \t配置信息\nShawSpringWapApplication main 方法\n\n## 启动服务\n\n#### 创建 HomeController.java\n\n![创建HomeController](/view/img/img-06.jpg)\n\n```\npackage com.shaw.wap;\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HomeController {\n\n\t@RequestMapping(value=\"/hello\",method=RequestMethod.GET)\n\tpublic String Say(){\n\t\treturn \"hello world!\";\n\t}\n}\n\n```\n\n#### 运行程序\n\n![运行程序](/view/img/img-07.jpg)\n\n#### 范围查看效果\n\n访问链接：http://localhost:8080/hello\n\n![查看结果](/view/img/img-08.jpg)","source":"_posts/Spring.boot 项目创建之傻瓜教程.md","raw":"---\ntitle: Spring.boot 项目创建之傻瓜教程\n---\n\n## 新建项目\n\n#### 【File】-->【New】-->【Spring Starter Project】\n![新建项目](/view/img/img-01.jpg)\n\n#### 填写项目信息\n* Name\t\t项目名称\n* Location \t文件位置\n* Type\t\t选择Maven\n* Group\t\tcom.shaw.wap\n* Artifact\twap\n* version\t0.0.1-SNAPSHOT\n* Description\t描述\n* Package\t包结构\n![New Spring Start Project](/view/img/img-02.jpg)\n\n\n#### 选择Spring Boot 版本\n\n![New Spring Start Project](/view/img/img-03.jpg)\n\n#### 导入架包\n![New Spring Start Project](/view/img/img-04.jpg)\n\n#### 项目结构\n![project](/view/img/img-05.jpg)\n\n#### 备注\napplication.properties \t配置信息\nShawSpringWapApplication main 方法\n\n## 启动服务\n\n#### 创建 HomeController.java\n\n![创建HomeController](/view/img/img-06.jpg)\n\n```\npackage com.shaw.wap;\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HomeController {\n\n\t@RequestMapping(value=\"/hello\",method=RequestMethod.GET)\n\tpublic String Say(){\n\t\treturn \"hello world!\";\n\t}\n}\n\n```\n\n#### 运行程序\n\n![运行程序](/view/img/img-07.jpg)\n\n#### 范围查看效果\n\n访问链接：http://localhost:8080/hello\n\n![查看结果](/view/img/img-08.jpg)","slug":"Spring.boot 项目创建之傻瓜教程","published":1,"date":"2017-08-15T00:57:59.965Z","updated":"2017-08-15T00:57:59.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7kas41e0000y0jhajmroj38","content":"<h2 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h2><h4 id=\"【File】–-gt-【New】–-gt-【Spring-Starter-Project】\"><a href=\"#【File】–-gt-【New】–-gt-【Spring-Starter-Project】\" class=\"headerlink\" title=\"【File】–&gt;【New】–&gt;【Spring Starter Project】\"></a>【File】–&gt;【New】–&gt;【Spring Starter Project】</h4><p><img src=\"/view/img/img-01.jpg\" alt=\"新建项目\"></p>\n<h4 id=\"填写项目信息\"><a href=\"#填写项目信息\" class=\"headerlink\" title=\"填写项目信息\"></a>填写项目信息</h4><ul>\n<li>Name        项目名称</li>\n<li>Location     文件位置</li>\n<li>Type        选择Maven</li>\n<li>Group        com.shaw.wap</li>\n<li>Artifact    wap</li>\n<li>version    0.0.1-SNAPSHOT</li>\n<li>Description    描述</li>\n<li>Package    包结构<br><img src=\"/view/img/img-02.jpg\" alt=\"New Spring Start Project\"></li>\n</ul>\n<h4 id=\"选择Spring-Boot-版本\"><a href=\"#选择Spring-Boot-版本\" class=\"headerlink\" title=\"选择Spring Boot 版本\"></a>选择Spring Boot 版本</h4><p><img src=\"/view/img/img-03.jpg\" alt=\"New Spring Start Project\"></p>\n<h4 id=\"导入架包\"><a href=\"#导入架包\" class=\"headerlink\" title=\"导入架包\"></a>导入架包</h4><p><img src=\"/view/img/img-04.jpg\" alt=\"New Spring Start Project\"></p>\n<h4 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h4><p><img src=\"/view/img/img-05.jpg\" alt=\"project\"></p>\n<h4 id=\"备注\"><a href=\"#备注\" class=\"headerlink\" title=\"备注\"></a>备注</h4><p>application.properties     配置信息<br>ShawSpringWapApplication main 方法</p>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><h4 id=\"创建-HomeController-java\"><a href=\"#创建-HomeController-java\" class=\"headerlink\" title=\"创建 HomeController.java\"></a>创建 HomeController.java</h4><p><img src=\"/view/img/img-06.jpg\" alt=\"创建HomeController\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">package com.shaw.wap;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</div><div class=\"line\">import org.springframework.web.bind.annotation.RequestMethod;</div><div class=\"line\">import org.springframework.web.bind.annotation.RestController;</div><div class=\"line\"></div><div class=\"line\">@RestController</div><div class=\"line\">public class HomeController &#123;</div><div class=\"line\"></div><div class=\"line\">\t@RequestMapping(value=&quot;/hello&quot;,method=RequestMethod.GET)</div><div class=\"line\">\tpublic String Say()&#123;</div><div class=\"line\">\t\treturn &quot;hello world!&quot;;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"运行程序\"><a href=\"#运行程序\" class=\"headerlink\" title=\"运行程序\"></a>运行程序</h4><p><img src=\"/view/img/img-07.jpg\" alt=\"运行程序\"></p>\n<h4 id=\"范围查看效果\"><a href=\"#范围查看效果\" class=\"headerlink\" title=\"范围查看效果\"></a>范围查看效果</h4><p>访问链接：<a href=\"http://localhost:8080/hello\" target=\"_blank\" rel=\"external\">http://localhost:8080/hello</a></p>\n<p><img src=\"/view/img/img-08.jpg\" alt=\"查看结果\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h2><h4 id=\"【File】–-gt-【New】–-gt-【Spring-Starter-Project】\"><a href=\"#【File】–-gt-【New】–-gt-【Spring-Starter-Project】\" class=\"headerlink\" title=\"【File】–&gt;【New】–&gt;【Spring Starter Project】\"></a>【File】–&gt;【New】–&gt;【Spring Starter Project】</h4><p><img src=\"/view/img/img-01.jpg\" alt=\"新建项目\"></p>\n<h4 id=\"填写项目信息\"><a href=\"#填写项目信息\" class=\"headerlink\" title=\"填写项目信息\"></a>填写项目信息</h4><ul>\n<li>Name        项目名称</li>\n<li>Location     文件位置</li>\n<li>Type        选择Maven</li>\n<li>Group        com.shaw.wap</li>\n<li>Artifact    wap</li>\n<li>version    0.0.1-SNAPSHOT</li>\n<li>Description    描述</li>\n<li>Package    包结构<br><img src=\"/view/img/img-02.jpg\" alt=\"New Spring Start Project\"></li>\n</ul>\n<h4 id=\"选择Spring-Boot-版本\"><a href=\"#选择Spring-Boot-版本\" class=\"headerlink\" title=\"选择Spring Boot 版本\"></a>选择Spring Boot 版本</h4><p><img src=\"/view/img/img-03.jpg\" alt=\"New Spring Start Project\"></p>\n<h4 id=\"导入架包\"><a href=\"#导入架包\" class=\"headerlink\" title=\"导入架包\"></a>导入架包</h4><p><img src=\"/view/img/img-04.jpg\" alt=\"New Spring Start Project\"></p>\n<h4 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h4><p><img src=\"/view/img/img-05.jpg\" alt=\"project\"></p>\n<h4 id=\"备注\"><a href=\"#备注\" class=\"headerlink\" title=\"备注\"></a>备注</h4><p>application.properties     配置信息<br>ShawSpringWapApplication main 方法</p>\n<h2 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h2><h4 id=\"创建-HomeController-java\"><a href=\"#创建-HomeController-java\" class=\"headerlink\" title=\"创建 HomeController.java\"></a>创建 HomeController.java</h4><p><img src=\"/view/img/img-06.jpg\" alt=\"创建HomeController\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">package com.shaw.wap;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.web.bind.annotation.RequestMapping;</div><div class=\"line\">import org.springframework.web.bind.annotation.RequestMethod;</div><div class=\"line\">import org.springframework.web.bind.annotation.RestController;</div><div class=\"line\"></div><div class=\"line\">@RestController</div><div class=\"line\">public class HomeController &#123;</div><div class=\"line\"></div><div class=\"line\">\t@RequestMapping(value=&quot;/hello&quot;,method=RequestMethod.GET)</div><div class=\"line\">\tpublic String Say()&#123;</div><div class=\"line\">\t\treturn &quot;hello world!&quot;;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"运行程序\"><a href=\"#运行程序\" class=\"headerlink\" title=\"运行程序\"></a>运行程序</h4><p><img src=\"/view/img/img-07.jpg\" alt=\"运行程序\"></p>\n<h4 id=\"范围查看效果\"><a href=\"#范围查看效果\" class=\"headerlink\" title=\"范围查看效果\"></a>范围查看效果</h4><p>访问链接：<a href=\"http://localhost:8080/hello\" target=\"_blank\" rel=\"external\">http://localhost:8080/hello</a></p>\n<p><img src=\"/view/img/img-08.jpg\" alt=\"查看结果\"></p>\n"},{"title":"list","_content":"","source":"_drafts/list.md","raw":"---\ntitle: list\ntags:\n---\n","slug":"list","published":0,"date":"2017-08-13T14:06:35.941Z","updated":"2017-01-19T11:58:03.753Z","_id":"cj7kas41r0001y0jhj8ff9dkd","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"hexo","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### 命令行安装\n\n```bash\n$ npm install -g hexo\n```\n\n### 初始化\n```\nhexo init <folder>\n```\n\n### 新建一篇文章\n``` bash\n$ hexo new \"My New Post\"\n```\n新建一篇文章。如果没有设置 `layout` 的话，默认使用 `_config.yml`` 中的 `default_layout` 参数代替。如果标题包含空格的话，请使用引号括起来。\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n启动服务器。默认情况下，访问网址为： http://localhost:4000/\n``` bash\n$ hexo server\n```\n选项\t描述\n-p, --port\t重设端口\n-s, --static\t只使用静态文件\n-l, --log\t启动日记记录，使用覆盖记录格式\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### generate 生成静态文件\n\n``` bash\n$ hexo generate\n```\n选项\t描述\n-d, --deploy\t文件生成后立即部署网站\n-w, --watch\t监视文件变动\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### deploy 部署网站。\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### render 渲染文件。\n```\nhexo render <file1> [file2] ...\n```\n-o, --output\t设置输出路径\n\n### clean\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。\n","source":"_posts/hexo.md","raw":"---\ntitle: hexo \n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### 命令行安装\n\n```bash\n$ npm install -g hexo\n```\n\n### 初始化\n```\nhexo init <folder>\n```\n\n### 新建一篇文章\n``` bash\n$ hexo new \"My New Post\"\n```\n新建一篇文章。如果没有设置 `layout` 的话，默认使用 `_config.yml`` 中的 `default_layout` 参数代替。如果标题包含空格的话，请使用引号括起来。\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n启动服务器。默认情况下，访问网址为： http://localhost:4000/\n``` bash\n$ hexo server\n```\n选项\t描述\n-p, --port\t重设端口\n-s, --static\t只使用静态文件\n-l, --log\t启动日记记录，使用覆盖记录格式\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### generate 生成静态文件\n\n``` bash\n$ hexo generate\n```\n选项\t描述\n-d, --deploy\t文件生成后立即部署网站\n-w, --watch\t监视文件变动\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### deploy 部署网站。\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### render 渲染文件。\n```\nhexo render <file1> [file2] ...\n```\n-o, --output\t设置输出路径\n\n### clean\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。\n","slug":"hexo","published":1,"date":"2017-08-15T00:57:59.973Z","updated":"2017-08-15T10:43:09.812Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7kas4210002y0jhlie862ny","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"命令行安装\"><a href=\"#命令行安装\" class=\"headerlink\" title=\"命令行安装\"></a>命令行安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo</div></pre></td></tr></table></figure>\n<h3 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;folder&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"新建一篇文章\"><a href=\"#新建一篇文章\" class=\"headerlink\" title=\"新建一篇文章\"></a>新建一篇文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <code>_config.yml`` 中的</code>default_layout` 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><p>启动服务器。默认情况下，访问网址为： <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure></p>\n<p>选项    描述<br>-p, –port    重设端口<br>-s, –static    只使用静态文件<br>-l, –log    启动日记记录，使用覆盖记录格式</p>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"generate-生成静态文件\"><a href=\"#generate-生成静态文件\" class=\"headerlink\" title=\"generate 生成静态文件\"></a>generate 生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>选项    描述<br>-d, –deploy    文件生成后立即部署网站<br>-w, –watch    监视文件变动</p>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"deploy-部署网站。\"><a href=\"#deploy-部署网站。\" class=\"headerlink\" title=\"deploy 部署网站。\"></a>deploy 部署网站。</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n<h3 id=\"render-渲染文件。\"><a href=\"#render-渲染文件。\" class=\"headerlink\" title=\"render 渲染文件。\"></a>render 渲染文件。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo render &lt;file1&gt; [file2] ...</div></pre></td></tr></table></figure>\n<p>-o, –output    设置输出路径</p>\n<h3 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h3><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"命令行安装\"><a href=\"#命令行安装\" class=\"headerlink\" title=\"命令行安装\"></a>命令行安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo</div></pre></td></tr></table></figure>\n<h3 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;folder&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"新建一篇文章\"><a href=\"#新建一篇文章\" class=\"headerlink\" title=\"新建一篇文章\"></a>新建一篇文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <code>_config.yml`` 中的</code>default_layout` 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><p>启动服务器。默认情况下，访问网址为： <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure></p>\n<p>选项    描述<br>-p, –port    重设端口<br>-s, –static    只使用静态文件<br>-l, –log    启动日记记录，使用覆盖记录格式</p>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"generate-生成静态文件\"><a href=\"#generate-生成静态文件\" class=\"headerlink\" title=\"generate 生成静态文件\"></a>generate 生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>选项    描述<br>-d, –deploy    文件生成后立即部署网站<br>-w, –watch    监视文件变动</p>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"deploy-部署网站。\"><a href=\"#deploy-部署网站。\" class=\"headerlink\" title=\"deploy 部署网站。\"></a>deploy 部署网站。</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n<h3 id=\"render-渲染文件。\"><a href=\"#render-渲染文件。\" class=\"headerlink\" title=\"render 渲染文件。\"></a>render 渲染文件。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo render &lt;file1&gt; [file2] ...</div></pre></td></tr></table></figure>\n<p>-o, –output    设置输出路径</p>\n<h3 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h3><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>\n"},{"title":"Git 常用命令","_content":"\n> Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。\n\n## 安装\n\n## 命令\n\n#### 拉取远程代码\ngit clone https://github.com/shawflying/reskit.git\n\n#### 拉取分支代码\ngit fetch\ngit checkout -b fly origin/fly\n\n#### 查看远程分支\ngit branch -r\n\n#### 拉取远程分支并创建本地分支\n1. 方法1\ngit checkout -b 本地分支名x origin/远程分支名x\n使用该方式会在本地新建分支x，并自动切换到该本地分支x。\n\n2. 方法2\ngit fetch origin 远程分支名x:本地分支名x\n使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。\n\n#### 分支合并\n如果无冲突，OK\n如果有冲突，该如何解决\ngit log --author=\"yanxxmh\" --after=\"1 week ago\" --oneline\n\n#### checkout\n```\ngit checkout . #本地所有修改的。没有的提交的，都返回到原来的状态\ngit stash #把所有没有提交的修改暂存到stash里面。可用git stash pop回复。\ngit reset --hard HASH #返回到某个节点，不保留修改。\ngit reset --soft HASH #返回到某个节点。保留修改\n```\n\n#### 拉取制定版本代码\n1. 将制定版本闯将一个分支\n2. 使用下面命令下载指定分支信息\n```\ngit clone -b v1 --depth 1 https://github.com/shawflying/reskit.git\ngit clone -b vue.js2.0 --depth 1 https://github.com/shawflying/reskit.git\n```\n\n### 切换分支\n\n查询所有分支\n```\ngit branch -a\n```\n\n查询当前分支\n```\ngit branch\n```\n\n切换分支\n```\ngit checkout devlop\n\ngit branch --set-upstream-to=origin/master origin/账单详情添加跳转链接\n\ngit branch --set-upstream-to=origin/账单详情添加跳转链接 origin/master\n```\n\n```\nroot@ubuntu-129:/data/code/mohoo-telecom-wechat-mobile# git pull\nUsername for 'https://git.coding.net': xxxxx\nPassword for 'https://yanxxmh@git.coding.net': \nremote: Counting objects: 4, done.\nremote: Compressing objects: 100% (3/3), done.\nremote: Total 4 (delta 2), reused 0 (delta 0)\nUnpacking objects: 100% (4/4), done.\nFrom https://github.com/shawflying/reskit\n   eb8b3be..fa2f6d5  账单详情添加跳转链接 -> origin/账单详情添加跳转链接\nAlready up-to-date.\n```\n\n切换到master\n```\ngit checkout master\n```\n\n切换到其他\n```\ngit checkout \n```\n\n拉取代码\n```\ngit pull <remote> <branch>\n```\n\n当前分支状态\n```\ngit status\n```","source":"_posts/git.md","raw":"---\ntitle: Git 常用命令\n---\n\n> Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。\n\n## 安装\n\n## 命令\n\n#### 拉取远程代码\ngit clone https://github.com/shawflying/reskit.git\n\n#### 拉取分支代码\ngit fetch\ngit checkout -b fly origin/fly\n\n#### 查看远程分支\ngit branch -r\n\n#### 拉取远程分支并创建本地分支\n1. 方法1\ngit checkout -b 本地分支名x origin/远程分支名x\n使用该方式会在本地新建分支x，并自动切换到该本地分支x。\n\n2. 方法2\ngit fetch origin 远程分支名x:本地分支名x\n使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。\n\n#### 分支合并\n如果无冲突，OK\n如果有冲突，该如何解决\ngit log --author=\"yanxxmh\" --after=\"1 week ago\" --oneline\n\n#### checkout\n```\ngit checkout . #本地所有修改的。没有的提交的，都返回到原来的状态\ngit stash #把所有没有提交的修改暂存到stash里面。可用git stash pop回复。\ngit reset --hard HASH #返回到某个节点，不保留修改。\ngit reset --soft HASH #返回到某个节点。保留修改\n```\n\n#### 拉取制定版本代码\n1. 将制定版本闯将一个分支\n2. 使用下面命令下载指定分支信息\n```\ngit clone -b v1 --depth 1 https://github.com/shawflying/reskit.git\ngit clone -b vue.js2.0 --depth 1 https://github.com/shawflying/reskit.git\n```\n\n### 切换分支\n\n查询所有分支\n```\ngit branch -a\n```\n\n查询当前分支\n```\ngit branch\n```\n\n切换分支\n```\ngit checkout devlop\n\ngit branch --set-upstream-to=origin/master origin/账单详情添加跳转链接\n\ngit branch --set-upstream-to=origin/账单详情添加跳转链接 origin/master\n```\n\n```\nroot@ubuntu-129:/data/code/mohoo-telecom-wechat-mobile# git pull\nUsername for 'https://git.coding.net': xxxxx\nPassword for 'https://yanxxmh@git.coding.net': \nremote: Counting objects: 4, done.\nremote: Compressing objects: 100% (3/3), done.\nremote: Total 4 (delta 2), reused 0 (delta 0)\nUnpacking objects: 100% (4/4), done.\nFrom https://github.com/shawflying/reskit\n   eb8b3be..fa2f6d5  账单详情添加跳转链接 -> origin/账单详情添加跳转链接\nAlready up-to-date.\n```\n\n切换到master\n```\ngit checkout master\n```\n\n切换到其他\n```\ngit checkout \n```\n\n拉取代码\n```\ngit pull <remote> <branch>\n```\n\n当前分支状态\n```\ngit status\n```","slug":"git","published":1,"date":"2017-08-15T00:57:59.971Z","updated":"2017-08-15T00:57:59.972Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7kas4250003y0jh1r2zsc4d","content":"<blockquote>\n<p>Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。</p>\n</blockquote>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><h4 id=\"拉取远程代码\"><a href=\"#拉取远程代码\" class=\"headerlink\" title=\"拉取远程代码\"></a>拉取远程代码</h4><p>git clone <a href=\"https://github.com/shawflying/reskit.git\" target=\"_blank\" rel=\"external\">https://github.com/shawflying/reskit.git</a></p>\n<h4 id=\"拉取分支代码\"><a href=\"#拉取分支代码\" class=\"headerlink\" title=\"拉取分支代码\"></a>拉取分支代码</h4><p>git fetch<br>git checkout -b fly origin/fly</p>\n<h4 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h4><p>git branch -r</p>\n<h4 id=\"拉取远程分支并创建本地分支\"><a href=\"#拉取远程分支并创建本地分支\" class=\"headerlink\" title=\"拉取远程分支并创建本地分支\"></a>拉取远程分支并创建本地分支</h4><ol>\n<li><p>方法1<br>git checkout -b 本地分支名x origin/远程分支名x<br>使用该方式会在本地新建分支x，并自动切换到该本地分支x。</p>\n</li>\n<li><p>方法2<br>git fetch origin 远程分支名x:本地分支名x<br>使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。</p>\n</li>\n</ol>\n<h4 id=\"分支合并\"><a href=\"#分支合并\" class=\"headerlink\" title=\"分支合并\"></a>分支合并</h4><p>如果无冲突，OK<br>如果有冲突，该如何解决<br>git log –author=”yanxxmh” –after=”1 week ago” –oneline</p>\n<h4 id=\"checkout\"><a href=\"#checkout\" class=\"headerlink\" title=\"checkout\"></a>checkout</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout . #本地所有修改的。没有的提交的，都返回到原来的状态</div><div class=\"line\">git stash #把所有没有提交的修改暂存到stash里面。可用git stash pop回复。</div><div class=\"line\">git reset --hard HASH #返回到某个节点，不保留修改。</div><div class=\"line\">git reset --soft HASH #返回到某个节点。保留修改</div></pre></td></tr></table></figure>\n<h4 id=\"拉取制定版本代码\"><a href=\"#拉取制定版本代码\" class=\"headerlink\" title=\"拉取制定版本代码\"></a>拉取制定版本代码</h4><ol>\n<li>将制定版本闯将一个分支</li>\n<li>使用下面命令下载指定分支信息<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone -b v1 --depth 1 https://github.com/shawflying/reskit.git</div><div class=\"line\">git clone -b vue.js2.0 --depth 1 https://github.com/shawflying/reskit.git</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"切换分支\"><a href=\"#切换分支\" class=\"headerlink\" title=\"切换分支\"></a>切换分支</h3><p>查询所有分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch -a</div></pre></td></tr></table></figure></p>\n<p>查询当前分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch</div></pre></td></tr></table></figure></p>\n<p>切换分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout devlop</div><div class=\"line\"></div><div class=\"line\">git branch --set-upstream-to=origin/master origin/账单详情添加跳转链接</div><div class=\"line\"></div><div class=\"line\">git branch --set-upstream-to=origin/账单详情添加跳转链接 origin/master</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@ubuntu-129:/data/code/mohoo-telecom-wechat-mobile# git pull</div><div class=\"line\">Username for &apos;https://git.coding.net&apos;: xxxxx</div><div class=\"line\">Password for &apos;https://yanxxmh@git.coding.net&apos;: </div><div class=\"line\">remote: Counting objects: 4, done.</div><div class=\"line\">remote: Compressing objects: 100% (3/3), done.</div><div class=\"line\">remote: Total 4 (delta 2), reused 0 (delta 0)</div><div class=\"line\">Unpacking objects: 100% (4/4), done.</div><div class=\"line\">From https://github.com/shawflying/reskit</div><div class=\"line\">   eb8b3be..fa2f6d5  账单详情添加跳转链接 -&gt; origin/账单详情添加跳转链接</div><div class=\"line\">Already up-to-date.</div></pre></td></tr></table></figure>\n<p>切换到master<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout master</div></pre></td></tr></table></figure></p>\n<p>切换到其他<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout</div></pre></td></tr></table></figure></p>\n<p>拉取代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git pull &lt;remote&gt; &lt;branch&gt;</div></pre></td></tr></table></figure></p>\n<p>当前分支状态<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git status</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。</p>\n</blockquote>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><h4 id=\"拉取远程代码\"><a href=\"#拉取远程代码\" class=\"headerlink\" title=\"拉取远程代码\"></a>拉取远程代码</h4><p>git clone <a href=\"https://github.com/shawflying/reskit.git\" target=\"_blank\" rel=\"external\">https://github.com/shawflying/reskit.git</a></p>\n<h4 id=\"拉取分支代码\"><a href=\"#拉取分支代码\" class=\"headerlink\" title=\"拉取分支代码\"></a>拉取分支代码</h4><p>git fetch<br>git checkout -b fly origin/fly</p>\n<h4 id=\"查看远程分支\"><a href=\"#查看远程分支\" class=\"headerlink\" title=\"查看远程分支\"></a>查看远程分支</h4><p>git branch -r</p>\n<h4 id=\"拉取远程分支并创建本地分支\"><a href=\"#拉取远程分支并创建本地分支\" class=\"headerlink\" title=\"拉取远程分支并创建本地分支\"></a>拉取远程分支并创建本地分支</h4><ol>\n<li><p>方法1<br>git checkout -b 本地分支名x origin/远程分支名x<br>使用该方式会在本地新建分支x，并自动切换到该本地分支x。</p>\n</li>\n<li><p>方法2<br>git fetch origin 远程分支名x:本地分支名x<br>使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。</p>\n</li>\n</ol>\n<h4 id=\"分支合并\"><a href=\"#分支合并\" class=\"headerlink\" title=\"分支合并\"></a>分支合并</h4><p>如果无冲突，OK<br>如果有冲突，该如何解决<br>git log –author=”yanxxmh” –after=”1 week ago” –oneline</p>\n<h4 id=\"checkout\"><a href=\"#checkout\" class=\"headerlink\" title=\"checkout\"></a>checkout</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout . #本地所有修改的。没有的提交的，都返回到原来的状态</div><div class=\"line\">git stash #把所有没有提交的修改暂存到stash里面。可用git stash pop回复。</div><div class=\"line\">git reset --hard HASH #返回到某个节点，不保留修改。</div><div class=\"line\">git reset --soft HASH #返回到某个节点。保留修改</div></pre></td></tr></table></figure>\n<h4 id=\"拉取制定版本代码\"><a href=\"#拉取制定版本代码\" class=\"headerlink\" title=\"拉取制定版本代码\"></a>拉取制定版本代码</h4><ol>\n<li>将制定版本闯将一个分支</li>\n<li>使用下面命令下载指定分支信息<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone -b v1 --depth 1 https://github.com/shawflying/reskit.git</div><div class=\"line\">git clone -b vue.js2.0 --depth 1 https://github.com/shawflying/reskit.git</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"切换分支\"><a href=\"#切换分支\" class=\"headerlink\" title=\"切换分支\"></a>切换分支</h3><p>查询所有分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch -a</div></pre></td></tr></table></figure></p>\n<p>查询当前分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch</div></pre></td></tr></table></figure></p>\n<p>切换分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout devlop</div><div class=\"line\"></div><div class=\"line\">git branch --set-upstream-to=origin/master origin/账单详情添加跳转链接</div><div class=\"line\"></div><div class=\"line\">git branch --set-upstream-to=origin/账单详情添加跳转链接 origin/master</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@ubuntu-129:/data/code/mohoo-telecom-wechat-mobile# git pull</div><div class=\"line\">Username for &apos;https://git.coding.net&apos;: xxxxx</div><div class=\"line\">Password for &apos;https://yanxxmh@git.coding.net&apos;: </div><div class=\"line\">remote: Counting objects: 4, done.</div><div class=\"line\">remote: Compressing objects: 100% (3/3), done.</div><div class=\"line\">remote: Total 4 (delta 2), reused 0 (delta 0)</div><div class=\"line\">Unpacking objects: 100% (4/4), done.</div><div class=\"line\">From https://github.com/shawflying/reskit</div><div class=\"line\">   eb8b3be..fa2f6d5  账单详情添加跳转链接 -&gt; origin/账单详情添加跳转链接</div><div class=\"line\">Already up-to-date.</div></pre></td></tr></table></figure>\n<p>切换到master<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout master</div></pre></td></tr></table></figure></p>\n<p>切换到其他<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout</div></pre></td></tr></table></figure></p>\n<p>拉取代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git pull &lt;remote&gt; &lt;branch&gt;</div></pre></td></tr></table></figure></p>\n<p>当前分支状态<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git status</div></pre></td></tr></table></figure></p>\n"},{"title":"ES5 新增特性汇总","_content":"\n> ES5 新增特性汇总\n\n- Trailing commas are ok\n多余的逗号不报错，比如 {a:1,b:2,}\n\n- No reserved words for property names\n属性名可以使用关键字和保留字了，比如 { if:1, else:2 }\n\n- NaN, Infinity, undefined : are all constants\nNaN、Infinity、undefined 都是常量了，不可更改。\n\n- parseInt() defaults to radix 10\nparseInt 第二个参数默认为 10（真好）\n\n- /regexp/ produces new reg ex object every time\n正则字面量每次都会产生一个新的对象\n\n- JSON.parse(), JSON.stringify()\n添加 JSON 序列化和反序列化\n\n- Function.prototype.bind\n函数新增 bind 方法（贺老说 bind 写在后面有点不好用）\n\n- String.prototype.trim\n字符串终于自带头尾去空格方法了，如 ' abc '.trim() === 'abc'\n\n- Array.prototype.every, filter, forEach, indexOf, lastIndexOf, map, reduce, reduceRight, some\n数组添加了一系列方法，终于能脱离 Underscore.js 了\n\n- Date.now()\nDate.now 现在才加进来的？可怕。\n\n- Date.prototype.toISOString\n日期新增 toISOString 方法\n\n- new Date(string) and Date.parse(string) will try ISO format 1st\n新增对 ISO 日期格式的支持\n\n- Array.isArray()\n判断一个对象是不是数组……以前苦了大家了\n\n- Object.keys(), Object.create(), Object.defineProperty, Object.defineProperties,\nObject.getOwnPropertyDescriptor(), Object.getOwnPropertyNames(obj), Object.getPrototypeOf(obj)\n- Object.seal(), Object.freeze(), Object.preventExtensions(), Object.isSealed(), Object.isFrozen(),\nObject.isExtensible()\n对象新增一系列方法，使得在 JS 中模拟 Java 变得更丝滑。我最喜欢的还是 Object.create()\n\n- Property attributes: writeable, value, enumerable, configurable, get, set\n对象的属性可以添加各种配置了\n\n- 'use strict';\n- Strict Mode:\n```text\n  No more implied global variables within functions.\n  this is not bound to the global object by function form.\n  apply and call do not default to the global object.\n  No with statement.\n  Setting a writeable: false property will throw.\n  Deleting a configurable: false property will throw.\n  Restrictions on eval.\n  eval and arguments are reserved.\n  arguments not linked to parameters.\n  No more arguments.caller or arguments.callee.\n  No more octal literals.\n  Duplicate names in an object literal or function parameters are a syntax error\n```\n\n严格模式\n函数里没有隐式的全局变量了，你要创建全局变量必须是显式的。比如想用 a = 1 创建全局变量是不行的。\nthis 不会默认指向全局对象（比如 window 或者 global）了。\ncall 和 apply 也不会默认使用全局对象了。\n不准用 with\n如果一个属性的 writeable 是 false，那么你给这个属性赋值就会报错。\n如果一个属性的 configurable 是 false，那么你 delete 这个属性就会报错。\n对 eval 和 arguments 做出了限制。以下代码每行都会报错：\n```js\n  eval = 17;\n  arguments++;\n  ++eval;\n  var obj = { set p(arguments) { } };\n  var eval;\n  try { } catch (arguments) { }\n  function x(eval) { }\n  function arguments() { }\n  var y = function eval() { };\n  var f = new Function(\"arguments\", \"'use strict'; return 17;\");\n```\n\narguments 只保存原始参数。对形参的赋值不会对 arguments 有影响。\n不准用 arguments.caller 和 arguments.callee\n不支持八进制字面量，比如 var a = 015 会报错。\n对象字面量或者函数形参中，如果有重复的名字，就会报错。\n\n\n## 参考\n- [转载](https://zhuanlan.zhihu.com/p/24336831)\n","source":"_posts/es5.md","raw":"---\ntitle: ES5 新增特性汇总\n---\n\n> ES5 新增特性汇总\n\n- Trailing commas are ok\n多余的逗号不报错，比如 {a:1,b:2,}\n\n- No reserved words for property names\n属性名可以使用关键字和保留字了，比如 { if:1, else:2 }\n\n- NaN, Infinity, undefined : are all constants\nNaN、Infinity、undefined 都是常量了，不可更改。\n\n- parseInt() defaults to radix 10\nparseInt 第二个参数默认为 10（真好）\n\n- /regexp/ produces new reg ex object every time\n正则字面量每次都会产生一个新的对象\n\n- JSON.parse(), JSON.stringify()\n添加 JSON 序列化和反序列化\n\n- Function.prototype.bind\n函数新增 bind 方法（贺老说 bind 写在后面有点不好用）\n\n- String.prototype.trim\n字符串终于自带头尾去空格方法了，如 ' abc '.trim() === 'abc'\n\n- Array.prototype.every, filter, forEach, indexOf, lastIndexOf, map, reduce, reduceRight, some\n数组添加了一系列方法，终于能脱离 Underscore.js 了\n\n- Date.now()\nDate.now 现在才加进来的？可怕。\n\n- Date.prototype.toISOString\n日期新增 toISOString 方法\n\n- new Date(string) and Date.parse(string) will try ISO format 1st\n新增对 ISO 日期格式的支持\n\n- Array.isArray()\n判断一个对象是不是数组……以前苦了大家了\n\n- Object.keys(), Object.create(), Object.defineProperty, Object.defineProperties,\nObject.getOwnPropertyDescriptor(), Object.getOwnPropertyNames(obj), Object.getPrototypeOf(obj)\n- Object.seal(), Object.freeze(), Object.preventExtensions(), Object.isSealed(), Object.isFrozen(),\nObject.isExtensible()\n对象新增一系列方法，使得在 JS 中模拟 Java 变得更丝滑。我最喜欢的还是 Object.create()\n\n- Property attributes: writeable, value, enumerable, configurable, get, set\n对象的属性可以添加各种配置了\n\n- 'use strict';\n- Strict Mode:\n```text\n  No more implied global variables within functions.\n  this is not bound to the global object by function form.\n  apply and call do not default to the global object.\n  No with statement.\n  Setting a writeable: false property will throw.\n  Deleting a configurable: false property will throw.\n  Restrictions on eval.\n  eval and arguments are reserved.\n  arguments not linked to parameters.\n  No more arguments.caller or arguments.callee.\n  No more octal literals.\n  Duplicate names in an object literal or function parameters are a syntax error\n```\n\n严格模式\n函数里没有隐式的全局变量了，你要创建全局变量必须是显式的。比如想用 a = 1 创建全局变量是不行的。\nthis 不会默认指向全局对象（比如 window 或者 global）了。\ncall 和 apply 也不会默认使用全局对象了。\n不准用 with\n如果一个属性的 writeable 是 false，那么你给这个属性赋值就会报错。\n如果一个属性的 configurable 是 false，那么你 delete 这个属性就会报错。\n对 eval 和 arguments 做出了限制。以下代码每行都会报错：\n```js\n  eval = 17;\n  arguments++;\n  ++eval;\n  var obj = { set p(arguments) { } };\n  var eval;\n  try { } catch (arguments) { }\n  function x(eval) { }\n  function arguments() { }\n  var y = function eval() { };\n  var f = new Function(\"arguments\", \"'use strict'; return 17;\");\n```\n\narguments 只保存原始参数。对形参的赋值不会对 arguments 有影响。\n不准用 arguments.caller 和 arguments.callee\n不支持八进制字面量，比如 var a = 015 会报错。\n对象字面量或者函数形参中，如果有重复的名字，就会报错。\n\n\n## 参考\n- [转载](https://zhuanlan.zhihu.com/p/24336831)\n","slug":"es5","published":1,"date":"2017-08-15T00:57:59.968Z","updated":"2017-08-15T05:15:37.370Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7kas4280004y0jh9fklt2g0","content":"<blockquote>\n<p>ES5 新增特性汇总</p>\n</blockquote>\n<ul>\n<li><p>Trailing commas are ok<br>多余的逗号不报错，比如 {a:1,b:2,}</p>\n</li>\n<li><p>No reserved words for property names<br>属性名可以使用关键字和保留字了，比如 { if:1, else:2 }</p>\n</li>\n<li><p>NaN, Infinity, undefined : are all constants<br>NaN、Infinity、undefined 都是常量了，不可更改。</p>\n</li>\n<li><p>parseInt() defaults to radix 10<br>parseInt 第二个参数默认为 10（真好）</p>\n</li>\n<li><p>/regexp/ produces new reg ex object every time<br>正则字面量每次都会产生一个新的对象</p>\n</li>\n<li><p>JSON.parse(), JSON.stringify()<br>添加 JSON 序列化和反序列化</p>\n</li>\n<li><p>Function.prototype.bind<br>函数新增 bind 方法（贺老说 bind 写在后面有点不好用）</p>\n</li>\n<li><p>String.prototype.trim<br>字符串终于自带头尾去空格方法了，如 ‘ abc ‘.trim() === ‘abc’</p>\n</li>\n<li><p>Array.prototype.every, filter, forEach, indexOf, lastIndexOf, map, reduce, reduceRight, some<br>数组添加了一系列方法，终于能脱离 Underscore.js 了</p>\n</li>\n<li><p>Date.now()<br>Date.now 现在才加进来的？可怕。</p>\n</li>\n<li><p>Date.prototype.toISOString<br>日期新增 toISOString 方法</p>\n</li>\n<li><p>new Date(string) and Date.parse(string) will try ISO format 1st<br>新增对 ISO 日期格式的支持</p>\n</li>\n<li><p>Array.isArray()<br>判断一个对象是不是数组……以前苦了大家了</p>\n</li>\n<li><p>Object.keys(), Object.create(), Object.defineProperty, Object.defineProperties,<br>Object.getOwnPropertyDescriptor(), Object.getOwnPropertyNames(obj), Object.getPrototypeOf(obj)</p>\n</li>\n<li><p>Object.seal(), Object.freeze(), Object.preventExtensions(), Object.isSealed(), Object.isFrozen(),<br>Object.isExtensible()<br>对象新增一系列方法，使得在 JS 中模拟 Java 变得更丝滑。我最喜欢的还是 Object.create()</p>\n</li>\n<li><p>Property attributes: writeable, value, enumerable, configurable, get, set<br>对象的属性可以添加各种配置了</p>\n</li>\n<li><p>‘use strict’;</p>\n</li>\n<li>Strict Mode:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">No more implied global variables within functions.</div><div class=\"line\">this is not bound to the global object by function form.</div><div class=\"line\">apply and call do not default to the global object.</div><div class=\"line\">No with statement.</div><div class=\"line\">Setting a writeable: false property will throw.</div><div class=\"line\">Deleting a configurable: false property will throw.</div><div class=\"line\">Restrictions on eval.</div><div class=\"line\">eval and arguments are reserved.</div><div class=\"line\">arguments not linked to parameters.</div><div class=\"line\">No more arguments.caller or arguments.callee.</div><div class=\"line\">No more octal literals.</div><div class=\"line\">Duplicate names in an object literal or function parameters are a syntax error</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>严格模式<br>函数里没有隐式的全局变量了，你要创建全局变量必须是显式的。比如想用 a = 1 创建全局变量是不行的。<br>this 不会默认指向全局对象（比如 window 或者 global）了。<br>call 和 apply 也不会默认使用全局对象了。<br>不准用 with<br>如果一个属性的 writeable 是 false，那么你给这个属性赋值就会报错。<br>如果一个属性的 configurable 是 false，那么你 delete 这个属性就会报错。<br>对 eval 和 arguments 做出了限制。以下代码每行都会报错：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">eval</span> = <span class=\"number\">17</span>;</div><div class=\"line\"><span class=\"built_in\">arguments</span>++;</div><div class=\"line\">++<span class=\"built_in\">eval</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> obj = &#123; set p(<span class=\"built_in\">arguments</span>) &#123; &#125; &#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> <span class=\"built_in\">eval</span>;</div><div class=\"line\"><span class=\"keyword\">try</span> &#123; &#125; <span class=\"keyword\">catch</span> (<span class=\"built_in\">arguments</span>) &#123; &#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">x</span>(<span class=\"params\">eval</span>) </span>&#123; &#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">arguments</span>(<span class=\"params\"></span>) </span>&#123; &#125;</div><div class=\"line\"><span class=\"keyword\">var</span> y = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eval</span>(<span class=\"params\"></span>) </span>&#123; &#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"keyword\">new</span> <span class=\"built_in\">Function</span>(<span class=\"string\">\"arguments\"</span>, <span class=\"string\">\"'use strict'; return 17;\"</span>);</div></pre></td></tr></table></figure></p>\n<p>arguments 只保存原始参数。对形参的赋值不会对 arguments 有影响。<br>不准用 arguments.caller 和 arguments.callee<br>不支持八进制字面量，比如 var a = 015 会报错。<br>对象字面量或者函数形参中，如果有重复的名字，就会报错。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/24336831\" target=\"_blank\" rel=\"external\">转载</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>ES5 新增特性汇总</p>\n</blockquote>\n<ul>\n<li><p>Trailing commas are ok<br>多余的逗号不报错，比如 {a:1,b:2,}</p>\n</li>\n<li><p>No reserved words for property names<br>属性名可以使用关键字和保留字了，比如 { if:1, else:2 }</p>\n</li>\n<li><p>NaN, Infinity, undefined : are all constants<br>NaN、Infinity、undefined 都是常量了，不可更改。</p>\n</li>\n<li><p>parseInt() defaults to radix 10<br>parseInt 第二个参数默认为 10（真好）</p>\n</li>\n<li><p>/regexp/ produces new reg ex object every time<br>正则字面量每次都会产生一个新的对象</p>\n</li>\n<li><p>JSON.parse(), JSON.stringify()<br>添加 JSON 序列化和反序列化</p>\n</li>\n<li><p>Function.prototype.bind<br>函数新增 bind 方法（贺老说 bind 写在后面有点不好用）</p>\n</li>\n<li><p>String.prototype.trim<br>字符串终于自带头尾去空格方法了，如 ‘ abc ‘.trim() === ‘abc’</p>\n</li>\n<li><p>Array.prototype.every, filter, forEach, indexOf, lastIndexOf, map, reduce, reduceRight, some<br>数组添加了一系列方法，终于能脱离 Underscore.js 了</p>\n</li>\n<li><p>Date.now()<br>Date.now 现在才加进来的？可怕。</p>\n</li>\n<li><p>Date.prototype.toISOString<br>日期新增 toISOString 方法</p>\n</li>\n<li><p>new Date(string) and Date.parse(string) will try ISO format 1st<br>新增对 ISO 日期格式的支持</p>\n</li>\n<li><p>Array.isArray()<br>判断一个对象是不是数组……以前苦了大家了</p>\n</li>\n<li><p>Object.keys(), Object.create(), Object.defineProperty, Object.defineProperties,<br>Object.getOwnPropertyDescriptor(), Object.getOwnPropertyNames(obj), Object.getPrototypeOf(obj)</p>\n</li>\n<li><p>Object.seal(), Object.freeze(), Object.preventExtensions(), Object.isSealed(), Object.isFrozen(),<br>Object.isExtensible()<br>对象新增一系列方法，使得在 JS 中模拟 Java 变得更丝滑。我最喜欢的还是 Object.create()</p>\n</li>\n<li><p>Property attributes: writeable, value, enumerable, configurable, get, set<br>对象的属性可以添加各种配置了</p>\n</li>\n<li><p>‘use strict’;</p>\n</li>\n<li>Strict Mode:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">No more implied global variables within functions.</div><div class=\"line\">this is not bound to the global object by function form.</div><div class=\"line\">apply and call do not default to the global object.</div><div class=\"line\">No with statement.</div><div class=\"line\">Setting a writeable: false property will throw.</div><div class=\"line\">Deleting a configurable: false property will throw.</div><div class=\"line\">Restrictions on eval.</div><div class=\"line\">eval and arguments are reserved.</div><div class=\"line\">arguments not linked to parameters.</div><div class=\"line\">No more arguments.caller or arguments.callee.</div><div class=\"line\">No more octal literals.</div><div class=\"line\">Duplicate names in an object literal or function parameters are a syntax error</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>严格模式<br>函数里没有隐式的全局变量了，你要创建全局变量必须是显式的。比如想用 a = 1 创建全局变量是不行的。<br>this 不会默认指向全局对象（比如 window 或者 global）了。<br>call 和 apply 也不会默认使用全局对象了。<br>不准用 with<br>如果一个属性的 writeable 是 false，那么你给这个属性赋值就会报错。<br>如果一个属性的 configurable 是 false，那么你 delete 这个属性就会报错。<br>对 eval 和 arguments 做出了限制。以下代码每行都会报错：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">eval</span> = <span class=\"number\">17</span>;</div><div class=\"line\"><span class=\"built_in\">arguments</span>++;</div><div class=\"line\">++<span class=\"built_in\">eval</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> obj = &#123; set p(<span class=\"built_in\">arguments</span>) &#123; &#125; &#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> <span class=\"built_in\">eval</span>;</div><div class=\"line\"><span class=\"keyword\">try</span> &#123; &#125; <span class=\"keyword\">catch</span> (<span class=\"built_in\">arguments</span>) &#123; &#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">x</span>(<span class=\"params\">eval</span>) </span>&#123; &#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">arguments</span>(<span class=\"params\"></span>) </span>&#123; &#125;</div><div class=\"line\"><span class=\"keyword\">var</span> y = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eval</span>(<span class=\"params\"></span>) </span>&#123; &#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"keyword\">new</span> <span class=\"built_in\">Function</span>(<span class=\"string\">\"arguments\"</span>, <span class=\"string\">\"'use strict'; return 17;\"</span>);</div></pre></td></tr></table></figure></p>\n<p>arguments 只保存原始参数。对形参的赋值不会对 arguments 有影响。<br>不准用 arguments.caller 和 arguments.callee<br>不支持八进制字面量，比如 var a = 015 会报错。<br>对象字面量或者函数形参中，如果有重复的名字，就会报错。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/24336831\" target=\"_blank\" rel=\"external\">转载</a></li>\n</ul>\n"},{"layout":"post","title":"常用文档清单","date":"2017-09-14T10:10:11.000Z","_content":"\n### [mongoose 文档](http://www.nodeclass.com/api/mongoose.html)\n> http://www.nodeclass.com/api/mongoose.html\n mongoose api文档\n\n\n### [bootcdn](http://www.bootcdn.cn/)\n\n> http://www.bootcdn.cn/\n稳定、快速、免费的前端开源项目 CDN 加速服务\n\n### [Bootstrap](http://www.bootcss.com/)\n> http://www.bootcss.com/\n简洁、直观、强悍的前端开发框架，让web开发更迅速、简单。\n\n\n## node.js\n\n### [koa](http://koa.bootcss.com/)\n> http://koa.bootcss.com/\nkoa 是由 Express 原班人马打造的，致力于成为一个更小、更富有表现力、更健壮的 Web 框架。使用 koa 编写 web 应用，通过组合不同的 generator，可以免除重复繁琐的回调函数嵌套，并极大地提升错误处理的效率。koa 不在内核方法中绑定任何中间件，它仅仅提供了一个轻量优雅的函数库，使得编写 Web 应用变得得心应手。\n\n### [vue.js](https://cn.vuejs.org/)\n> https://cn.vuejs.org/\n渐进式JavaScript 框架\n\n\n### [node.js 中文](http://nodejs.cn/)\n> http://nodejs.cn/\nNode.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。\nNode.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。\nNode.js 的包管理器 npm，是全球最大的开源库生态系统。","source":"_posts/bookslist.md","raw":"---\nlayout: post\ntitle: 常用文档清单\ndate: 2017-09-14 18:10:11\ntags: book\n---\n\n### [mongoose 文档](http://www.nodeclass.com/api/mongoose.html)\n> http://www.nodeclass.com/api/mongoose.html\n mongoose api文档\n\n\n### [bootcdn](http://www.bootcdn.cn/)\n\n> http://www.bootcdn.cn/\n稳定、快速、免费的前端开源项目 CDN 加速服务\n\n### [Bootstrap](http://www.bootcss.com/)\n> http://www.bootcss.com/\n简洁、直观、强悍的前端开发框架，让web开发更迅速、简单。\n\n\n## node.js\n\n### [koa](http://koa.bootcss.com/)\n> http://koa.bootcss.com/\nkoa 是由 Express 原班人马打造的，致力于成为一个更小、更富有表现力、更健壮的 Web 框架。使用 koa 编写 web 应用，通过组合不同的 generator，可以免除重复繁琐的回调函数嵌套，并极大地提升错误处理的效率。koa 不在内核方法中绑定任何中间件，它仅仅提供了一个轻量优雅的函数库，使得编写 Web 应用变得得心应手。\n\n### [vue.js](https://cn.vuejs.org/)\n> https://cn.vuejs.org/\n渐进式JavaScript 框架\n\n\n### [node.js 中文](http://nodejs.cn/)\n> http://nodejs.cn/\nNode.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。\nNode.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。\nNode.js 的包管理器 npm，是全球最大的开源库生态系统。","slug":"bookslist","published":1,"updated":"2017-09-17T14:45:33.026Z","_id":"cj7kas42h0005y0jhr6ldynmb","comments":1,"photos":[],"link":"","content":"<h3 id=\"mongoose-文档\"><a href=\"#mongoose-文档\" class=\"headerlink\" title=\"mongoose 文档\"></a><a href=\"http://www.nodeclass.com/api/mongoose.html\" target=\"_blank\" rel=\"external\">mongoose 文档</a></h3><blockquote>\n<p><a href=\"http://www.nodeclass.com/api/mongoose.html\" target=\"_blank\" rel=\"external\">http://www.nodeclass.com/api/mongoose.html</a><br> mongoose api文档</p>\n</blockquote>\n<h3 id=\"bootcdn\"><a href=\"#bootcdn\" class=\"headerlink\" title=\"bootcdn\"></a><a href=\"http://www.bootcdn.cn/\" target=\"_blank\" rel=\"external\">bootcdn</a></h3><blockquote>\n<p><a href=\"http://www.bootcdn.cn/\" target=\"_blank\" rel=\"external\">http://www.bootcdn.cn/</a><br>稳定、快速、免费的前端开源项目 CDN 加速服务</p>\n</blockquote>\n<h3 id=\"Bootstrap\"><a href=\"#Bootstrap\" class=\"headerlink\" title=\"Bootstrap\"></a><a href=\"http://www.bootcss.com/\" target=\"_blank\" rel=\"external\">Bootstrap</a></h3><blockquote>\n<p><a href=\"http://www.bootcss.com/\" target=\"_blank\" rel=\"external\">http://www.bootcss.com/</a><br>简洁、直观、强悍的前端开发框架，让web开发更迅速、简单。</p>\n</blockquote>\n<h2 id=\"node-js\"><a href=\"#node-js\" class=\"headerlink\" title=\"node.js\"></a>node.js</h2><h3 id=\"koa\"><a href=\"#koa\" class=\"headerlink\" title=\"koa\"></a><a href=\"http://koa.bootcss.com/\" target=\"_blank\" rel=\"external\">koa</a></h3><blockquote>\n<p><a href=\"http://koa.bootcss.com/\" target=\"_blank\" rel=\"external\">http://koa.bootcss.com/</a><br>koa 是由 Express 原班人马打造的，致力于成为一个更小、更富有表现力、更健壮的 Web 框架。使用 koa 编写 web 应用，通过组合不同的 generator，可以免除重复繁琐的回调函数嵌套，并极大地提升错误处理的效率。koa 不在内核方法中绑定任何中间件，它仅仅提供了一个轻量优雅的函数库，使得编写 Web 应用变得得心应手。</p>\n</blockquote>\n<h3 id=\"vue-js\"><a href=\"#vue-js\" class=\"headerlink\" title=\"vue.js\"></a><a href=\"https://cn.vuejs.org/\" target=\"_blank\" rel=\"external\">vue.js</a></h3><blockquote>\n<p><a href=\"https://cn.vuejs.org/\" target=\"_blank\" rel=\"external\">https://cn.vuejs.org/</a><br>渐进式JavaScript 框架</p>\n</blockquote>\n<h3 id=\"node-js-中文\"><a href=\"#node-js-中文\" class=\"headerlink\" title=\"node.js 中文\"></a><a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"external\">node.js 中文</a></h3><blockquote>\n<p><a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"external\">http://nodejs.cn/</a><br>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。<br>Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。<br>Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"mongoose-文档\"><a href=\"#mongoose-文档\" class=\"headerlink\" title=\"mongoose 文档\"></a><a href=\"http://www.nodeclass.com/api/mongoose.html\" target=\"_blank\" rel=\"external\">mongoose 文档</a></h3><blockquote>\n<p><a href=\"http://www.nodeclass.com/api/mongoose.html\" target=\"_blank\" rel=\"external\">http://www.nodeclass.com/api/mongoose.html</a><br> mongoose api文档</p>\n</blockquote>\n<h3 id=\"bootcdn\"><a href=\"#bootcdn\" class=\"headerlink\" title=\"bootcdn\"></a><a href=\"http://www.bootcdn.cn/\" target=\"_blank\" rel=\"external\">bootcdn</a></h3><blockquote>\n<p><a href=\"http://www.bootcdn.cn/\" target=\"_blank\" rel=\"external\">http://www.bootcdn.cn/</a><br>稳定、快速、免费的前端开源项目 CDN 加速服务</p>\n</blockquote>\n<h3 id=\"Bootstrap\"><a href=\"#Bootstrap\" class=\"headerlink\" title=\"Bootstrap\"></a><a href=\"http://www.bootcss.com/\" target=\"_blank\" rel=\"external\">Bootstrap</a></h3><blockquote>\n<p><a href=\"http://www.bootcss.com/\" target=\"_blank\" rel=\"external\">http://www.bootcss.com/</a><br>简洁、直观、强悍的前端开发框架，让web开发更迅速、简单。</p>\n</blockquote>\n<h2 id=\"node-js\"><a href=\"#node-js\" class=\"headerlink\" title=\"node.js\"></a>node.js</h2><h3 id=\"koa\"><a href=\"#koa\" class=\"headerlink\" title=\"koa\"></a><a href=\"http://koa.bootcss.com/\" target=\"_blank\" rel=\"external\">koa</a></h3><blockquote>\n<p><a href=\"http://koa.bootcss.com/\" target=\"_blank\" rel=\"external\">http://koa.bootcss.com/</a><br>koa 是由 Express 原班人马打造的，致力于成为一个更小、更富有表现力、更健壮的 Web 框架。使用 koa 编写 web 应用，通过组合不同的 generator，可以免除重复繁琐的回调函数嵌套，并极大地提升错误处理的效率。koa 不在内核方法中绑定任何中间件，它仅仅提供了一个轻量优雅的函数库，使得编写 Web 应用变得得心应手。</p>\n</blockquote>\n<h3 id=\"vue-js\"><a href=\"#vue-js\" class=\"headerlink\" title=\"vue.js\"></a><a href=\"https://cn.vuejs.org/\" target=\"_blank\" rel=\"external\">vue.js</a></h3><blockquote>\n<p><a href=\"https://cn.vuejs.org/\" target=\"_blank\" rel=\"external\">https://cn.vuejs.org/</a><br>渐进式JavaScript 框架</p>\n</blockquote>\n<h3 id=\"node-js-中文\"><a href=\"#node-js-中文\" class=\"headerlink\" title=\"node.js 中文\"></a><a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"external\">node.js 中文</a></h3><blockquote>\n<p><a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"external\">http://nodejs.cn/</a><br>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。<br>Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。<br>Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p>\n</blockquote>\n"},{"layout":"post","title":"http-server","date":"2017-08-15T14:51:10.000Z","_content":"\n> http-server 是一个简单的零配置命令行HTTP服务器, 基于 nodeJs.\n\n\n## 安装(全局安装)\n```\nnpm install http-server -g\n```\n\n## 使用\n在站点目录下开启命令行输入\n```\n http-server\n```\n\n使用于package.json\n```json\n{\n    \"scripts\": {\n         \"start\": \"http-server -a 0.0.0.0 -p 8000\"\n     }\n }\n```\n\n入参：\n```\n-p 端口号 (默认 8080)\n\n-a IP 地址 (默认 0.0.0.0)\n\n-d 显示目录列表 (默认 'True')\n\n-i 显示 autoIndex (默认 'True')\n\n-e or --ext 如果没有提供默认的文件扩展名(默认 'html')\n\n-s or --silent 禁止日志信息输出\n\n--cors 启用 CORS via the Access-Control-Allow-Origin header\n\n-o 在开始服务后打开浏览器\n-c 为 cache-control max-age header 设置Cache time(秒) , e.g. -c10 for 10 seconds (defaults to '3600'). 禁用 caching, 则使用 -c-1.\n-U 或 --utc 使用UTC time 格式化log消息\n\n-P or --proxy Proxies all requests which can't be resolved locally to the given url. e.g.: -P http://someurl.com\n\n-S or --ssl 启用 https\n\n-C or --cert ssl cert 文件路径 (default: cert.pem)\n\n-K or --key Path to ssl key file (default: key.pem).\n\n-r or --robots Provide a /robots.txt (whose content defaults to 'User-agent: *\\nDisallow: /')\n\n-h or --help 打印以上列表并退出\n\n```","source":"_posts/http-server.md","raw":"---\nlayout: post\ntitle: http-server\ndate: 2017-08-15 22:51:10\ntags:\n---\n\n> http-server 是一个简单的零配置命令行HTTP服务器, 基于 nodeJs.\n\n\n## 安装(全局安装)\n```\nnpm install http-server -g\n```\n\n## 使用\n在站点目录下开启命令行输入\n```\n http-server\n```\n\n使用于package.json\n```json\n{\n    \"scripts\": {\n         \"start\": \"http-server -a 0.0.0.0 -p 8000\"\n     }\n }\n```\n\n入参：\n```\n-p 端口号 (默认 8080)\n\n-a IP 地址 (默认 0.0.0.0)\n\n-d 显示目录列表 (默认 'True')\n\n-i 显示 autoIndex (默认 'True')\n\n-e or --ext 如果没有提供默认的文件扩展名(默认 'html')\n\n-s or --silent 禁止日志信息输出\n\n--cors 启用 CORS via the Access-Control-Allow-Origin header\n\n-o 在开始服务后打开浏览器\n-c 为 cache-control max-age header 设置Cache time(秒) , e.g. -c10 for 10 seconds (defaults to '3600'). 禁用 caching, 则使用 -c-1.\n-U 或 --utc 使用UTC time 格式化log消息\n\n-P or --proxy Proxies all requests which can't be resolved locally to the given url. e.g.: -P http://someurl.com\n\n-S or --ssl 启用 https\n\n-C or --cert ssl cert 文件路径 (default: cert.pem)\n\n-K or --key Path to ssl key file (default: key.pem).\n\n-r or --robots Provide a /robots.txt (whose content defaults to 'User-agent: *\\nDisallow: /')\n\n-h or --help 打印以上列表并退出\n\n```","slug":"http-server","published":1,"updated":"2017-08-15T14:51:37.640Z","_id":"cj7kas42k0006y0jhbay5hmma","comments":1,"photos":[],"link":"","content":"<blockquote>\n<p>http-server 是一个简单的零配置命令行HTTP服务器, 基于 nodeJs.</p>\n</blockquote>\n<h2 id=\"安装-全局安装\"><a href=\"#安装-全局安装\" class=\"headerlink\" title=\"安装(全局安装)\"></a>安装(全局安装)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install http-server -g</div></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>在站点目录下开启命令行输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http-server</div></pre></td></tr></table></figure></p>\n<p>使用于package.json<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">\"scripts\"</span>: &#123;</div><div class=\"line\">         <span class=\"attr\">\"start\"</span>: <span class=\"string\">\"http-server -a 0.0.0.0 -p 8000\"</span></div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure></p>\n<p>入参：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">-p 端口号 (默认 8080)</div><div class=\"line\"></div><div class=\"line\">-a IP 地址 (默认 0.0.0.0)</div><div class=\"line\"></div><div class=\"line\">-d 显示目录列表 (默认 &apos;True&apos;)</div><div class=\"line\"></div><div class=\"line\">-i 显示 autoIndex (默认 &apos;True&apos;)</div><div class=\"line\"></div><div class=\"line\">-e or --ext 如果没有提供默认的文件扩展名(默认 &apos;html&apos;)</div><div class=\"line\"></div><div class=\"line\">-s or --silent 禁止日志信息输出</div><div class=\"line\"></div><div class=\"line\">--cors 启用 CORS via the Access-Control-Allow-Origin header</div><div class=\"line\"></div><div class=\"line\">-o 在开始服务后打开浏览器</div><div class=\"line\">-c 为 cache-control max-age header 设置Cache time(秒) , e.g. -c10 for 10 seconds (defaults to &apos;3600&apos;). 禁用 caching, 则使用 -c-1.</div><div class=\"line\">-U 或 --utc 使用UTC time 格式化log消息</div><div class=\"line\"></div><div class=\"line\">-P or --proxy Proxies all requests which can&apos;t be resolved locally to the given url. e.g.: -P http://someurl.com</div><div class=\"line\"></div><div class=\"line\">-S or --ssl 启用 https</div><div class=\"line\"></div><div class=\"line\">-C or --cert ssl cert 文件路径 (default: cert.pem)</div><div class=\"line\"></div><div class=\"line\">-K or --key Path to ssl key file (default: key.pem).</div><div class=\"line\"></div><div class=\"line\">-r or --robots Provide a /robots.txt (whose content defaults to &apos;User-agent: *\\nDisallow: /&apos;)</div><div class=\"line\"></div><div class=\"line\">-h or --help 打印以上列表并退出</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>http-server 是一个简单的零配置命令行HTTP服务器, 基于 nodeJs.</p>\n</blockquote>\n<h2 id=\"安装-全局安装\"><a href=\"#安装-全局安装\" class=\"headerlink\" title=\"安装(全局安装)\"></a>安装(全局安装)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install http-server -g</div></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>在站点目录下开启命令行输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http-server</div></pre></td></tr></table></figure></p>\n<p>使用于package.json<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">\"scripts\"</span>: &#123;</div><div class=\"line\">         <span class=\"attr\">\"start\"</span>: <span class=\"string\">\"http-server -a 0.0.0.0 -p 8000\"</span></div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure></p>\n<p>入参：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">-p 端口号 (默认 8080)</div><div class=\"line\"></div><div class=\"line\">-a IP 地址 (默认 0.0.0.0)</div><div class=\"line\"></div><div class=\"line\">-d 显示目录列表 (默认 &apos;True&apos;)</div><div class=\"line\"></div><div class=\"line\">-i 显示 autoIndex (默认 &apos;True&apos;)</div><div class=\"line\"></div><div class=\"line\">-e or --ext 如果没有提供默认的文件扩展名(默认 &apos;html&apos;)</div><div class=\"line\"></div><div class=\"line\">-s or --silent 禁止日志信息输出</div><div class=\"line\"></div><div class=\"line\">--cors 启用 CORS via the Access-Control-Allow-Origin header</div><div class=\"line\"></div><div class=\"line\">-o 在开始服务后打开浏览器</div><div class=\"line\">-c 为 cache-control max-age header 设置Cache time(秒) , e.g. -c10 for 10 seconds (defaults to &apos;3600&apos;). 禁用 caching, 则使用 -c-1.</div><div class=\"line\">-U 或 --utc 使用UTC time 格式化log消息</div><div class=\"line\"></div><div class=\"line\">-P or --proxy Proxies all requests which can&apos;t be resolved locally to the given url. e.g.: -P http://someurl.com</div><div class=\"line\"></div><div class=\"line\">-S or --ssl 启用 https</div><div class=\"line\"></div><div class=\"line\">-C or --cert ssl cert 文件路径 (default: cert.pem)</div><div class=\"line\"></div><div class=\"line\">-K or --key Path to ssl key file (default: key.pem).</div><div class=\"line\"></div><div class=\"line\">-r or --robots Provide a /robots.txt (whose content defaults to &apos;User-agent: *\\nDisallow: /&apos;)</div><div class=\"line\"></div><div class=\"line\">-h or --help 打印以上列表并退出</div></pre></td></tr></table></figure></p>\n"},{"title":"node.js 模块之 pm2","_content":"\n## pm2 简介\npm2 是一个带有负载均衡功能的Node应用的进程管理器.\n当你要把你的独立代码利用全部的服务器上的所有CPU，并保证进程永远都活着，0秒的重载， PM2是完美的。它非常适合IaaS结构，但不要把它用于PaaS方案（随后将开发Paas的解决方案）.\n## 常用命令\n\n## pm2 升级\n\n```\npm2 save\nnpm install -g pm2\npm2 update\n```\n### 全局安装\n```\nnpm install -g pm2\n```\n\n### 开启进程\n\n```\npm2 start app.js -i 3 --name node-api # 开启3个名称为node-api的进程\npm2 start app.js -i max --name node-api # 根据有效CPU数目启动最大进程数目\npm2 monit # 监视所有进程\npm2 list # 显示所有进程状态\npm2 logs node-api # 查看进程日志 默认查看所有\npm2 stop all # 停止所有进程\npm2 restart all # 重启所有进程\npm2 reload all # 0秒停机重载进程 (用于 NETWORKED 进程)\npm2 delete all # 杀死全部进程\npm2 startup # 产生 init 脚本 保持进程活着\npm2 web # 运行健壮的 computer API endpoint (http://localhost:9615)\npm2 start app.js -x #用fork模式启动 app.js 而不是使用 cluster\npm2 start app.js -x -- -a 23 # 用fork模式启动 app.js 并且传递参数 (-a 23)\npm2 start app.json # 启动进程, 在 app.json里设置选项\n```\n\n### 支持CoffeeScript:\n```\npm2 start my_app.coffee\n```\n## 参考\n\n- [PM2 介绍](https://www.douban.com/note/314200231/)\n- [PM2 官方文档](https://github.com/Unitech/pm2)\n","source":"_posts/node.js 模块之 pm2.md","raw":"---\ntitle: node.js 模块之 pm2\n---\n\n## pm2 简介\npm2 是一个带有负载均衡功能的Node应用的进程管理器.\n当你要把你的独立代码利用全部的服务器上的所有CPU，并保证进程永远都活着，0秒的重载， PM2是完美的。它非常适合IaaS结构，但不要把它用于PaaS方案（随后将开发Paas的解决方案）.\n## 常用命令\n\n## pm2 升级\n\n```\npm2 save\nnpm install -g pm2\npm2 update\n```\n### 全局安装\n```\nnpm install -g pm2\n```\n\n### 开启进程\n\n```\npm2 start app.js -i 3 --name node-api # 开启3个名称为node-api的进程\npm2 start app.js -i max --name node-api # 根据有效CPU数目启动最大进程数目\npm2 monit # 监视所有进程\npm2 list # 显示所有进程状态\npm2 logs node-api # 查看进程日志 默认查看所有\npm2 stop all # 停止所有进程\npm2 restart all # 重启所有进程\npm2 reload all # 0秒停机重载进程 (用于 NETWORKED 进程)\npm2 delete all # 杀死全部进程\npm2 startup # 产生 init 脚本 保持进程活着\npm2 web # 运行健壮的 computer API endpoint (http://localhost:9615)\npm2 start app.js -x #用fork模式启动 app.js 而不是使用 cluster\npm2 start app.js -x -- -a 23 # 用fork模式启动 app.js 并且传递参数 (-a 23)\npm2 start app.json # 启动进程, 在 app.json里设置选项\n```\n\n### 支持CoffeeScript:\n```\npm2 start my_app.coffee\n```\n## 参考\n\n- [PM2 介绍](https://www.douban.com/note/314200231/)\n- [PM2 官方文档](https://github.com/Unitech/pm2)\n","slug":"node.js 模块之 pm2","published":1,"date":"2017-08-15T00:58:00.014Z","updated":"2017-08-15T00:58:00.015Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7kas42o0007y0jh7n2fquq9","content":"<h2 id=\"pm2-简介\"><a href=\"#pm2-简介\" class=\"headerlink\" title=\"pm2 简介\"></a>pm2 简介</h2><p>pm2 是一个带有负载均衡功能的Node应用的进程管理器.<br>当你要把你的独立代码利用全部的服务器上的所有CPU，并保证进程永远都活着，0秒的重载， PM2是完美的。它非常适合IaaS结构，但不要把它用于PaaS方案（随后将开发Paas的解决方案）.</p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><h2 id=\"pm2-升级\"><a href=\"#pm2-升级\" class=\"headerlink\" title=\"pm2 升级\"></a>pm2 升级</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">pm2 save</div><div class=\"line\">npm install -g pm2</div><div class=\"line\">pm2 update</div></pre></td></tr></table></figure>\n<h3 id=\"全局安装\"><a href=\"#全局安装\" class=\"headerlink\" title=\"全局安装\"></a>全局安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g pm2</div></pre></td></tr></table></figure>\n<h3 id=\"开启进程\"><a href=\"#开启进程\" class=\"headerlink\" title=\"开启进程\"></a>开启进程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">pm2 start app.js -i 3 --name node-api # 开启3个名称为node-api的进程</div><div class=\"line\">pm2 start app.js -i max --name node-api # 根据有效CPU数目启动最大进程数目</div><div class=\"line\">pm2 monit # 监视所有进程</div><div class=\"line\">pm2 list # 显示所有进程状态</div><div class=\"line\">pm2 logs node-api # 查看进程日志 默认查看所有</div><div class=\"line\">pm2 stop all # 停止所有进程</div><div class=\"line\">pm2 restart all # 重启所有进程</div><div class=\"line\">pm2 reload all # 0秒停机重载进程 (用于 NETWORKED 进程)</div><div class=\"line\">pm2 delete all # 杀死全部进程</div><div class=\"line\">pm2 startup # 产生 init 脚本 保持进程活着</div><div class=\"line\">pm2 web # 运行健壮的 computer API endpoint (http://localhost:9615)</div><div class=\"line\">pm2 start app.js -x #用fork模式启动 app.js 而不是使用 cluster</div><div class=\"line\">pm2 start app.js -x -- -a 23 # 用fork模式启动 app.js 并且传递参数 (-a 23)</div><div class=\"line\">pm2 start app.json # 启动进程, 在 app.json里设置选项</div></pre></td></tr></table></figure>\n<h3 id=\"支持CoffeeScript\"><a href=\"#支持CoffeeScript\" class=\"headerlink\" title=\"支持CoffeeScript:\"></a>支持CoffeeScript:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pm2 start my_app.coffee</div></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.douban.com/note/314200231/\" target=\"_blank\" rel=\"external\">PM2 介绍</a></li>\n<li><a href=\"https://github.com/Unitech/pm2\" target=\"_blank\" rel=\"external\">PM2 官方文档</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"pm2-简介\"><a href=\"#pm2-简介\" class=\"headerlink\" title=\"pm2 简介\"></a>pm2 简介</h2><p>pm2 是一个带有负载均衡功能的Node应用的进程管理器.<br>当你要把你的独立代码利用全部的服务器上的所有CPU，并保证进程永远都活着，0秒的重载， PM2是完美的。它非常适合IaaS结构，但不要把它用于PaaS方案（随后将开发Paas的解决方案）.</p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><h2 id=\"pm2-升级\"><a href=\"#pm2-升级\" class=\"headerlink\" title=\"pm2 升级\"></a>pm2 升级</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">pm2 save</div><div class=\"line\">npm install -g pm2</div><div class=\"line\">pm2 update</div></pre></td></tr></table></figure>\n<h3 id=\"全局安装\"><a href=\"#全局安装\" class=\"headerlink\" title=\"全局安装\"></a>全局安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g pm2</div></pre></td></tr></table></figure>\n<h3 id=\"开启进程\"><a href=\"#开启进程\" class=\"headerlink\" title=\"开启进程\"></a>开启进程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">pm2 start app.js -i 3 --name node-api # 开启3个名称为node-api的进程</div><div class=\"line\">pm2 start app.js -i max --name node-api # 根据有效CPU数目启动最大进程数目</div><div class=\"line\">pm2 monit # 监视所有进程</div><div class=\"line\">pm2 list # 显示所有进程状态</div><div class=\"line\">pm2 logs node-api # 查看进程日志 默认查看所有</div><div class=\"line\">pm2 stop all # 停止所有进程</div><div class=\"line\">pm2 restart all # 重启所有进程</div><div class=\"line\">pm2 reload all # 0秒停机重载进程 (用于 NETWORKED 进程)</div><div class=\"line\">pm2 delete all # 杀死全部进程</div><div class=\"line\">pm2 startup # 产生 init 脚本 保持进程活着</div><div class=\"line\">pm2 web # 运行健壮的 computer API endpoint (http://localhost:9615)</div><div class=\"line\">pm2 start app.js -x #用fork模式启动 app.js 而不是使用 cluster</div><div class=\"line\">pm2 start app.js -x -- -a 23 # 用fork模式启动 app.js 并且传递参数 (-a 23)</div><div class=\"line\">pm2 start app.json # 启动进程, 在 app.json里设置选项</div></pre></td></tr></table></figure>\n<h3 id=\"支持CoffeeScript\"><a href=\"#支持CoffeeScript\" class=\"headerlink\" title=\"支持CoffeeScript:\"></a>支持CoffeeScript:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pm2 start my_app.coffee</div></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.douban.com/note/314200231/\" target=\"_blank\" rel=\"external\">PM2 介绍</a></li>\n<li><a href=\"https://github.com/Unitech/pm2\" target=\"_blank\" rel=\"external\">PM2 官方文档</a></li>\n</ul>\n"},{"layout":"post","title":"nodeppt","date":"2017-08-15T14:39:34.000Z","_content":"\n## 安装\n\n```sh\nnpm install -g nodeppt\n```\n\n## 如何使用nodeapp\n```\nnodeppt start -p 8899 -d demo/\n```\n\n## 生成html文件\n\n```\nnodeppt generate demo/ output -a\n```\n\n## 操作\n\n## 常用命令\n1. 按键 O ，缩略图\n2. 按键 P , 画笔\n3. 按键 C ，清空\n4. 按键字体粗细1234\n5. 设置颜色：r,b,\n\n## 参考\n1. [nodeppt](https://www.npmjs.com/package/nodeppt)\n","source":"_posts/nodeppt.md","raw":"---\nlayout: post\ntitle: nodeppt\ndate: 2017-08-15 22:39:34\ntags: node.js\n---\n\n## 安装\n\n```sh\nnpm install -g nodeppt\n```\n\n## 如何使用nodeapp\n```\nnodeppt start -p 8899 -d demo/\n```\n\n## 生成html文件\n\n```\nnodeppt generate demo/ output -a\n```\n\n## 操作\n\n## 常用命令\n1. 按键 O ，缩略图\n2. 按键 P , 画笔\n3. 按键 C ，清空\n4. 按键字体粗细1234\n5. 设置颜色：r,b,\n\n## 参考\n1. [nodeppt](https://www.npmjs.com/package/nodeppt)\n","slug":"nodeppt","published":1,"updated":"2017-08-15T14:41:23.588Z","_id":"cj7kas42u0008y0jhth7wfluc","comments":1,"photos":[],"link":"","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g nodeppt</div></pre></td></tr></table></figure>\n<h2 id=\"如何使用nodeapp\"><a href=\"#如何使用nodeapp\" class=\"headerlink\" title=\"如何使用nodeapp\"></a>如何使用nodeapp</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nodeppt start -p 8899 -d demo/</div></pre></td></tr></table></figure>\n<h2 id=\"生成html文件\"><a href=\"#生成html文件\" class=\"headerlink\" title=\"生成html文件\"></a>生成html文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nodeppt generate demo/ output -a</div></pre></td></tr></table></figure>\n<h2 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h2><h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><ol>\n<li>按键 O ，缩略图</li>\n<li>按键 P , 画笔</li>\n<li>按键 C ，清空</li>\n<li>按键字体粗细1234</li>\n<li>设置颜色：r,b,</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><a href=\"https://www.npmjs.com/package/nodeppt\" target=\"_blank\" rel=\"external\">nodeppt</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g nodeppt</div></pre></td></tr></table></figure>\n<h2 id=\"如何使用nodeapp\"><a href=\"#如何使用nodeapp\" class=\"headerlink\" title=\"如何使用nodeapp\"></a>如何使用nodeapp</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nodeppt start -p 8899 -d demo/</div></pre></td></tr></table></figure>\n<h2 id=\"生成html文件\"><a href=\"#生成html文件\" class=\"headerlink\" title=\"生成html文件\"></a>生成html文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nodeppt generate demo/ output -a</div></pre></td></tr></table></figure>\n<h2 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h2><h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><ol>\n<li>按键 O ，缩略图</li>\n<li>按键 P , 画笔</li>\n<li>按键 C ，清空</li>\n<li>按键字体粗细1234</li>\n<li>设置颜色：r,b,</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><a href=\"https://www.npmjs.com/package/nodeppt\" target=\"_blank\" rel=\"external\">nodeppt</a></li>\n</ol>\n"},{"title":"node.js 6.9.4 升级","_content":"\n## node.js 简介\nNode.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。\nNode.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。\nNode.js 的包管理器 npm，是全球最大的开源库生态系统。\n\n## node 升级\nNode.js的开发非常活跃，它的最新稳定版本也频繁变化，你不时会发现，一个模块不能在你当前的Node版本上使用，此时你需要升级Node\n\n## 方法一、使用源码，进行编译安装\n\n### 下载源码，并上传到服务器\n\n```\nwget https://nodejs.org/dist/v6.9.2/node-v6.9.2-linux-x64.tar.xz\n```\n\n### 解压源码\n\n```\ntar xzvf node......gz\n```\n\n### 编译安装\n```\n./configuration\nmake\nmake install\n```\n\n### 安装完毕\n\n```\nnode -v  # 结果：6.9.4\n```\n\n## 说明：\n* npm 也会同时升级\n* pm2 也要进行升级\n\n## 方法二、apt-get 升级\n\n### 1. 设置代理\n```\nexport http_proxy=http://127.0.0.1:808\n```\n\n### apt-get update 更新系统\n```\napt-get update\n```\n\n### 提示错误\n\n```\n已下载 247 kB，耗时 5秒 (41.5 kB/s)\n正在读取软件包列表... 完成\nW: GPG 错误：http://apt.oneapm.com stable Release: 由于没有公钥，无法验证下列签名： NO_PUBKEY 8CF9B240B421195B\nW: 仓库 “http://apt.oneapm.com stable Release” 没有数字签名。\nN: 无法认证来自该源的数据，所以使用它会带来潜在风险。\nN: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节\n```\n### 修复命令\n```\ngpg --keyserver pgpkeys.mit.edu --recv-key 8CF9B240B421195B\n\ngpg -a --export  8CF9B240B421195B | sudo apt-key add -\n```\n\n### 重新更新源：\n```\nsudo apt-get update\n```\n\n### 安装源 更新所有的软件：\n\n```\napt-get dist-upgrade\n```\n\n## 方法三、 node 切换版本 mvn\n\nnvm 是 Mac 下的 node 管理工具，有点类似管理 Ruby 的 rvm，如果是需要管理 Windows 下的 node，官方推荐是使用 nvmw 或 nvm-windows 。\n\n### 一、卸载已安装到全局的 node/npm\n\n如果之前是在官网下载的 node 安装包，运行后会自动安装在全局目录，其中\n\nnode 命令在 /usr/local/bin/node ，npm 命令在全局 node_modules 目录中，具体路径为 /usr/local/lib/node_modules/npm\n\n安装 nvm 之后最好先删除下已安装的 node 和全局 node 模块：\n\n```\nnpm ls -g --depth=0 #查看已经安装在全局的模块，以便删除这些全局模块后再按照不同的 node 版本重新进行全局安装\n\nsudo rm -rf /usr/local/lib/node_modules #删除全局 node_modules 目录\nsudo rm /usr/local/bin/node #删除 node\ncd  /usr/local/bin && ls -l | grep \"../lib/node_modules/\" | awk '{print $9}'| xargs rm #删除全局 node 模块注册的软链\n```\n\n### 二、安装 nvm\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | bash\n```\n\n### 三、安装切换各版本 node/npm\n\n```\nnvm install stable #安装最新稳定版 node，现在是 5.0.0\nnvm install 4.2.2 #安装 4.2.2 版本\nnvm install 0.12.7 #安装 0.12.7 版本\n\n# 特别说明：以下模块安装仅供演示说明，并非必须安装模块\nnvm use 0 #切换至 0.12.7 版本\nnpm install -g mz-fis #安装 mz-fis 模块至全局目录，安装完成的路径是 /Users/<你的用户名>/.nvm/versions/node/v0.12.7/lib/mz-fis\nnvm use 4 #切换至 4.2.2 版本\nnpm install -g react-native-cli #安装 react-native-cli 模块至全局目录，安装完成的路径是 /Users/<你的用户名>/.nvm/versions/node/v4.2.2/lib/react-native-cli\n\nnvm alias default 0.12.7 #设置默认 node 版本为 0.12.7\n```\n\n### 四、使用 .nvmrc 文件配置项目所使用的 node 版本\n\n如果你的默认 node 版本（通过 nvm alias 命令设置的）与项目所需的版本不同，则可在项目根目录或其任意父级目录中创建 .nvmrc 文件，在文件中指定使用的 node 版本号，例如：\n\n```\ncd <项目根目录>  #进入项目根目录\necho 4 > .nvmrc #添加 .nvmrc 文件\nnvm use #无需指定版本号，会自动使用 .nvmrc 文件中配置的版本\nnode -v #查看 node 是否切换为对应版本\n```\n\n### 五、nvm 与 n 的区别\n\nnode 版本管理工具还有一个是 TJ 大神的 n 命令，n 命令是作为一个 node 的模块而存在，而 nvm 是一个独立于 node/npm 的外部 shell 脚本，因此 n 命令相比 nvm 更加局限。\n\n由于 npm 安装的模块路径均为 /usr/local/lib/node_modules ，当使用 n 切换不同的 node 版本时，实际上会共用全局的 node/npm 目录。 因此不能很好的满足『按不同 node 版本使用不同全局 node 模块』的需求。\n\n### 参考\n[Ubuntu下如何使用命令行（apt-get）更新软件](http://jingyan.baidu.com/article/4853e1e53204251909f7260f.html)\n[更新linux时候提示无法“由于没有公钥，无法验证下列签名 ***”的解决方案](http://blog.csdn.net/loovejava/article/details/21837935)\n[使用 nvm 管理不同版本的 node 与 npm](http://www.tuicool.com/articles/Vzquy2)","source":"_posts/node.js 6.9.4 升级.md","raw":"---\ntitle: node.js 6.9.4 升级\n---\n\n## node.js 简介\nNode.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。\nNode.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。\nNode.js 的包管理器 npm，是全球最大的开源库生态系统。\n\n## node 升级\nNode.js的开发非常活跃，它的最新稳定版本也频繁变化，你不时会发现，一个模块不能在你当前的Node版本上使用，此时你需要升级Node\n\n## 方法一、使用源码，进行编译安装\n\n### 下载源码，并上传到服务器\n\n```\nwget https://nodejs.org/dist/v6.9.2/node-v6.9.2-linux-x64.tar.xz\n```\n\n### 解压源码\n\n```\ntar xzvf node......gz\n```\n\n### 编译安装\n```\n./configuration\nmake\nmake install\n```\n\n### 安装完毕\n\n```\nnode -v  # 结果：6.9.4\n```\n\n## 说明：\n* npm 也会同时升级\n* pm2 也要进行升级\n\n## 方法二、apt-get 升级\n\n### 1. 设置代理\n```\nexport http_proxy=http://127.0.0.1:808\n```\n\n### apt-get update 更新系统\n```\napt-get update\n```\n\n### 提示错误\n\n```\n已下载 247 kB，耗时 5秒 (41.5 kB/s)\n正在读取软件包列表... 完成\nW: GPG 错误：http://apt.oneapm.com stable Release: 由于没有公钥，无法验证下列签名： NO_PUBKEY 8CF9B240B421195B\nW: 仓库 “http://apt.oneapm.com stable Release” 没有数字签名。\nN: 无法认证来自该源的数据，所以使用它会带来潜在风险。\nN: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节\n```\n### 修复命令\n```\ngpg --keyserver pgpkeys.mit.edu --recv-key 8CF9B240B421195B\n\ngpg -a --export  8CF9B240B421195B | sudo apt-key add -\n```\n\n### 重新更新源：\n```\nsudo apt-get update\n```\n\n### 安装源 更新所有的软件：\n\n```\napt-get dist-upgrade\n```\n\n## 方法三、 node 切换版本 mvn\n\nnvm 是 Mac 下的 node 管理工具，有点类似管理 Ruby 的 rvm，如果是需要管理 Windows 下的 node，官方推荐是使用 nvmw 或 nvm-windows 。\n\n### 一、卸载已安装到全局的 node/npm\n\n如果之前是在官网下载的 node 安装包，运行后会自动安装在全局目录，其中\n\nnode 命令在 /usr/local/bin/node ，npm 命令在全局 node_modules 目录中，具体路径为 /usr/local/lib/node_modules/npm\n\n安装 nvm 之后最好先删除下已安装的 node 和全局 node 模块：\n\n```\nnpm ls -g --depth=0 #查看已经安装在全局的模块，以便删除这些全局模块后再按照不同的 node 版本重新进行全局安装\n\nsudo rm -rf /usr/local/lib/node_modules #删除全局 node_modules 目录\nsudo rm /usr/local/bin/node #删除 node\ncd  /usr/local/bin && ls -l | grep \"../lib/node_modules/\" | awk '{print $9}'| xargs rm #删除全局 node 模块注册的软链\n```\n\n### 二、安装 nvm\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | bash\n```\n\n### 三、安装切换各版本 node/npm\n\n```\nnvm install stable #安装最新稳定版 node，现在是 5.0.0\nnvm install 4.2.2 #安装 4.2.2 版本\nnvm install 0.12.7 #安装 0.12.7 版本\n\n# 特别说明：以下模块安装仅供演示说明，并非必须安装模块\nnvm use 0 #切换至 0.12.7 版本\nnpm install -g mz-fis #安装 mz-fis 模块至全局目录，安装完成的路径是 /Users/<你的用户名>/.nvm/versions/node/v0.12.7/lib/mz-fis\nnvm use 4 #切换至 4.2.2 版本\nnpm install -g react-native-cli #安装 react-native-cli 模块至全局目录，安装完成的路径是 /Users/<你的用户名>/.nvm/versions/node/v4.2.2/lib/react-native-cli\n\nnvm alias default 0.12.7 #设置默认 node 版本为 0.12.7\n```\n\n### 四、使用 .nvmrc 文件配置项目所使用的 node 版本\n\n如果你的默认 node 版本（通过 nvm alias 命令设置的）与项目所需的版本不同，则可在项目根目录或其任意父级目录中创建 .nvmrc 文件，在文件中指定使用的 node 版本号，例如：\n\n```\ncd <项目根目录>  #进入项目根目录\necho 4 > .nvmrc #添加 .nvmrc 文件\nnvm use #无需指定版本号，会自动使用 .nvmrc 文件中配置的版本\nnode -v #查看 node 是否切换为对应版本\n```\n\n### 五、nvm 与 n 的区别\n\nnode 版本管理工具还有一个是 TJ 大神的 n 命令，n 命令是作为一个 node 的模块而存在，而 nvm 是一个独立于 node/npm 的外部 shell 脚本，因此 n 命令相比 nvm 更加局限。\n\n由于 npm 安装的模块路径均为 /usr/local/lib/node_modules ，当使用 n 切换不同的 node 版本时，实际上会共用全局的 node/npm 目录。 因此不能很好的满足『按不同 node 版本使用不同全局 node 模块』的需求。\n\n### 参考\n[Ubuntu下如何使用命令行（apt-get）更新软件](http://jingyan.baidu.com/article/4853e1e53204251909f7260f.html)\n[更新linux时候提示无法“由于没有公钥，无法验证下列签名 ***”的解决方案](http://blog.csdn.net/loovejava/article/details/21837935)\n[使用 nvm 管理不同版本的 node 与 npm](http://www.tuicool.com/articles/Vzquy2)","slug":"node.js 6.9.4 升级","published":1,"date":"2017-08-15T00:58:00.011Z","updated":"2017-08-15T00:58:00.012Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7kas42y0009y0jhy0mw255k","content":"<h2 id=\"node-js-简介\"><a href=\"#node-js-简介\" class=\"headerlink\" title=\"node.js 简介\"></a>node.js 简介</h2><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。<br>Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。<br>Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p>\n<h2 id=\"node-升级\"><a href=\"#node-升级\" class=\"headerlink\" title=\"node 升级\"></a>node 升级</h2><p>Node.js的开发非常活跃，它的最新稳定版本也频繁变化，你不时会发现，一个模块不能在你当前的Node版本上使用，此时你需要升级Node</p>\n<h2 id=\"方法一、使用源码，进行编译安装\"><a href=\"#方法一、使用源码，进行编译安装\" class=\"headerlink\" title=\"方法一、使用源码，进行编译安装\"></a>方法一、使用源码，进行编译安装</h2><h3 id=\"下载源码，并上传到服务器\"><a href=\"#下载源码，并上传到服务器\" class=\"headerlink\" title=\"下载源码，并上传到服务器\"></a>下载源码，并上传到服务器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://nodejs.org/dist/v6.9.2/node-v6.9.2-linux-x64.tar.xz</div></pre></td></tr></table></figure>\n<h3 id=\"解压源码\"><a href=\"#解压源码\" class=\"headerlink\" title=\"解压源码\"></a>解压源码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar xzvf node......gz</div></pre></td></tr></table></figure>\n<h3 id=\"编译安装\"><a href=\"#编译安装\" class=\"headerlink\" title=\"编译安装\"></a>编译安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configuration</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<h3 id=\"安装完毕\"><a href=\"#安装完毕\" class=\"headerlink\" title=\"安装完毕\"></a>安装完毕</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">node -v  # 结果：6.9.4</div></pre></td></tr></table></figure>\n<h2 id=\"说明：\"><a href=\"#说明：\" class=\"headerlink\" title=\"说明：\"></a>说明：</h2><ul>\n<li>npm 也会同时升级</li>\n<li>pm2 也要进行升级</li>\n</ul>\n<h2 id=\"方法二、apt-get-升级\"><a href=\"#方法二、apt-get-升级\" class=\"headerlink\" title=\"方法二、apt-get 升级\"></a>方法二、apt-get 升级</h2><h3 id=\"1-设置代理\"><a href=\"#1-设置代理\" class=\"headerlink\" title=\"1. 设置代理\"></a>1. 设置代理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">export http_proxy=http://127.0.0.1:808</div></pre></td></tr></table></figure>\n<h3 id=\"apt-get-update-更新系统\"><a href=\"#apt-get-update-更新系统\" class=\"headerlink\" title=\"apt-get update 更新系统\"></a>apt-get update 更新系统</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get update</div></pre></td></tr></table></figure>\n<h3 id=\"提示错误\"><a href=\"#提示错误\" class=\"headerlink\" title=\"提示错误\"></a>提示错误</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">已下载 247 kB，耗时 5秒 (41.5 kB/s)</div><div class=\"line\">正在读取软件包列表... 完成</div><div class=\"line\">W: GPG 错误：http://apt.oneapm.com stable Release: 由于没有公钥，无法验证下列签名： NO_PUBKEY 8CF9B240B421195B</div><div class=\"line\">W: 仓库 “http://apt.oneapm.com stable Release” 没有数字签名。</div><div class=\"line\">N: 无法认证来自该源的数据，所以使用它会带来潜在风险。</div><div class=\"line\">N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节</div></pre></td></tr></table></figure>\n<h3 id=\"修复命令\"><a href=\"#修复命令\" class=\"headerlink\" title=\"修复命令\"></a>修复命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gpg --keyserver pgpkeys.mit.edu --recv-key 8CF9B240B421195B</div><div class=\"line\"></div><div class=\"line\">gpg -a --export  8CF9B240B421195B | sudo apt-key add -</div></pre></td></tr></table></figure>\n<h3 id=\"重新更新源：\"><a href=\"#重新更新源：\" class=\"headerlink\" title=\"重新更新源：\"></a>重新更新源：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div></pre></td></tr></table></figure>\n<h3 id=\"安装源-更新所有的软件：\"><a href=\"#安装源-更新所有的软件：\" class=\"headerlink\" title=\"安装源 更新所有的软件：\"></a>安装源 更新所有的软件：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get dist-upgrade</div></pre></td></tr></table></figure>\n<h2 id=\"方法三、-node-切换版本-mvn\"><a href=\"#方法三、-node-切换版本-mvn\" class=\"headerlink\" title=\"方法三、 node 切换版本 mvn\"></a>方法三、 node 切换版本 mvn</h2><p>nvm 是 Mac 下的 node 管理工具，有点类似管理 Ruby 的 rvm，如果是需要管理 Windows 下的 node，官方推荐是使用 nvmw 或 nvm-windows 。</p>\n<h3 id=\"一、卸载已安装到全局的-node-npm\"><a href=\"#一、卸载已安装到全局的-node-npm\" class=\"headerlink\" title=\"一、卸载已安装到全局的 node/npm\"></a>一、卸载已安装到全局的 node/npm</h3><p>如果之前是在官网下载的 node 安装包，运行后会自动安装在全局目录，其中</p>\n<p>node 命令在 /usr/local/bin/node ，npm 命令在全局 node_modules 目录中，具体路径为 /usr/local/lib/node_modules/npm</p>\n<p>安装 nvm 之后最好先删除下已安装的 node 和全局 node 模块：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm ls -g --depth=0 #查看已经安装在全局的模块，以便删除这些全局模块后再按照不同的 node 版本重新进行全局安装</div><div class=\"line\"></div><div class=\"line\">sudo rm -rf /usr/local/lib/node_modules #删除全局 node_modules 目录</div><div class=\"line\">sudo rm /usr/local/bin/node #删除 node</div><div class=\"line\">cd  /usr/local/bin &amp;&amp; ls -l | grep &quot;../lib/node_modules/&quot; | awk &apos;&#123;print $9&#125;&apos;| xargs rm #删除全局 node 模块注册的软链</div></pre></td></tr></table></figure>\n<h3 id=\"二、安装-nvm\"><a href=\"#二、安装-nvm\" class=\"headerlink\" title=\"二、安装 nvm\"></a>二、安装 nvm</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | bash</div></pre></td></tr></table></figure>\n<h3 id=\"三、安装切换各版本-node-npm\"><a href=\"#三、安装切换各版本-node-npm\" class=\"headerlink\" title=\"三、安装切换各版本 node/npm\"></a>三、安装切换各版本 node/npm</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm install stable #安装最新稳定版 node，现在是 5.0.0</div><div class=\"line\">nvm install 4.2.2 #安装 4.2.2 版本</div><div class=\"line\">nvm install 0.12.7 #安装 0.12.7 版本</div><div class=\"line\"></div><div class=\"line\"># 特别说明：以下模块安装仅供演示说明，并非必须安装模块</div><div class=\"line\">nvm use 0 #切换至 0.12.7 版本</div><div class=\"line\">npm install -g mz-fis #安装 mz-fis 模块至全局目录，安装完成的路径是 /Users/&lt;你的用户名&gt;/.nvm/versions/node/v0.12.7/lib/mz-fis</div><div class=\"line\">nvm use 4 #切换至 4.2.2 版本</div><div class=\"line\">npm install -g react-native-cli #安装 react-native-cli 模块至全局目录，安装完成的路径是 /Users/&lt;你的用户名&gt;/.nvm/versions/node/v4.2.2/lib/react-native-cli</div><div class=\"line\"></div><div class=\"line\">nvm alias default 0.12.7 #设置默认 node 版本为 0.12.7</div></pre></td></tr></table></figure>\n<h3 id=\"四、使用-nvmrc-文件配置项目所使用的-node-版本\"><a href=\"#四、使用-nvmrc-文件配置项目所使用的-node-版本\" class=\"headerlink\" title=\"四、使用 .nvmrc 文件配置项目所使用的 node 版本\"></a>四、使用 .nvmrc 文件配置项目所使用的 node 版本</h3><p>如果你的默认 node 版本（通过 nvm alias 命令设置的）与项目所需的版本不同，则可在项目根目录或其任意父级目录中创建 .nvmrc 文件，在文件中指定使用的 node 版本号，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd &lt;项目根目录&gt;  #进入项目根目录</div><div class=\"line\">echo 4 &gt; .nvmrc #添加 .nvmrc 文件</div><div class=\"line\">nvm use #无需指定版本号，会自动使用 .nvmrc 文件中配置的版本</div><div class=\"line\">node -v #查看 node 是否切换为对应版本</div></pre></td></tr></table></figure>\n<h3 id=\"五、nvm-与-n-的区别\"><a href=\"#五、nvm-与-n-的区别\" class=\"headerlink\" title=\"五、nvm 与 n 的区别\"></a>五、nvm 与 n 的区别</h3><p>node 版本管理工具还有一个是 TJ 大神的 n 命令，n 命令是作为一个 node 的模块而存在，而 nvm 是一个独立于 node/npm 的外部 shell 脚本，因此 n 命令相比 nvm 更加局限。</p>\n<p>由于 npm 安装的模块路径均为 /usr/local/lib/node_modules ，当使用 n 切换不同的 node 版本时，实际上会共用全局的 node/npm 目录。 因此不能很好的满足『按不同 node 版本使用不同全局 node 模块』的需求。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"http://jingyan.baidu.com/article/4853e1e53204251909f7260f.html\" target=\"_blank\" rel=\"external\">Ubuntu下如何使用命令行（apt-get）更新软件</a><br><a href=\"http://blog.csdn.net/loovejava/article/details/21837935\" target=\"_blank\" rel=\"external\">更新linux时候提示无法“由于没有公钥，无法验证下列签名 <em>*</em>”的解决方案</a><br><a href=\"http://www.tuicool.com/articles/Vzquy2\" target=\"_blank\" rel=\"external\">使用 nvm 管理不同版本的 node 与 npm</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"node-js-简介\"><a href=\"#node-js-简介\" class=\"headerlink\" title=\"node.js 简介\"></a>node.js 简介</h2><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。<br>Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。<br>Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p>\n<h2 id=\"node-升级\"><a href=\"#node-升级\" class=\"headerlink\" title=\"node 升级\"></a>node 升级</h2><p>Node.js的开发非常活跃，它的最新稳定版本也频繁变化，你不时会发现，一个模块不能在你当前的Node版本上使用，此时你需要升级Node</p>\n<h2 id=\"方法一、使用源码，进行编译安装\"><a href=\"#方法一、使用源码，进行编译安装\" class=\"headerlink\" title=\"方法一、使用源码，进行编译安装\"></a>方法一、使用源码，进行编译安装</h2><h3 id=\"下载源码，并上传到服务器\"><a href=\"#下载源码，并上传到服务器\" class=\"headerlink\" title=\"下载源码，并上传到服务器\"></a>下载源码，并上传到服务器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget https://nodejs.org/dist/v6.9.2/node-v6.9.2-linux-x64.tar.xz</div></pre></td></tr></table></figure>\n<h3 id=\"解压源码\"><a href=\"#解压源码\" class=\"headerlink\" title=\"解压源码\"></a>解压源码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar xzvf node......gz</div></pre></td></tr></table></figure>\n<h3 id=\"编译安装\"><a href=\"#编译安装\" class=\"headerlink\" title=\"编译安装\"></a>编译安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configuration</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<h3 id=\"安装完毕\"><a href=\"#安装完毕\" class=\"headerlink\" title=\"安装完毕\"></a>安装完毕</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">node -v  # 结果：6.9.4</div></pre></td></tr></table></figure>\n<h2 id=\"说明：\"><a href=\"#说明：\" class=\"headerlink\" title=\"说明：\"></a>说明：</h2><ul>\n<li>npm 也会同时升级</li>\n<li>pm2 也要进行升级</li>\n</ul>\n<h2 id=\"方法二、apt-get-升级\"><a href=\"#方法二、apt-get-升级\" class=\"headerlink\" title=\"方法二、apt-get 升级\"></a>方法二、apt-get 升级</h2><h3 id=\"1-设置代理\"><a href=\"#1-设置代理\" class=\"headerlink\" title=\"1. 设置代理\"></a>1. 设置代理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">export http_proxy=http://127.0.0.1:808</div></pre></td></tr></table></figure>\n<h3 id=\"apt-get-update-更新系统\"><a href=\"#apt-get-update-更新系统\" class=\"headerlink\" title=\"apt-get update 更新系统\"></a>apt-get update 更新系统</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get update</div></pre></td></tr></table></figure>\n<h3 id=\"提示错误\"><a href=\"#提示错误\" class=\"headerlink\" title=\"提示错误\"></a>提示错误</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">已下载 247 kB，耗时 5秒 (41.5 kB/s)</div><div class=\"line\">正在读取软件包列表... 完成</div><div class=\"line\">W: GPG 错误：http://apt.oneapm.com stable Release: 由于没有公钥，无法验证下列签名： NO_PUBKEY 8CF9B240B421195B</div><div class=\"line\">W: 仓库 “http://apt.oneapm.com stable Release” 没有数字签名。</div><div class=\"line\">N: 无法认证来自该源的数据，所以使用它会带来潜在风险。</div><div class=\"line\">N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节</div></pre></td></tr></table></figure>\n<h3 id=\"修复命令\"><a href=\"#修复命令\" class=\"headerlink\" title=\"修复命令\"></a>修复命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gpg --keyserver pgpkeys.mit.edu --recv-key 8CF9B240B421195B</div><div class=\"line\"></div><div class=\"line\">gpg -a --export  8CF9B240B421195B | sudo apt-key add -</div></pre></td></tr></table></figure>\n<h3 id=\"重新更新源：\"><a href=\"#重新更新源：\" class=\"headerlink\" title=\"重新更新源：\"></a>重新更新源：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div></pre></td></tr></table></figure>\n<h3 id=\"安装源-更新所有的软件：\"><a href=\"#安装源-更新所有的软件：\" class=\"headerlink\" title=\"安装源 更新所有的软件：\"></a>安装源 更新所有的软件：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get dist-upgrade</div></pre></td></tr></table></figure>\n<h2 id=\"方法三、-node-切换版本-mvn\"><a href=\"#方法三、-node-切换版本-mvn\" class=\"headerlink\" title=\"方法三、 node 切换版本 mvn\"></a>方法三、 node 切换版本 mvn</h2><p>nvm 是 Mac 下的 node 管理工具，有点类似管理 Ruby 的 rvm，如果是需要管理 Windows 下的 node，官方推荐是使用 nvmw 或 nvm-windows 。</p>\n<h3 id=\"一、卸载已安装到全局的-node-npm\"><a href=\"#一、卸载已安装到全局的-node-npm\" class=\"headerlink\" title=\"一、卸载已安装到全局的 node/npm\"></a>一、卸载已安装到全局的 node/npm</h3><p>如果之前是在官网下载的 node 安装包，运行后会自动安装在全局目录，其中</p>\n<p>node 命令在 /usr/local/bin/node ，npm 命令在全局 node_modules 目录中，具体路径为 /usr/local/lib/node_modules/npm</p>\n<p>安装 nvm 之后最好先删除下已安装的 node 和全局 node 模块：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm ls -g --depth=0 #查看已经安装在全局的模块，以便删除这些全局模块后再按照不同的 node 版本重新进行全局安装</div><div class=\"line\"></div><div class=\"line\">sudo rm -rf /usr/local/lib/node_modules #删除全局 node_modules 目录</div><div class=\"line\">sudo rm /usr/local/bin/node #删除 node</div><div class=\"line\">cd  /usr/local/bin &amp;&amp; ls -l | grep &quot;../lib/node_modules/&quot; | awk &apos;&#123;print $9&#125;&apos;| xargs rm #删除全局 node 模块注册的软链</div></pre></td></tr></table></figure>\n<h3 id=\"二、安装-nvm\"><a href=\"#二、安装-nvm\" class=\"headerlink\" title=\"二、安装 nvm\"></a>二、安装 nvm</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.29.0/install.sh | bash</div></pre></td></tr></table></figure>\n<h3 id=\"三、安装切换各版本-node-npm\"><a href=\"#三、安装切换各版本-node-npm\" class=\"headerlink\" title=\"三、安装切换各版本 node/npm\"></a>三、安装切换各版本 node/npm</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm install stable #安装最新稳定版 node，现在是 5.0.0</div><div class=\"line\">nvm install 4.2.2 #安装 4.2.2 版本</div><div class=\"line\">nvm install 0.12.7 #安装 0.12.7 版本</div><div class=\"line\"></div><div class=\"line\"># 特别说明：以下模块安装仅供演示说明，并非必须安装模块</div><div class=\"line\">nvm use 0 #切换至 0.12.7 版本</div><div class=\"line\">npm install -g mz-fis #安装 mz-fis 模块至全局目录，安装完成的路径是 /Users/&lt;你的用户名&gt;/.nvm/versions/node/v0.12.7/lib/mz-fis</div><div class=\"line\">nvm use 4 #切换至 4.2.2 版本</div><div class=\"line\">npm install -g react-native-cli #安装 react-native-cli 模块至全局目录，安装完成的路径是 /Users/&lt;你的用户名&gt;/.nvm/versions/node/v4.2.2/lib/react-native-cli</div><div class=\"line\"></div><div class=\"line\">nvm alias default 0.12.7 #设置默认 node 版本为 0.12.7</div></pre></td></tr></table></figure>\n<h3 id=\"四、使用-nvmrc-文件配置项目所使用的-node-版本\"><a href=\"#四、使用-nvmrc-文件配置项目所使用的-node-版本\" class=\"headerlink\" title=\"四、使用 .nvmrc 文件配置项目所使用的 node 版本\"></a>四、使用 .nvmrc 文件配置项目所使用的 node 版本</h3><p>如果你的默认 node 版本（通过 nvm alias 命令设置的）与项目所需的版本不同，则可在项目根目录或其任意父级目录中创建 .nvmrc 文件，在文件中指定使用的 node 版本号，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd &lt;项目根目录&gt;  #进入项目根目录</div><div class=\"line\">echo 4 &gt; .nvmrc #添加 .nvmrc 文件</div><div class=\"line\">nvm use #无需指定版本号，会自动使用 .nvmrc 文件中配置的版本</div><div class=\"line\">node -v #查看 node 是否切换为对应版本</div></pre></td></tr></table></figure>\n<h3 id=\"五、nvm-与-n-的区别\"><a href=\"#五、nvm-与-n-的区别\" class=\"headerlink\" title=\"五、nvm 与 n 的区别\"></a>五、nvm 与 n 的区别</h3><p>node 版本管理工具还有一个是 TJ 大神的 n 命令，n 命令是作为一个 node 的模块而存在，而 nvm 是一个独立于 node/npm 的外部 shell 脚本，因此 n 命令相比 nvm 更加局限。</p>\n<p>由于 npm 安装的模块路径均为 /usr/local/lib/node_modules ，当使用 n 切换不同的 node 版本时，实际上会共用全局的 node/npm 目录。 因此不能很好的满足『按不同 node 版本使用不同全局 node 模块』的需求。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"http://jingyan.baidu.com/article/4853e1e53204251909f7260f.html\" target=\"_blank\" rel=\"external\">Ubuntu下如何使用命令行（apt-get）更新软件</a><br><a href=\"http://blog.csdn.net/loovejava/article/details/21837935\" target=\"_blank\" rel=\"external\">更新linux时候提示无法“由于没有公钥，无法验证下列签名 <em>*</em>”的解决方案</a><br><a href=\"http://www.tuicool.com/articles/Vzquy2\" target=\"_blank\" rel=\"external\">使用 nvm 管理不同版本的 node 与 npm</a></p>\n"},{"title":"node.js下用window.onerror捕获并上报Js错误","_content":"\n## 使用场景\n1. 捕获前端js异常信息，方便后期优化\n2. 方便前端交互持续优化\n3. 方便问题重现\n\n\n## 环境\n* node.js\n* 框架：koa\n* 日志模块：log4js\n\n## 前端代码\n1. 使用前端的window.onerror 事件进行监听前端代码的异常。\n2. 当前端代码发生异常时，通过post并将异常信息上传服务器。\n\n```js\nwindow.onerror = function(errorMessage, scriptURI, lineNumber, columnNumber, errorObj) {\n    var params = {\n        errorMessage: errorMessage,\n        scriptURI: scriptURI,\n        lineNumber: lineNumber,\n        columnNumber: columnNumber,\n        errorObj: errorObj\n    };\n    $.post('/yourserver/error', params, function(data) {\n        console.log(JSON.stringify(data));\n    });\n}\n```\n\n## 后端代码\n1. 记录前端异常信息\n2. 记录发生异常时设备、浏览器信息\n3. 记录发生异常的ip地址\n\n```js\nvar body = this.request.body;\nvar userAgent = this.headers['user-agent'];\nvar cookie = this.headers['cookie'];\nlogger.error('--------------------前端异常信息----------------------');\nlogger.error(\"手机及浏览器环境：\" + userAgent);\nlogger.error(\"ip地址：\" + this.ip);\nlogger.error(\"cookie：\" + cookie);\nlogger.error(\"错误信息：\" + body.errorMessage);\nlogger.error(\"出错文件：\" + body.scriptURI);\nlogger.error(\"出错行号：\" + body.lineNumber);\nlogger.error(\"出错列号：\" + body.columnNumber);\nlogger.error(\"错误详情：\" + body.errorObj);\nlogger.error(\"----------------------end-----------------------------\");\nthis.body = {status:200,data:'ok'};\n\n```\n\n## 结果\n\n浏览器端：\n![浏览器端异常信息](/view/img/window-err-b.jpg)\n\n服务器端：\n![服务器异常信息](/view/img/window.error.png)\n\n","source":"_posts/node.js下用window.onerror捕获并上报Js错误.md","raw":"---\ntitle: node.js下用window.onerror捕获并上报Js错误\n---\n\n## 使用场景\n1. 捕获前端js异常信息，方便后期优化\n2. 方便前端交互持续优化\n3. 方便问题重现\n\n\n## 环境\n* node.js\n* 框架：koa\n* 日志模块：log4js\n\n## 前端代码\n1. 使用前端的window.onerror 事件进行监听前端代码的异常。\n2. 当前端代码发生异常时，通过post并将异常信息上传服务器。\n\n```js\nwindow.onerror = function(errorMessage, scriptURI, lineNumber, columnNumber, errorObj) {\n    var params = {\n        errorMessage: errorMessage,\n        scriptURI: scriptURI,\n        lineNumber: lineNumber,\n        columnNumber: columnNumber,\n        errorObj: errorObj\n    };\n    $.post('/yourserver/error', params, function(data) {\n        console.log(JSON.stringify(data));\n    });\n}\n```\n\n## 后端代码\n1. 记录前端异常信息\n2. 记录发生异常时设备、浏览器信息\n3. 记录发生异常的ip地址\n\n```js\nvar body = this.request.body;\nvar userAgent = this.headers['user-agent'];\nvar cookie = this.headers['cookie'];\nlogger.error('--------------------前端异常信息----------------------');\nlogger.error(\"手机及浏览器环境：\" + userAgent);\nlogger.error(\"ip地址：\" + this.ip);\nlogger.error(\"cookie：\" + cookie);\nlogger.error(\"错误信息：\" + body.errorMessage);\nlogger.error(\"出错文件：\" + body.scriptURI);\nlogger.error(\"出错行号：\" + body.lineNumber);\nlogger.error(\"出错列号：\" + body.columnNumber);\nlogger.error(\"错误详情：\" + body.errorObj);\nlogger.error(\"----------------------end-----------------------------\");\nthis.body = {status:200,data:'ok'};\n\n```\n\n## 结果\n\n浏览器端：\n![浏览器端异常信息](/view/img/window-err-b.jpg)\n\n服务器端：\n![服务器异常信息](/view/img/window.error.png)\n\n","slug":"node.js下用window.onerror捕获并上报Js错误","published":1,"date":"2017-08-15T00:58:00.017Z","updated":"2017-08-15T00:58:00.018Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7kas43j000by0jhn5k5x885","content":"<h2 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h2><ol>\n<li>捕获前端js异常信息，方便后期优化</li>\n<li>方便前端交互持续优化</li>\n<li>方便问题重现</li>\n</ol>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><ul>\n<li>node.js</li>\n<li>框架：koa</li>\n<li>日志模块：log4js</li>\n</ul>\n<h2 id=\"前端代码\"><a href=\"#前端代码\" class=\"headerlink\" title=\"前端代码\"></a>前端代码</h2><ol>\n<li>使用前端的window.onerror 事件进行监听前端代码的异常。</li>\n<li>当前端代码发生异常时，通过post并将异常信息上传服务器。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.onerror = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">errorMessage, scriptURI, lineNumber, columnNumber, errorObj</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> params = &#123;</div><div class=\"line\">        errorMessage: errorMessage,</div><div class=\"line\">        scriptURI: scriptURI,</div><div class=\"line\">        lineNumber: lineNumber,</div><div class=\"line\">        columnNumber: columnNumber,</div><div class=\"line\">        errorObj: errorObj</div><div class=\"line\">    &#125;;</div><div class=\"line\">    $.post(<span class=\"string\">'/yourserver/error'</span>, params, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(data));</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"后端代码\"><a href=\"#后端代码\" class=\"headerlink\" title=\"后端代码\"></a>后端代码</h2><ol>\n<li>记录前端异常信息</li>\n<li>记录发生异常时设备、浏览器信息</li>\n<li>记录发生异常的ip地址</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> body = <span class=\"keyword\">this</span>.request.body;</div><div class=\"line\"><span class=\"keyword\">var</span> userAgent = <span class=\"keyword\">this</span>.headers[<span class=\"string\">'user-agent'</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> cookie = <span class=\"keyword\">this</span>.headers[<span class=\"string\">'cookie'</span>];</div><div class=\"line\">logger.error(<span class=\"string\">'--------------------前端异常信息----------------------'</span>);</div><div class=\"line\">logger.error(<span class=\"string\">\"手机及浏览器环境：\"</span> + userAgent);</div><div class=\"line\">logger.error(<span class=\"string\">\"ip地址：\"</span> + <span class=\"keyword\">this</span>.ip);</div><div class=\"line\">logger.error(<span class=\"string\">\"cookie：\"</span> + cookie);</div><div class=\"line\">logger.error(<span class=\"string\">\"错误信息：\"</span> + body.errorMessage);</div><div class=\"line\">logger.error(<span class=\"string\">\"出错文件：\"</span> + body.scriptURI);</div><div class=\"line\">logger.error(<span class=\"string\">\"出错行号：\"</span> + body.lineNumber);</div><div class=\"line\">logger.error(<span class=\"string\">\"出错列号：\"</span> + body.columnNumber);</div><div class=\"line\">logger.error(<span class=\"string\">\"错误详情：\"</span> + body.errorObj);</div><div class=\"line\">logger.error(<span class=\"string\">\"----------------------end-----------------------------\"</span>);</div><div class=\"line\"><span class=\"keyword\">this</span>.body = &#123;<span class=\"attr\">status</span>:<span class=\"number\">200</span>,<span class=\"attr\">data</span>:<span class=\"string\">'ok'</span>&#125;;</div></pre></td></tr></table></figure>\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p>浏览器端：<br><img src=\"/view/img/window-err-b.jpg\" alt=\"浏览器端异常信息\"></p>\n<p>服务器端：<br><img src=\"/view/img/window.error.png\" alt=\"服务器异常信息\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h2><ol>\n<li>捕获前端js异常信息，方便后期优化</li>\n<li>方便前端交互持续优化</li>\n<li>方便问题重现</li>\n</ol>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><ul>\n<li>node.js</li>\n<li>框架：koa</li>\n<li>日志模块：log4js</li>\n</ul>\n<h2 id=\"前端代码\"><a href=\"#前端代码\" class=\"headerlink\" title=\"前端代码\"></a>前端代码</h2><ol>\n<li>使用前端的window.onerror 事件进行监听前端代码的异常。</li>\n<li>当前端代码发生异常时，通过post并将异常信息上传服务器。</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">window</span>.onerror = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">errorMessage, scriptURI, lineNumber, columnNumber, errorObj</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> params = &#123;</div><div class=\"line\">        errorMessage: errorMessage,</div><div class=\"line\">        scriptURI: scriptURI,</div><div class=\"line\">        lineNumber: lineNumber,</div><div class=\"line\">        columnNumber: columnNumber,</div><div class=\"line\">        errorObj: errorObj</div><div class=\"line\">    &#125;;</div><div class=\"line\">    $.post(<span class=\"string\">'/yourserver/error'</span>, params, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(data));</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"后端代码\"><a href=\"#后端代码\" class=\"headerlink\" title=\"后端代码\"></a>后端代码</h2><ol>\n<li>记录前端异常信息</li>\n<li>记录发生异常时设备、浏览器信息</li>\n<li>记录发生异常的ip地址</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> body = <span class=\"keyword\">this</span>.request.body;</div><div class=\"line\"><span class=\"keyword\">var</span> userAgent = <span class=\"keyword\">this</span>.headers[<span class=\"string\">'user-agent'</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> cookie = <span class=\"keyword\">this</span>.headers[<span class=\"string\">'cookie'</span>];</div><div class=\"line\">logger.error(<span class=\"string\">'--------------------前端异常信息----------------------'</span>);</div><div class=\"line\">logger.error(<span class=\"string\">\"手机及浏览器环境：\"</span> + userAgent);</div><div class=\"line\">logger.error(<span class=\"string\">\"ip地址：\"</span> + <span class=\"keyword\">this</span>.ip);</div><div class=\"line\">logger.error(<span class=\"string\">\"cookie：\"</span> + cookie);</div><div class=\"line\">logger.error(<span class=\"string\">\"错误信息：\"</span> + body.errorMessage);</div><div class=\"line\">logger.error(<span class=\"string\">\"出错文件：\"</span> + body.scriptURI);</div><div class=\"line\">logger.error(<span class=\"string\">\"出错行号：\"</span> + body.lineNumber);</div><div class=\"line\">logger.error(<span class=\"string\">\"出错列号：\"</span> + body.columnNumber);</div><div class=\"line\">logger.error(<span class=\"string\">\"错误详情：\"</span> + body.errorObj);</div><div class=\"line\">logger.error(<span class=\"string\">\"----------------------end-----------------------------\"</span>);</div><div class=\"line\"><span class=\"keyword\">this</span>.body = &#123;<span class=\"attr\">status</span>:<span class=\"number\">200</span>,<span class=\"attr\">data</span>:<span class=\"string\">'ok'</span>&#125;;</div></pre></td></tr></table></figure>\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p>浏览器端：<br><img src=\"/view/img/window-err-b.jpg\" alt=\"浏览器端异常信息\"></p>\n<p>服务器端：<br><img src=\"/view/img/window.error.png\" alt=\"服务器异常信息\"></p>\n"},{"title":"npm 常用命令","_content":"\n## 简介NPM(Node Package Manger)\nNPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：\n1. 允许用户从NPM服务器下载别人编写的第三方包到本地使用。\n2. 允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。\n3. 允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。\n## npm 安装\n* Windows 下，一般情况，安装node.js 的同时，npm 也会同时安装。\n* Ubuntu 下\n```\nsudo apt-get install curl\ncurl http://npmjs.org/install.sh | sudo sh\n#或者\nsudo apt-get install npm\n#查看npm被安装到哪里\nwhereis npm \n#设置成全局：\nln -s [文件位置/npm]  /usr/local/bin/npm\n```\n## 配置镜像\n```\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\nnpm install  --registry=https://registry.npm.taobao.org\nnpm config set registry http://registry.npmjs.org/\n```\n\n## npm 升级\n```\nnpm -g install npm ( 最新稳定版 ) 或\nnpm -g install npm@2.9.1 ( 指定版本 )\n```\n\n\n## 常用\n\n```\nnpm install -g pm2\nnpm install -g nodemon\nnpm install -g vue-cli\nnpm install -g  webpack\nnpm i -g bower  ## 升级\n```\n\n## 常用命令\n\n安装必要依赖\n```\nnpm install --production\n```\n\n安装开发依赖\n```\nnpm install --dev\n```\n\n安装全部依赖\n```\nnpm install\n```\n#### 全局安装辅助模块\n```\n$ npm install pm2 -g # 命令行安装 pm2\nnpm install -g cnpm  # 国内开发必用\nnpm install -g nodemon \n```\n#### 安装并更新package.json中的版本配置\n* 添加–save 参数安装的模块的名字及其版本信息会出现在package.json的dependencies选项中\n* 添加–save-dev 参数安装的模块的名字及其版本信息会出现在package.json的devDependencies选项中\n* 添加–save-optional 参数安装的模块的名字及其版本信息会出现在package.json的optionalDependencies选项中\n```\nnpm install <name> [–save|–save-dev|–save-optional]\n```\n\n#### 安装模块的config的tag配置中含有指定tag的版本\n```\nnpm install <name>@<tag>\nExample:\nnpm install sax@latest\n安装模块的指定版本\nnpm install <name>@<version>\n```\n\n#### 显示npm的bin目录\n```\nnpm bin\n```\n\n#### 设置npm配置\n```\nnpm config set <key> <value> [–global]\n```\n使用–global参数，设置全局配置\nExample:\n设置代理\n```\nnpm config set proxy=http://proxy.tencent.com:8080\n```\n#### 设置npm的镜像地址\n```\nnpm config set registry http://npm.oa.com\n```\n获取npm配置\nnpm config get <key>\nExample:\n#### 获取npm当前镜像地址\n```\nnpm config get registory\n```\n#### 删除npm配置\n```\nnpm config delete <key>\n```\nExample:\n#### 删除代理设置\n```\nnpm config delete proxy\n```\n#### 在编辑器中打开npm配置文件\n```\nnpm config edit\n```\n#### 交互式的创建package.json文件\n```\nnpm init\n```\n#### 创建模块的压缩包\n```\nnpm pack [<pkg> [<pkg> … ]]\n```\n如果没有参数，则npm会打包当前模块目录\n发布模块，发布后可通过名称来安装该模块\n```\nnpm publish <tarball>\nnpm publish <folder>\n```\n其中：\n<folder>：包含package.json文件的目录\n<tarball>：经过gzip压缩并归档的一个URL或文件路径，该压缩包包含单个目录，且该目录内有package.json文件\n#### 删除模块\n```\nnpm rm <name>\nnpm r <name>\nnpm uninstall <name>\nnpm un <name>\n```\n注意：不会删除package.json文件dependencies选项中对应的依赖配置\n#### 查找模块\n```\nnpm search [search terms ..]\nnpm s [search terms ..]\nnpm se [search terms ..]\n```\n查找匹配查找字符串的模块\n#### 更新模块\n```\nnpm update [-g] [<name> [<name> … ]]\n```\n更新指定name列表中的模块。-g参数更新全局安装的模块。\n如果没有指定name，且不是在某个模块内，会更新当前目录依赖的所有包都会被更新（包括全局和模块内）；如果当前目录在某个模块目录内，会更新该模块依赖的模块，所以不指定name直接运行npm update时，最好在某个模块内运行，以免更新到其他不想更新的模块。\n#### 执行脚本\n```\nnpm start [<name>]\nnpm stop [<name>]\nnpm test [<name>]\nnpm run [<name>]\n```\n运行package的start脚本，该脚本写在package.json文件scripts的start字段中。\n该字段的值可以是当前系统控制台可执行的脚本，也可以是当前系统可执行文件的路径。\n如果不传name参数，则执行当前目录下package.json文件中定义的脚本。\n详见https://npmjs.org/doc/misc/npm-scripts.html\n#### package.json文件\n模块的配置文件，详见https://npmjs.org/doc/files/package.json.html\n\n\n## 发布项目到npm\n1. 在[NPM官网](https://www.npmjs.com/)注册账号\n2. 用户验证，命令行执行\n\n```\nnpm adduser\nnpm login # 登录\nnpm who am i\n```\n\n3. 发布模块，在模块的根文件夹执行\n```\nnpm publish\n```\n4. 更新版本\n> 如果是git库时，会为新版本号创建一条提交信息，package版本号会自动递增。\n```\nnpm version 0.0.4\nnpm publish\n```\n\n5. 将代码同步到github.com\n\n## npm常用命令\n```\nnpm search module_name 查找模块\nnpm docs module_name 查找模块文档\nnpm install 安装package.json指定的所有模块\nnpm start\nnpm test\ncnpm install gulp --save-dev\n```\n\n## Package.json 属性说明\n<pre>\n   name - 包名。\n   version - 包的版本号。\n   description - 包的描述。\n   homepage - 包的官网 url 。\n   author - 包的作者姓名。\n   contributors - 包的其他贡献者姓名。\n   dependencies - 依赖包列表。如果依赖包没有安装，npm 会自动将依赖包安装在 node_module 目录下。\n   repository - 包代码存放的地方的类型，可以是 git 或 svn，git 可在 Github 上。\n   main - main 字段是一个模块ID，它是一个指向你程序的主要项目。就是说，如果你包的名字叫 express，然后用户安装它，然后require(\"express\")。\n   keywords - 关键字\n</pre>\n\n\n\n","source":"_posts/npm.md","raw":"---\ntitle: npm 常用命令\n---\n\n## 简介NPM(Node Package Manger)\nNPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：\n1. 允许用户从NPM服务器下载别人编写的第三方包到本地使用。\n2. 允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。\n3. 允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。\n## npm 安装\n* Windows 下，一般情况，安装node.js 的同时，npm 也会同时安装。\n* Ubuntu 下\n```\nsudo apt-get install curl\ncurl http://npmjs.org/install.sh | sudo sh\n#或者\nsudo apt-get install npm\n#查看npm被安装到哪里\nwhereis npm \n#设置成全局：\nln -s [文件位置/npm]  /usr/local/bin/npm\n```\n## 配置镜像\n```\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\nnpm install  --registry=https://registry.npm.taobao.org\nnpm config set registry http://registry.npmjs.org/\n```\n\n## npm 升级\n```\nnpm -g install npm ( 最新稳定版 ) 或\nnpm -g install npm@2.9.1 ( 指定版本 )\n```\n\n\n## 常用\n\n```\nnpm install -g pm2\nnpm install -g nodemon\nnpm install -g vue-cli\nnpm install -g  webpack\nnpm i -g bower  ## 升级\n```\n\n## 常用命令\n\n安装必要依赖\n```\nnpm install --production\n```\n\n安装开发依赖\n```\nnpm install --dev\n```\n\n安装全部依赖\n```\nnpm install\n```\n#### 全局安装辅助模块\n```\n$ npm install pm2 -g # 命令行安装 pm2\nnpm install -g cnpm  # 国内开发必用\nnpm install -g nodemon \n```\n#### 安装并更新package.json中的版本配置\n* 添加–save 参数安装的模块的名字及其版本信息会出现在package.json的dependencies选项中\n* 添加–save-dev 参数安装的模块的名字及其版本信息会出现在package.json的devDependencies选项中\n* 添加–save-optional 参数安装的模块的名字及其版本信息会出现在package.json的optionalDependencies选项中\n```\nnpm install <name> [–save|–save-dev|–save-optional]\n```\n\n#### 安装模块的config的tag配置中含有指定tag的版本\n```\nnpm install <name>@<tag>\nExample:\nnpm install sax@latest\n安装模块的指定版本\nnpm install <name>@<version>\n```\n\n#### 显示npm的bin目录\n```\nnpm bin\n```\n\n#### 设置npm配置\n```\nnpm config set <key> <value> [–global]\n```\n使用–global参数，设置全局配置\nExample:\n设置代理\n```\nnpm config set proxy=http://proxy.tencent.com:8080\n```\n#### 设置npm的镜像地址\n```\nnpm config set registry http://npm.oa.com\n```\n获取npm配置\nnpm config get <key>\nExample:\n#### 获取npm当前镜像地址\n```\nnpm config get registory\n```\n#### 删除npm配置\n```\nnpm config delete <key>\n```\nExample:\n#### 删除代理设置\n```\nnpm config delete proxy\n```\n#### 在编辑器中打开npm配置文件\n```\nnpm config edit\n```\n#### 交互式的创建package.json文件\n```\nnpm init\n```\n#### 创建模块的压缩包\n```\nnpm pack [<pkg> [<pkg> … ]]\n```\n如果没有参数，则npm会打包当前模块目录\n发布模块，发布后可通过名称来安装该模块\n```\nnpm publish <tarball>\nnpm publish <folder>\n```\n其中：\n<folder>：包含package.json文件的目录\n<tarball>：经过gzip压缩并归档的一个URL或文件路径，该压缩包包含单个目录，且该目录内有package.json文件\n#### 删除模块\n```\nnpm rm <name>\nnpm r <name>\nnpm uninstall <name>\nnpm un <name>\n```\n注意：不会删除package.json文件dependencies选项中对应的依赖配置\n#### 查找模块\n```\nnpm search [search terms ..]\nnpm s [search terms ..]\nnpm se [search terms ..]\n```\n查找匹配查找字符串的模块\n#### 更新模块\n```\nnpm update [-g] [<name> [<name> … ]]\n```\n更新指定name列表中的模块。-g参数更新全局安装的模块。\n如果没有指定name，且不是在某个模块内，会更新当前目录依赖的所有包都会被更新（包括全局和模块内）；如果当前目录在某个模块目录内，会更新该模块依赖的模块，所以不指定name直接运行npm update时，最好在某个模块内运行，以免更新到其他不想更新的模块。\n#### 执行脚本\n```\nnpm start [<name>]\nnpm stop [<name>]\nnpm test [<name>]\nnpm run [<name>]\n```\n运行package的start脚本，该脚本写在package.json文件scripts的start字段中。\n该字段的值可以是当前系统控制台可执行的脚本，也可以是当前系统可执行文件的路径。\n如果不传name参数，则执行当前目录下package.json文件中定义的脚本。\n详见https://npmjs.org/doc/misc/npm-scripts.html\n#### package.json文件\n模块的配置文件，详见https://npmjs.org/doc/files/package.json.html\n\n\n## 发布项目到npm\n1. 在[NPM官网](https://www.npmjs.com/)注册账号\n2. 用户验证，命令行执行\n\n```\nnpm adduser\nnpm login # 登录\nnpm who am i\n```\n\n3. 发布模块，在模块的根文件夹执行\n```\nnpm publish\n```\n4. 更新版本\n> 如果是git库时，会为新版本号创建一条提交信息，package版本号会自动递增。\n```\nnpm version 0.0.4\nnpm publish\n```\n\n5. 将代码同步到github.com\n\n## npm常用命令\n```\nnpm search module_name 查找模块\nnpm docs module_name 查找模块文档\nnpm install 安装package.json指定的所有模块\nnpm start\nnpm test\ncnpm install gulp --save-dev\n```\n\n## Package.json 属性说明\n<pre>\n   name - 包名。\n   version - 包的版本号。\n   description - 包的描述。\n   homepage - 包的官网 url 。\n   author - 包的作者姓名。\n   contributors - 包的其他贡献者姓名。\n   dependencies - 依赖包列表。如果依赖包没有安装，npm 会自动将依赖包安装在 node_module 目录下。\n   repository - 包代码存放的地方的类型，可以是 git 或 svn，git 可在 Github 上。\n   main - main 字段是一个模块ID，它是一个指向你程序的主要项目。就是说，如果你包的名字叫 express，然后用户安装它，然后require(\"express\")。\n   keywords - 关键字\n</pre>\n\n\n\n","slug":"npm","published":1,"date":"2017-08-15T00:58:00.023Z","updated":"2017-08-15T00:58:00.025Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7kas448000dy0jhptctk2og","content":"<h2 id=\"简介NPM-Node-Package-Manger\"><a href=\"#简介NPM-Node-Package-Manger\" class=\"headerlink\" title=\"简介NPM(Node Package Manger)\"></a>简介NPM(Node Package Manger)</h2><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：</p>\n<ol>\n<li>允许用户从NPM服务器下载别人编写的第三方包到本地使用。</li>\n<li>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。</li>\n<li>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。<h2 id=\"npm-安装\"><a href=\"#npm-安装\" class=\"headerlink\" title=\"npm 安装\"></a>npm 安装</h2></li>\n</ol>\n<ul>\n<li>Windows 下，一般情况，安装node.js 的同时，npm 也会同时安装。</li>\n<li>Ubuntu 下<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install curl</div><div class=\"line\">curl http://npmjs.org/install.sh | sudo sh</div><div class=\"line\">#或者</div><div class=\"line\">sudo apt-get install npm</div><div class=\"line\">#查看npm被安装到哪里</div><div class=\"line\">whereis npm </div><div class=\"line\">#设置成全局：</div><div class=\"line\">ln -s [文件位置/npm]  /usr/local/bin/npm</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"配置镜像\"><a href=\"#配置镜像\" class=\"headerlink\" title=\"配置镜像\"></a>配置镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</div><div class=\"line\">npm install  --registry=https://registry.npm.taobao.org</div><div class=\"line\">npm config set registry http://registry.npmjs.org/</div></pre></td></tr></table></figure>\n<h2 id=\"npm-升级\"><a href=\"#npm-升级\" class=\"headerlink\" title=\"npm 升级\"></a>npm 升级</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm -g install npm ( 最新稳定版 ) 或</div><div class=\"line\">npm -g install npm@2.9.1 ( 指定版本 )</div></pre></td></tr></table></figure>\n<h2 id=\"常用\"><a href=\"#常用\" class=\"headerlink\" title=\"常用\"></a>常用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g pm2</div><div class=\"line\">npm install -g nodemon</div><div class=\"line\">npm install -g vue-cli</div><div class=\"line\">npm install -g  webpack</div><div class=\"line\">npm i -g bower  ## 升级</div></pre></td></tr></table></figure>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p>安装必要依赖<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --production</div></pre></td></tr></table></figure></p>\n<p>安装开发依赖<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --dev</div></pre></td></tr></table></figure></p>\n<p>安装全部依赖<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure></p>\n<h4 id=\"全局安装辅助模块\"><a href=\"#全局安装辅助模块\" class=\"headerlink\" title=\"全局安装辅助模块\"></a>全局安装辅助模块</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install pm2 -g # 命令行安装 pm2</div><div class=\"line\">npm install -g cnpm  # 国内开发必用</div><div class=\"line\">npm install -g nodemon</div></pre></td></tr></table></figure>\n<h4 id=\"安装并更新package-json中的版本配置\"><a href=\"#安装并更新package-json中的版本配置\" class=\"headerlink\" title=\"安装并更新package.json中的版本配置\"></a>安装并更新package.json中的版本配置</h4><ul>\n<li>添加–save 参数安装的模块的名字及其版本信息会出现在package.json的dependencies选项中</li>\n<li>添加–save-dev 参数安装的模块的名字及其版本信息会出现在package.json的devDependencies选项中</li>\n<li>添加–save-optional 参数安装的模块的名字及其版本信息会出现在package.json的optionalDependencies选项中<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install &lt;name&gt; [–save|–save-dev|–save-optional]</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"安装模块的config的tag配置中含有指定tag的版本\"><a href=\"#安装模块的config的tag配置中含有指定tag的版本\" class=\"headerlink\" title=\"安装模块的config的tag配置中含有指定tag的版本\"></a>安装模块的config的tag配置中含有指定tag的版本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install &lt;name&gt;@&lt;tag&gt;</div><div class=\"line\">Example:</div><div class=\"line\">npm install sax@latest</div><div class=\"line\">安装模块的指定版本</div><div class=\"line\">npm install &lt;name&gt;@&lt;version&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"显示npm的bin目录\"><a href=\"#显示npm的bin目录\" class=\"headerlink\" title=\"显示npm的bin目录\"></a>显示npm的bin目录</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm bin</div></pre></td></tr></table></figure>\n<h4 id=\"设置npm配置\"><a href=\"#设置npm配置\" class=\"headerlink\" title=\"设置npm配置\"></a>设置npm配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set &lt;key&gt; &lt;value&gt; [–global]</div></pre></td></tr></table></figure>\n<p>使用–global参数，设置全局配置<br>Example:<br>设置代理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set proxy=http://proxy.tencent.com:8080</div></pre></td></tr></table></figure></p>\n<h4 id=\"设置npm的镜像地址\"><a href=\"#设置npm的镜像地址\" class=\"headerlink\" title=\"设置npm的镜像地址\"></a>设置npm的镜像地址</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set registry http://npm.oa.com</div></pre></td></tr></table></figure>\n<p>获取npm配置<br>npm config get <key><br>Example:</key></p>\n<h4 id=\"获取npm当前镜像地址\"><a href=\"#获取npm当前镜像地址\" class=\"headerlink\" title=\"获取npm当前镜像地址\"></a>获取npm当前镜像地址</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config get registory</div></pre></td></tr></table></figure>\n<h4 id=\"删除npm配置\"><a href=\"#删除npm配置\" class=\"headerlink\" title=\"删除npm配置\"></a>删除npm配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config delete &lt;key&gt;</div></pre></td></tr></table></figure>\n<p>Example:</p>\n<h4 id=\"删除代理设置\"><a href=\"#删除代理设置\" class=\"headerlink\" title=\"删除代理设置\"></a>删除代理设置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config delete proxy</div></pre></td></tr></table></figure>\n<h4 id=\"在编辑器中打开npm配置文件\"><a href=\"#在编辑器中打开npm配置文件\" class=\"headerlink\" title=\"在编辑器中打开npm配置文件\"></a>在编辑器中打开npm配置文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config edit</div></pre></td></tr></table></figure>\n<h4 id=\"交互式的创建package-json文件\"><a href=\"#交互式的创建package-json文件\" class=\"headerlink\" title=\"交互式的创建package.json文件\"></a>交互式的创建package.json文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init</div></pre></td></tr></table></figure>\n<h4 id=\"创建模块的压缩包\"><a href=\"#创建模块的压缩包\" class=\"headerlink\" title=\"创建模块的压缩包\"></a>创建模块的压缩包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm pack [&lt;pkg&gt; [&lt;pkg&gt; … ]]</div></pre></td></tr></table></figure>\n<p>如果没有参数，则npm会打包当前模块目录<br>发布模块，发布后可通过名称来安装该模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm publish &lt;tarball&gt;</div><div class=\"line\">npm publish &lt;folder&gt;</div></pre></td></tr></table></figure></p>\n<p>其中：</p>\n<p><folder>：包含package.json文件的目录</folder></p>\n<p><tarball>：经过gzip压缩并归档的一个URL或文件路径，该压缩包包含单个目录，且该目录内有package.json文件</tarball></p>\n<h4 id=\"删除模块\"><a href=\"#删除模块\" class=\"headerlink\" title=\"删除模块\"></a>删除模块</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm rm &lt;name&gt;</div><div class=\"line\">npm r &lt;name&gt;</div><div class=\"line\">npm uninstall &lt;name&gt;</div><div class=\"line\">npm un &lt;name&gt;</div></pre></td></tr></table></figure>\n<p>注意：不会删除package.json文件dependencies选项中对应的依赖配置</p>\n<h4 id=\"查找模块\"><a href=\"#查找模块\" class=\"headerlink\" title=\"查找模块\"></a>查找模块</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm search [search terms ..]</div><div class=\"line\">npm s [search terms ..]</div><div class=\"line\">npm se [search terms ..]</div></pre></td></tr></table></figure>\n<p>查找匹配查找字符串的模块</p>\n<h4 id=\"更新模块\"><a href=\"#更新模块\" class=\"headerlink\" title=\"更新模块\"></a>更新模块</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm update [-g] [&lt;name&gt; [&lt;name&gt; … ]]</div></pre></td></tr></table></figure>\n<p>更新指定name列表中的模块。-g参数更新全局安装的模块。<br>如果没有指定name，且不是在某个模块内，会更新当前目录依赖的所有包都会被更新（包括全局和模块内）；如果当前目录在某个模块目录内，会更新该模块依赖的模块，所以不指定name直接运行npm update时，最好在某个模块内运行，以免更新到其他不想更新的模块。</p>\n<h4 id=\"执行脚本\"><a href=\"#执行脚本\" class=\"headerlink\" title=\"执行脚本\"></a>执行脚本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm start [&lt;name&gt;]</div><div class=\"line\">npm stop [&lt;name&gt;]</div><div class=\"line\">npm test [&lt;name&gt;]</div><div class=\"line\">npm run [&lt;name&gt;]</div></pre></td></tr></table></figure>\n<p>运行package的start脚本，该脚本写在package.json文件scripts的start字段中。<br>该字段的值可以是当前系统控制台可执行的脚本，也可以是当前系统可执行文件的路径。<br>如果不传name参数，则执行当前目录下package.json文件中定义的脚本。<br>详见<a href=\"https://npmjs.org/doc/misc/npm-scripts.html\" target=\"_blank\" rel=\"external\">https://npmjs.org/doc/misc/npm-scripts.html</a></p>\n<h4 id=\"package-json文件\"><a href=\"#package-json文件\" class=\"headerlink\" title=\"package.json文件\"></a>package.json文件</h4><p>模块的配置文件，详见<a href=\"https://npmjs.org/doc/files/package.json.html\" target=\"_blank\" rel=\"external\">https://npmjs.org/doc/files/package.json.html</a></p>\n<h2 id=\"发布项目到npm\"><a href=\"#发布项目到npm\" class=\"headerlink\" title=\"发布项目到npm\"></a>发布项目到npm</h2><ol>\n<li>在<a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"external\">NPM官网</a>注册账号</li>\n<li>用户验证，命令行执行</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm adduser</div><div class=\"line\">npm login # 登录</div><div class=\"line\">npm who am i</div></pre></td></tr></table></figure>\n<ol>\n<li><p>发布模块，在模块的根文件夹执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm publish</div></pre></td></tr></table></figure>\n</li>\n<li><p>更新版本</p>\n<blockquote>\n<p>如果是git库时，会为新版本号创建一条提交信息，package版本号会自动递增。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm version 0.0.4</div><div class=\"line\">npm publish</div></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>将代码同步到github.com</p>\n</li>\n</ol>\n<h2 id=\"npm常用命令\"><a href=\"#npm常用命令\" class=\"headerlink\" title=\"npm常用命令\"></a>npm常用命令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm search module_name 查找模块</div><div class=\"line\">npm docs module_name 查找模块文档</div><div class=\"line\">npm install 安装package.json指定的所有模块</div><div class=\"line\">npm start</div><div class=\"line\">npm test</div><div class=\"line\">cnpm install gulp --save-dev</div></pre></td></tr></table></figure>\n<h2 id=\"Package-json-属性说明\"><a href=\"#Package-json-属性说明\" class=\"headerlink\" title=\"Package.json 属性说明\"></a>Package.json 属性说明</h2><pre>\n   name - 包名。\n   version - 包的版本号。\n   description - 包的描述。\n   homepage - 包的官网 url 。\n   author - 包的作者姓名。\n   contributors - 包的其他贡献者姓名。\n   dependencies - 依赖包列表。如果依赖包没有安装，npm 会自动将依赖包安装在 node_module 目录下。\n   repository - 包代码存放的地方的类型，可以是 git 或 svn，git 可在 Github 上。\n   main - main 字段是一个模块ID，它是一个指向你程序的主要项目。就是说，如果你包的名字叫 express，然后用户安装它，然后require(\"express\")。\n   keywords - 关键字\n</pre>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介NPM-Node-Package-Manger\"><a href=\"#简介NPM-Node-Package-Manger\" class=\"headerlink\" title=\"简介NPM(Node Package Manger)\"></a>简介NPM(Node Package Manger)</h2><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：</p>\n<ol>\n<li>允许用户从NPM服务器下载别人编写的第三方包到本地使用。</li>\n<li>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。</li>\n<li>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。<h2 id=\"npm-安装\"><a href=\"#npm-安装\" class=\"headerlink\" title=\"npm 安装\"></a>npm 安装</h2></li>\n</ol>\n<ul>\n<li>Windows 下，一般情况，安装node.js 的同时，npm 也会同时安装。</li>\n<li>Ubuntu 下<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install curl</div><div class=\"line\">curl http://npmjs.org/install.sh | sudo sh</div><div class=\"line\">#或者</div><div class=\"line\">sudo apt-get install npm</div><div class=\"line\">#查看npm被安装到哪里</div><div class=\"line\">whereis npm </div><div class=\"line\">#设置成全局：</div><div class=\"line\">ln -s [文件位置/npm]  /usr/local/bin/npm</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"配置镜像\"><a href=\"#配置镜像\" class=\"headerlink\" title=\"配置镜像\"></a>配置镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</div><div class=\"line\">npm install  --registry=https://registry.npm.taobao.org</div><div class=\"line\">npm config set registry http://registry.npmjs.org/</div></pre></td></tr></table></figure>\n<h2 id=\"npm-升级\"><a href=\"#npm-升级\" class=\"headerlink\" title=\"npm 升级\"></a>npm 升级</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm -g install npm ( 最新稳定版 ) 或</div><div class=\"line\">npm -g install npm@2.9.1 ( 指定版本 )</div></pre></td></tr></table></figure>\n<h2 id=\"常用\"><a href=\"#常用\" class=\"headerlink\" title=\"常用\"></a>常用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g pm2</div><div class=\"line\">npm install -g nodemon</div><div class=\"line\">npm install -g vue-cli</div><div class=\"line\">npm install -g  webpack</div><div class=\"line\">npm i -g bower  ## 升级</div></pre></td></tr></table></figure>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p>安装必要依赖<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --production</div></pre></td></tr></table></figure></p>\n<p>安装开发依赖<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --dev</div></pre></td></tr></table></figure></p>\n<p>安装全部依赖<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure></p>\n<h4 id=\"全局安装辅助模块\"><a href=\"#全局安装辅助模块\" class=\"headerlink\" title=\"全局安装辅助模块\"></a>全局安装辅助模块</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install pm2 -g # 命令行安装 pm2</div><div class=\"line\">npm install -g cnpm  # 国内开发必用</div><div class=\"line\">npm install -g nodemon</div></pre></td></tr></table></figure>\n<h4 id=\"安装并更新package-json中的版本配置\"><a href=\"#安装并更新package-json中的版本配置\" class=\"headerlink\" title=\"安装并更新package.json中的版本配置\"></a>安装并更新package.json中的版本配置</h4><ul>\n<li>添加–save 参数安装的模块的名字及其版本信息会出现在package.json的dependencies选项中</li>\n<li>添加–save-dev 参数安装的模块的名字及其版本信息会出现在package.json的devDependencies选项中</li>\n<li>添加–save-optional 参数安装的模块的名字及其版本信息会出现在package.json的optionalDependencies选项中<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install &lt;name&gt; [–save|–save-dev|–save-optional]</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"安装模块的config的tag配置中含有指定tag的版本\"><a href=\"#安装模块的config的tag配置中含有指定tag的版本\" class=\"headerlink\" title=\"安装模块的config的tag配置中含有指定tag的版本\"></a>安装模块的config的tag配置中含有指定tag的版本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install &lt;name&gt;@&lt;tag&gt;</div><div class=\"line\">Example:</div><div class=\"line\">npm install sax@latest</div><div class=\"line\">安装模块的指定版本</div><div class=\"line\">npm install &lt;name&gt;@&lt;version&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"显示npm的bin目录\"><a href=\"#显示npm的bin目录\" class=\"headerlink\" title=\"显示npm的bin目录\"></a>显示npm的bin目录</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm bin</div></pre></td></tr></table></figure>\n<h4 id=\"设置npm配置\"><a href=\"#设置npm配置\" class=\"headerlink\" title=\"设置npm配置\"></a>设置npm配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set &lt;key&gt; &lt;value&gt; [–global]</div></pre></td></tr></table></figure>\n<p>使用–global参数，设置全局配置<br>Example:<br>设置代理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set proxy=http://proxy.tencent.com:8080</div></pre></td></tr></table></figure></p>\n<h4 id=\"设置npm的镜像地址\"><a href=\"#设置npm的镜像地址\" class=\"headerlink\" title=\"设置npm的镜像地址\"></a>设置npm的镜像地址</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set registry http://npm.oa.com</div></pre></td></tr></table></figure>\n<p>获取npm配置<br>npm config get <key><br>Example:</key></p>\n<h4 id=\"获取npm当前镜像地址\"><a href=\"#获取npm当前镜像地址\" class=\"headerlink\" title=\"获取npm当前镜像地址\"></a>获取npm当前镜像地址</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config get registory</div></pre></td></tr></table></figure>\n<h4 id=\"删除npm配置\"><a href=\"#删除npm配置\" class=\"headerlink\" title=\"删除npm配置\"></a>删除npm配置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config delete &lt;key&gt;</div></pre></td></tr></table></figure>\n<p>Example:</p>\n<h4 id=\"删除代理设置\"><a href=\"#删除代理设置\" class=\"headerlink\" title=\"删除代理设置\"></a>删除代理设置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config delete proxy</div></pre></td></tr></table></figure>\n<h4 id=\"在编辑器中打开npm配置文件\"><a href=\"#在编辑器中打开npm配置文件\" class=\"headerlink\" title=\"在编辑器中打开npm配置文件\"></a>在编辑器中打开npm配置文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config edit</div></pre></td></tr></table></figure>\n<h4 id=\"交互式的创建package-json文件\"><a href=\"#交互式的创建package-json文件\" class=\"headerlink\" title=\"交互式的创建package.json文件\"></a>交互式的创建package.json文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init</div></pre></td></tr></table></figure>\n<h4 id=\"创建模块的压缩包\"><a href=\"#创建模块的压缩包\" class=\"headerlink\" title=\"创建模块的压缩包\"></a>创建模块的压缩包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm pack [&lt;pkg&gt; [&lt;pkg&gt; … ]]</div></pre></td></tr></table></figure>\n<p>如果没有参数，则npm会打包当前模块目录<br>发布模块，发布后可通过名称来安装该模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm publish &lt;tarball&gt;</div><div class=\"line\">npm publish &lt;folder&gt;</div></pre></td></tr></table></figure></p>\n<p>其中：</p>\n<p><folder>：包含package.json文件的目录</folder></p>\n<p><tarball>：经过gzip压缩并归档的一个URL或文件路径，该压缩包包含单个目录，且该目录内有package.json文件</tarball></p>\n<h4 id=\"删除模块\"><a href=\"#删除模块\" class=\"headerlink\" title=\"删除模块\"></a>删除模块</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm rm &lt;name&gt;</div><div class=\"line\">npm r &lt;name&gt;</div><div class=\"line\">npm uninstall &lt;name&gt;</div><div class=\"line\">npm un &lt;name&gt;</div></pre></td></tr></table></figure>\n<p>注意：不会删除package.json文件dependencies选项中对应的依赖配置</p>\n<h4 id=\"查找模块\"><a href=\"#查找模块\" class=\"headerlink\" title=\"查找模块\"></a>查找模块</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm search [search terms ..]</div><div class=\"line\">npm s [search terms ..]</div><div class=\"line\">npm se [search terms ..]</div></pre></td></tr></table></figure>\n<p>查找匹配查找字符串的模块</p>\n<h4 id=\"更新模块\"><a href=\"#更新模块\" class=\"headerlink\" title=\"更新模块\"></a>更新模块</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm update [-g] [&lt;name&gt; [&lt;name&gt; … ]]</div></pre></td></tr></table></figure>\n<p>更新指定name列表中的模块。-g参数更新全局安装的模块。<br>如果没有指定name，且不是在某个模块内，会更新当前目录依赖的所有包都会被更新（包括全局和模块内）；如果当前目录在某个模块目录内，会更新该模块依赖的模块，所以不指定name直接运行npm update时，最好在某个模块内运行，以免更新到其他不想更新的模块。</p>\n<h4 id=\"执行脚本\"><a href=\"#执行脚本\" class=\"headerlink\" title=\"执行脚本\"></a>执行脚本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm start [&lt;name&gt;]</div><div class=\"line\">npm stop [&lt;name&gt;]</div><div class=\"line\">npm test [&lt;name&gt;]</div><div class=\"line\">npm run [&lt;name&gt;]</div></pre></td></tr></table></figure>\n<p>运行package的start脚本，该脚本写在package.json文件scripts的start字段中。<br>该字段的值可以是当前系统控制台可执行的脚本，也可以是当前系统可执行文件的路径。<br>如果不传name参数，则执行当前目录下package.json文件中定义的脚本。<br>详见<a href=\"https://npmjs.org/doc/misc/npm-scripts.html\" target=\"_blank\" rel=\"external\">https://npmjs.org/doc/misc/npm-scripts.html</a></p>\n<h4 id=\"package-json文件\"><a href=\"#package-json文件\" class=\"headerlink\" title=\"package.json文件\"></a>package.json文件</h4><p>模块的配置文件，详见<a href=\"https://npmjs.org/doc/files/package.json.html\" target=\"_blank\" rel=\"external\">https://npmjs.org/doc/files/package.json.html</a></p>\n<h2 id=\"发布项目到npm\"><a href=\"#发布项目到npm\" class=\"headerlink\" title=\"发布项目到npm\"></a>发布项目到npm</h2><ol>\n<li>在<a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"external\">NPM官网</a>注册账号</li>\n<li>用户验证，命令行执行</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm adduser</div><div class=\"line\">npm login # 登录</div><div class=\"line\">npm who am i</div></pre></td></tr></table></figure>\n<ol>\n<li><p>发布模块，在模块的根文件夹执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm publish</div></pre></td></tr></table></figure>\n</li>\n<li><p>更新版本</p>\n<blockquote>\n<p>如果是git库时，会为新版本号创建一条提交信息，package版本号会自动递增。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm version 0.0.4</div><div class=\"line\">npm publish</div></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>将代码同步到github.com</p>\n</li>\n</ol>\n<h2 id=\"npm常用命令\"><a href=\"#npm常用命令\" class=\"headerlink\" title=\"npm常用命令\"></a>npm常用命令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm search module_name 查找模块</div><div class=\"line\">npm docs module_name 查找模块文档</div><div class=\"line\">npm install 安装package.json指定的所有模块</div><div class=\"line\">npm start</div><div class=\"line\">npm test</div><div class=\"line\">cnpm install gulp --save-dev</div></pre></td></tr></table></figure>\n<h2 id=\"Package-json-属性说明\"><a href=\"#Package-json-属性说明\" class=\"headerlink\" title=\"Package.json 属性说明\"></a>Package.json 属性说明</h2><pre>\n   name - 包名。\n   version - 包的版本号。\n   description - 包的描述。\n   homepage - 包的官网 url 。\n   author - 包的作者姓名。\n   contributors - 包的其他贡献者姓名。\n   dependencies - 依赖包列表。如果依赖包没有安装，npm 会自动将依赖包安装在 node_module 目录下。\n   repository - 包代码存放的地方的类型，可以是 git 或 svn，git 可在 Github 上。\n   main - main 字段是一个模块ID，它是一个指向你程序的主要项目。就是说，如果你包的名字叫 express，然后用户安装它，然后require(\"express\")。\n   keywords - 关键字\n</pre>\n\n\n\n"},{"title":"node.js 开发规范","date":"2017-01-19T11:56:53.000Z","_content":"\n## 命名规范\n### 命名法说明\n1. camel命名法，形如 `thisIsAnApple`\n2. pascal命名法，形如`ThisIsAnApple`\n3. 下划线命名法，形如`this_is_an_apple`\n4. 中划线命名法，形如`this-is-an-apple`\n5. 匈牙利命名法，`变量名`＝`类型`＋`对象描述`\n\n### 命名法说明\n1. 变量名：必须使用camel命名法\n2. 参数名：必须使用camel命名法\n3. 函数名：必须使用camel命名法\n4. 方法/属性：必须使用camel命名法\n5. 私有（保护）成员：必须以下划线_开头\n6. 常量名：必须使用全部大写的下划线命名法，如IS_DEBUG_ENABLED\n7. 类名：必须使用pascal命名法\n8. 枚举名：必须使用pascal命名法\n9. 枚举的属性：必须使用全部大写的下划线命名法\n10. 命名空间：必须使用camel命名法\n11. 语义：命名同时还需要关注语义，如：\n\t* 变量名应当使用名词；\n\t* boolean类型的应当使用is、has等起头，表示其类型；\n\t* 函数名应当用动宾短语；getName\n\t* 类名应当用名词。Person\n\n### 项目名称\n```\nmohoo-telecom-wechat-manager\n```\n\n### 文件目录\n```\nproxy\n```\n\n### proxy,rest,contr 文件名称\n```\nAuthProxy\nAuthRest\nAuthCtrl\n```\n\n### 接口地址\n\n### 静态资源\n1. js\n2. css: page-alert-span\n3. img: page-icon-add\n\n### router\n```\nrouter.get('/index', auth.authWxUser, home.Index);\nrouter.get('/rule', auth.authWxUser, home.Rule);\n\nrouter.get('/query/devicename', auth.authWxUser, home.deviceName);//查询\nrouter.get('/create/record', auth.authWxUser, home.record);//创建\nrouter.get('/update/recordstatus', auth.authWxUser, home.recordStatus);//修改\nrouter.get('/delete/recordbyid', auth.authWxUser, home.recordById);//删除\n```\n\n### URL接口命名-单词分割\n```\n\n```\n\n### 类名，对象名\n\n```\nfunction Person(){\n\n}\n\nvar BillAndPayProxy = {};\nBillAndPayProxy.getWXPayData = function (param, callback) {\n    httpUtil.post(apis.wxDiscPayUrl, param, function (error, response, content) {\n        callback(error, content);\n    });\n};\n\n```\n\n\n### 方法名称\n* getName\n* addUserRecord\n* get/set, add/remove, create/destroy, start/stop, insert/delete, begin/end。\n\n```\nvar AuthProxy = {};\n\nAuthProxy.getName();\n```\n\n### 私有变量\n```\nvar AuthProxy = {\n\t_name: '',\n\t_age: ''\n};\nvar person = {\n\t_setSext: function() {\n\t\t// ...\n\t},\n\t_setName: function() {\n\t\t// ...\n\t}\n};\n```\n### 常量\n```\nvar PI = '3.1415926';\nvar URL_BIND = 'http://wwww.baidu.com';\n```\n\n### 变量\n\n> 总所周知，javascript是一种语法极其灵活的语言。javascript在设计之初就只是用来为HTML添加动态效果的。由于他动态，弱类型等特性，以及不同浏览器的兼容性问题，、\n造成了开发成本要比java等语言要高很多。正因为它太灵活，我们制定了适用于网易邮箱的javascript编码规范，尽可能多的降低由于语法灵活造成的问题。\n以下将具体介绍：\n\n\n变量名包括`全局变量`，`局部变量`，`类变量`，`函数参数`等等\n\n###### 基本规范\n\n`变量命名`都以`类型前缀`+`有意义的单词`组成，单词首字母都需要大写。例如：`sUserName`，`nCount`。\n\n###### 前缀规范\n\n每个局部变量都需要有一个类型前缀，按照类型可以分为：\n\n```\ns：表示字符串。例如：sName，sHtml;\n\nn：表示数字。例如：nPage，nTotal;\n\nb：表示逻辑。例如：bChecked，bHasLogin;\n\na：表示数组。例如：aList，aGroup;\n\nr：表示正则表达式。例如：rDomain，rEmail;\n\nf：表示函数。例如：fGetHtml，fInit;\n\no：表示以上未涉及到的其他对象，例如：oButton，oDate;\n\ng：global 全局变量 例如：gVersion\n```\n###### 例外情况：\n\n1：作用域不大临时变量可以简写，比如：str，num，bol，obj，fun，arr。\n\n2：循环变量可以简写，比如：i，j，k等。\n\n为什么需要这样强制定义变量前缀?\n正式因为javascript是弱语言造成的。在定义大量变量的时候，我们需要很明确的知道当前变量是什么属性，\n如果只通过普通单词，是很难区分的。\n\n2. 函数命名规范\n\n统一使用`动词`或者`动词[+名词]`形式，例如：fGetVersion()，fSubmitForm()，fInit();\n涉及返回逻辑值的函数可以使用is，has等表示逻辑的词语代替动词。\n\n如果有内部函数，使用__f+动词[+名词]形式，内部函数必需在函数最后定义。例如：\n```\nfunction fGetNumber(nTotal) {\n\tif (nTotal < 100) {\n\t\tnTotal = 100;\n\t}\n\treturn __fAdd(nTotal);\n\n\tfunction __fAdd(nNumber) {\n\t\tnNumber++;\n\t\treturn nNumber;\n\t}\n}\nfGetNumber(30)\n```\n3.其他注意事项\n\n```\n1：所有命名最好使用英语表示。\n\n2：所有变量名应该明确而必要，尽量避免不必要的容易混淆的缩写。\n\n3：netease.events.mouse.Handler，而不是 netease.events.mouse.MouseEventHandler。\n\n4：对应的方法应该使用对应的动词，例如：get/set, add/remove, create/destroy, start/stop, insert/delete, begin/end。\n\n5：应该避免双重否定意义的变量，例如：bIsNotError, bIsNotFound，不可取。\n\n6：变量应该在最小的范围内定义，并尽可能的保持最少的活动时间。\n\n7：尽量避免复杂的条件语句，可以使用临时的boolean变量代替。\n\n8：一定要避免在条件中执行语句，例如：if((i=3)>2){}，不可取。\n\n```\n\n## 匈牙利命名法\n\n### 匈牙利命名法语法：\n\n`变量名`＝`类型`＋`对象描述`\n**类型**指变量的类型\n**对象描述**指对象名字全称或名字的一部分，要求有明确含义，命名要容易记忆容易理解。\n提示: 虽然JavaScript变量表面上没有类型，但是JavaScript内部还是会为变量赋予相应的类型。\n\n提示: 匈牙利命名法是一位微软程序员发明的，多数的C,C++程序都使用此命名法。\n\nJavaScript变量匈牙利命名类型\nJavaScript变量起名类型\t变量命名前缀\nArray 数组\ta\nFloat 浮点\tl\nFunction 函数\tf\nInteger(int) 整型\tn\nObject 对象\to\nRegular Expression 正则\tr\nString 字符串\ts\ng全局变量\t\tg\nJavaScript变量名匈牙利命名法示例\n```\nvar sWebURL=\"www.jb51.net\";\n```\n从变量的名字可以看出s代表字符串WebURL是网址。\n```\nvar nCheckCount=5;\n```\n从变量的名字可以看出n代表Integer(整型)，CheckCount代表某种数量。\n\n使用匈牙利命名法非常简单直观，方便判断变量的类型，而且方便程序的阅读与维护。\n\n\n## 限制\n1. 尽量不要使用 eval()，冗余产生入侵\n2. 缩进 在同一系统中应采用同一种缩进标准，本文提倡缩进大小为4个空格。\n3. 花括号{}\n4. 空格  任何“;”后空一格、for循环中初始化“,”后空一格、数组中\",\"后空一格、对象中“:”后空一格、如：\n```\nfor (var i = 0, j = 1; i < 10; i += 1){\n  var some = [1, 2, 3];\n  var obj = {aa: 1, bb: 2}\n}\n```\n5. 函数参数里“,”后空一格、函数声明中花括号前空一格、函数表达式中括号前后各空一格，如：\n```\nfunc(a, b, c){};\nfunction func() {};\nvar func = function () {};\n```\n\n6. 所有的操作符前后都跟一个空格，如：\n```\nvar d = 0,\n    a = b + 1;\nif (a && b && c) {\n    d = a % c;\n    a += d;\n}\n```\n\n7. 换行\n在以下位置必须换行：\n  * 每个独立语句结束后；\n  * if、else、catch、finally、while等关键字前；\n  * 运算符处换行时，运算符必须在新行的行首。\n  * 对于因为单行长度超过限制时产生的换行，参考行长度中的策略进行分隔。\n\n8. 三元运算符过长\n```\n//无需换行\nvar result = content?result1:result2;\n\n//换行\nvar data = _.isEmpty(content)\n  ? _.isEmpty(content2)\n    ?content3:content2\n  :content;\n```\n\n\n## Interface 接口返回参数规范\n1. 接口名称：大驼峰吗？\n1. 返回参数，小驼峰\n```\n{status:200,data:{name:'admin',list:[]},info:''}\n{status:0,data:'查询失败',info:''}\n{status:5005,data:'服务器繁忙',info:''}\n```\n\n\n## Proxy 代理层\n1. 注释：标记入参，出参\n2. 将接口参数返回为标准模式参数\n3. 在备注中添加，功能简介，\n```\n/**\n * 录入赠送记录\n * 1. 通过。。。。\n * @param params\n * {\"openid\":\"微信唯一标识\",\"from_deviceno\":\"发起人设备号 必传\",\"to_deviceno\":\"接受人设备号 必传\",\"gifts\":\"礼物 [50M、100G] 必传\",\"type\":\"类型 [1]流量 必传\",\"remark\":\"备注 一个有规则的json串\"}\n * @param callback\n *  {\"data\":\"赠送记录唯一标识\",\"status\":200,\"info\":0}\n * @constructor\n */\nGiveFlowProxy.GfCreateGivingGiftsRecord = function (params, callback) {\n    var url = urlKit.GfCreateGivingGiftsRecord;\n    httpUtil.post(url, params, function (error, response, content) {\n        callback(error, content);\n    });\n};\n```\n\n## 写注释\n1. 注释规范\n2. 包含那些信息\n\n```\n/**\n * 方法名\n 1. 简要写一下功能操作\n * @param  {[type]}   param    [description]\n * @param  {Function} callback [description]\n * @return {[type]}            [description]\n */\nBillAndPayProxy.getWXPayData = function (param, callback) {\n    httpUtil.post(apis.wxDiscPayUrl, param, function (error, response, content) {\n        logger.info(\"获取微信支付数据返回结果：\" + JSON.stringify(param) + JSON.stringify(content));\n        callback(error, content);\n    });\n};\n```\n\n## 参考\n- [网易前端JavaScript编码规范](http://www.php100.com/html/webkaifa/javascript/2012/0616/10550.html)\n- [最全的Javascript编码规范(推荐)](http://www.jb51.net/article/87142.htm)\n- [javascript 命名规则 变量命名规则](http://www.jb51.net/article/22229.htm)\n\n","source":"_posts/nodejs开发规范.md","raw":"---\ntitle: node.js 开发规范\ndate: 2017-01-19 19:56:53\ntags: node.js, 规范\n---\n\n## 命名规范\n### 命名法说明\n1. camel命名法，形如 `thisIsAnApple`\n2. pascal命名法，形如`ThisIsAnApple`\n3. 下划线命名法，形如`this_is_an_apple`\n4. 中划线命名法，形如`this-is-an-apple`\n5. 匈牙利命名法，`变量名`＝`类型`＋`对象描述`\n\n### 命名法说明\n1. 变量名：必须使用camel命名法\n2. 参数名：必须使用camel命名法\n3. 函数名：必须使用camel命名法\n4. 方法/属性：必须使用camel命名法\n5. 私有（保护）成员：必须以下划线_开头\n6. 常量名：必须使用全部大写的下划线命名法，如IS_DEBUG_ENABLED\n7. 类名：必须使用pascal命名法\n8. 枚举名：必须使用pascal命名法\n9. 枚举的属性：必须使用全部大写的下划线命名法\n10. 命名空间：必须使用camel命名法\n11. 语义：命名同时还需要关注语义，如：\n\t* 变量名应当使用名词；\n\t* boolean类型的应当使用is、has等起头，表示其类型；\n\t* 函数名应当用动宾短语；getName\n\t* 类名应当用名词。Person\n\n### 项目名称\n```\nmohoo-telecom-wechat-manager\n```\n\n### 文件目录\n```\nproxy\n```\n\n### proxy,rest,contr 文件名称\n```\nAuthProxy\nAuthRest\nAuthCtrl\n```\n\n### 接口地址\n\n### 静态资源\n1. js\n2. css: page-alert-span\n3. img: page-icon-add\n\n### router\n```\nrouter.get('/index', auth.authWxUser, home.Index);\nrouter.get('/rule', auth.authWxUser, home.Rule);\n\nrouter.get('/query/devicename', auth.authWxUser, home.deviceName);//查询\nrouter.get('/create/record', auth.authWxUser, home.record);//创建\nrouter.get('/update/recordstatus', auth.authWxUser, home.recordStatus);//修改\nrouter.get('/delete/recordbyid', auth.authWxUser, home.recordById);//删除\n```\n\n### URL接口命名-单词分割\n```\n\n```\n\n### 类名，对象名\n\n```\nfunction Person(){\n\n}\n\nvar BillAndPayProxy = {};\nBillAndPayProxy.getWXPayData = function (param, callback) {\n    httpUtil.post(apis.wxDiscPayUrl, param, function (error, response, content) {\n        callback(error, content);\n    });\n};\n\n```\n\n\n### 方法名称\n* getName\n* addUserRecord\n* get/set, add/remove, create/destroy, start/stop, insert/delete, begin/end。\n\n```\nvar AuthProxy = {};\n\nAuthProxy.getName();\n```\n\n### 私有变量\n```\nvar AuthProxy = {\n\t_name: '',\n\t_age: ''\n};\nvar person = {\n\t_setSext: function() {\n\t\t// ...\n\t},\n\t_setName: function() {\n\t\t// ...\n\t}\n};\n```\n### 常量\n```\nvar PI = '3.1415926';\nvar URL_BIND = 'http://wwww.baidu.com';\n```\n\n### 变量\n\n> 总所周知，javascript是一种语法极其灵活的语言。javascript在设计之初就只是用来为HTML添加动态效果的。由于他动态，弱类型等特性，以及不同浏览器的兼容性问题，、\n造成了开发成本要比java等语言要高很多。正因为它太灵活，我们制定了适用于网易邮箱的javascript编码规范，尽可能多的降低由于语法灵活造成的问题。\n以下将具体介绍：\n\n\n变量名包括`全局变量`，`局部变量`，`类变量`，`函数参数`等等\n\n###### 基本规范\n\n`变量命名`都以`类型前缀`+`有意义的单词`组成，单词首字母都需要大写。例如：`sUserName`，`nCount`。\n\n###### 前缀规范\n\n每个局部变量都需要有一个类型前缀，按照类型可以分为：\n\n```\ns：表示字符串。例如：sName，sHtml;\n\nn：表示数字。例如：nPage，nTotal;\n\nb：表示逻辑。例如：bChecked，bHasLogin;\n\na：表示数组。例如：aList，aGroup;\n\nr：表示正则表达式。例如：rDomain，rEmail;\n\nf：表示函数。例如：fGetHtml，fInit;\n\no：表示以上未涉及到的其他对象，例如：oButton，oDate;\n\ng：global 全局变量 例如：gVersion\n```\n###### 例外情况：\n\n1：作用域不大临时变量可以简写，比如：str，num，bol，obj，fun，arr。\n\n2：循环变量可以简写，比如：i，j，k等。\n\n为什么需要这样强制定义变量前缀?\n正式因为javascript是弱语言造成的。在定义大量变量的时候，我们需要很明确的知道当前变量是什么属性，\n如果只通过普通单词，是很难区分的。\n\n2. 函数命名规范\n\n统一使用`动词`或者`动词[+名词]`形式，例如：fGetVersion()，fSubmitForm()，fInit();\n涉及返回逻辑值的函数可以使用is，has等表示逻辑的词语代替动词。\n\n如果有内部函数，使用__f+动词[+名词]形式，内部函数必需在函数最后定义。例如：\n```\nfunction fGetNumber(nTotal) {\n\tif (nTotal < 100) {\n\t\tnTotal = 100;\n\t}\n\treturn __fAdd(nTotal);\n\n\tfunction __fAdd(nNumber) {\n\t\tnNumber++;\n\t\treturn nNumber;\n\t}\n}\nfGetNumber(30)\n```\n3.其他注意事项\n\n```\n1：所有命名最好使用英语表示。\n\n2：所有变量名应该明确而必要，尽量避免不必要的容易混淆的缩写。\n\n3：netease.events.mouse.Handler，而不是 netease.events.mouse.MouseEventHandler。\n\n4：对应的方法应该使用对应的动词，例如：get/set, add/remove, create/destroy, start/stop, insert/delete, begin/end。\n\n5：应该避免双重否定意义的变量，例如：bIsNotError, bIsNotFound，不可取。\n\n6：变量应该在最小的范围内定义，并尽可能的保持最少的活动时间。\n\n7：尽量避免复杂的条件语句，可以使用临时的boolean变量代替。\n\n8：一定要避免在条件中执行语句，例如：if((i=3)>2){}，不可取。\n\n```\n\n## 匈牙利命名法\n\n### 匈牙利命名法语法：\n\n`变量名`＝`类型`＋`对象描述`\n**类型**指变量的类型\n**对象描述**指对象名字全称或名字的一部分，要求有明确含义，命名要容易记忆容易理解。\n提示: 虽然JavaScript变量表面上没有类型，但是JavaScript内部还是会为变量赋予相应的类型。\n\n提示: 匈牙利命名法是一位微软程序员发明的，多数的C,C++程序都使用此命名法。\n\nJavaScript变量匈牙利命名类型\nJavaScript变量起名类型\t变量命名前缀\nArray 数组\ta\nFloat 浮点\tl\nFunction 函数\tf\nInteger(int) 整型\tn\nObject 对象\to\nRegular Expression 正则\tr\nString 字符串\ts\ng全局变量\t\tg\nJavaScript变量名匈牙利命名法示例\n```\nvar sWebURL=\"www.jb51.net\";\n```\n从变量的名字可以看出s代表字符串WebURL是网址。\n```\nvar nCheckCount=5;\n```\n从变量的名字可以看出n代表Integer(整型)，CheckCount代表某种数量。\n\n使用匈牙利命名法非常简单直观，方便判断变量的类型，而且方便程序的阅读与维护。\n\n\n## 限制\n1. 尽量不要使用 eval()，冗余产生入侵\n2. 缩进 在同一系统中应采用同一种缩进标准，本文提倡缩进大小为4个空格。\n3. 花括号{}\n4. 空格  任何“;”后空一格、for循环中初始化“,”后空一格、数组中\",\"后空一格、对象中“:”后空一格、如：\n```\nfor (var i = 0, j = 1; i < 10; i += 1){\n  var some = [1, 2, 3];\n  var obj = {aa: 1, bb: 2}\n}\n```\n5. 函数参数里“,”后空一格、函数声明中花括号前空一格、函数表达式中括号前后各空一格，如：\n```\nfunc(a, b, c){};\nfunction func() {};\nvar func = function () {};\n```\n\n6. 所有的操作符前后都跟一个空格，如：\n```\nvar d = 0,\n    a = b + 1;\nif (a && b && c) {\n    d = a % c;\n    a += d;\n}\n```\n\n7. 换行\n在以下位置必须换行：\n  * 每个独立语句结束后；\n  * if、else、catch、finally、while等关键字前；\n  * 运算符处换行时，运算符必须在新行的行首。\n  * 对于因为单行长度超过限制时产生的换行，参考行长度中的策略进行分隔。\n\n8. 三元运算符过长\n```\n//无需换行\nvar result = content?result1:result2;\n\n//换行\nvar data = _.isEmpty(content)\n  ? _.isEmpty(content2)\n    ?content3:content2\n  :content;\n```\n\n\n## Interface 接口返回参数规范\n1. 接口名称：大驼峰吗？\n1. 返回参数，小驼峰\n```\n{status:200,data:{name:'admin',list:[]},info:''}\n{status:0,data:'查询失败',info:''}\n{status:5005,data:'服务器繁忙',info:''}\n```\n\n\n## Proxy 代理层\n1. 注释：标记入参，出参\n2. 将接口参数返回为标准模式参数\n3. 在备注中添加，功能简介，\n```\n/**\n * 录入赠送记录\n * 1. 通过。。。。\n * @param params\n * {\"openid\":\"微信唯一标识\",\"from_deviceno\":\"发起人设备号 必传\",\"to_deviceno\":\"接受人设备号 必传\",\"gifts\":\"礼物 [50M、100G] 必传\",\"type\":\"类型 [1]流量 必传\",\"remark\":\"备注 一个有规则的json串\"}\n * @param callback\n *  {\"data\":\"赠送记录唯一标识\",\"status\":200,\"info\":0}\n * @constructor\n */\nGiveFlowProxy.GfCreateGivingGiftsRecord = function (params, callback) {\n    var url = urlKit.GfCreateGivingGiftsRecord;\n    httpUtil.post(url, params, function (error, response, content) {\n        callback(error, content);\n    });\n};\n```\n\n## 写注释\n1. 注释规范\n2. 包含那些信息\n\n```\n/**\n * 方法名\n 1. 简要写一下功能操作\n * @param  {[type]}   param    [description]\n * @param  {Function} callback [description]\n * @return {[type]}            [description]\n */\nBillAndPayProxy.getWXPayData = function (param, callback) {\n    httpUtil.post(apis.wxDiscPayUrl, param, function (error, response, content) {\n        logger.info(\"获取微信支付数据返回结果：\" + JSON.stringify(param) + JSON.stringify(content));\n        callback(error, content);\n    });\n};\n```\n\n## 参考\n- [网易前端JavaScript编码规范](http://www.php100.com/html/webkaifa/javascript/2012/0616/10550.html)\n- [最全的Javascript编码规范(推荐)](http://www.jb51.net/article/87142.htm)\n- [javascript 命名规则 变量命名规则](http://www.jb51.net/article/22229.htm)\n\n","slug":"nodejs开发规范","published":1,"updated":"2017-03-31T02:19:12.642Z","_id":"cj7kas44d000fy0jhm7simjon","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"命名规范\"><a href=\"#命名规范\" class=\"headerlink\" title=\"命名规范\"></a>命名规范</h2><h3 id=\"命名法说明\"><a href=\"#命名法说明\" class=\"headerlink\" title=\"命名法说明\"></a>命名法说明</h3><ol>\n<li>camel命名法，形如 <code>thisIsAnApple</code></li>\n<li>pascal命名法，形如<code>ThisIsAnApple</code></li>\n<li>下划线命名法，形如<code>this_is_an_apple</code></li>\n<li>中划线命名法，形如<code>this-is-an-apple</code></li>\n<li>匈牙利命名法，<code>变量名</code>＝<code>类型</code>＋<code>对象描述</code></li>\n</ol>\n<h3 id=\"命名法说明-1\"><a href=\"#命名法说明-1\" class=\"headerlink\" title=\"命名法说明\"></a>命名法说明</h3><ol>\n<li>变量名：必须使用camel命名法</li>\n<li>参数名：必须使用camel命名法</li>\n<li>函数名：必须使用camel命名法</li>\n<li>方法/属性：必须使用camel命名法</li>\n<li>私有（保护）成员：必须以下划线_开头</li>\n<li>常量名：必须使用全部大写的下划线命名法，如IS_DEBUG_ENABLED</li>\n<li>类名：必须使用pascal命名法</li>\n<li>枚举名：必须使用pascal命名法</li>\n<li>枚举的属性：必须使用全部大写的下划线命名法</li>\n<li>命名空间：必须使用camel命名法</li>\n<li>语义：命名同时还需要关注语义，如：<ul>\n<li>变量名应当使用名词；</li>\n<li>boolean类型的应当使用is、has等起头，表示其类型；</li>\n<li>函数名应当用动宾短语；getName</li>\n<li>类名应当用名词。Person</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"项目名称\"><a href=\"#项目名称\" class=\"headerlink\" title=\"项目名称\"></a>项目名称</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mohoo-telecom-wechat-manager</div></pre></td></tr></table></figure>\n<h3 id=\"文件目录\"><a href=\"#文件目录\" class=\"headerlink\" title=\"文件目录\"></a>文件目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy</div></pre></td></tr></table></figure>\n<h3 id=\"proxy-rest-contr-文件名称\"><a href=\"#proxy-rest-contr-文件名称\" class=\"headerlink\" title=\"proxy,rest,contr 文件名称\"></a>proxy,rest,contr 文件名称</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">AuthProxy</div><div class=\"line\">AuthRest</div><div class=\"line\">AuthCtrl</div></pre></td></tr></table></figure>\n<h3 id=\"接口地址\"><a href=\"#接口地址\" class=\"headerlink\" title=\"接口地址\"></a>接口地址</h3><h3 id=\"静态资源\"><a href=\"#静态资源\" class=\"headerlink\" title=\"静态资源\"></a>静态资源</h3><ol>\n<li>js</li>\n<li>css: page-alert-span</li>\n<li>img: page-icon-add</li>\n</ol>\n<h3 id=\"router\"><a href=\"#router\" class=\"headerlink\" title=\"router\"></a>router</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">router.get(&apos;/index&apos;, auth.authWxUser, home.Index);</div><div class=\"line\">router.get(&apos;/rule&apos;, auth.authWxUser, home.Rule);</div><div class=\"line\"></div><div class=\"line\">router.get(&apos;/query/devicename&apos;, auth.authWxUser, home.deviceName);//查询</div><div class=\"line\">router.get(&apos;/create/record&apos;, auth.authWxUser, home.record);//创建</div><div class=\"line\">router.get(&apos;/update/recordstatus&apos;, auth.authWxUser, home.recordStatus);//修改</div><div class=\"line\">router.get(&apos;/delete/recordbyid&apos;, auth.authWxUser, home.recordById);//删除</div></pre></td></tr></table></figure>\n<h3 id=\"URL接口命名-单词分割\"><a href=\"#URL接口命名-单词分割\" class=\"headerlink\" title=\"URL接口命名-单词分割\"></a>URL接口命名-单词分割</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h3 id=\"类名，对象名\"><a href=\"#类名，对象名\" class=\"headerlink\" title=\"类名，对象名\"></a>类名，对象名</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function Person()&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">var BillAndPayProxy = &#123;&#125;;</div><div class=\"line\">BillAndPayProxy.getWXPayData = function (param, callback) &#123;</div><div class=\"line\">    httpUtil.post(apis.wxDiscPayUrl, param, function (error, response, content) &#123;</div><div class=\"line\">        callback(error, content);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h3 id=\"方法名称\"><a href=\"#方法名称\" class=\"headerlink\" title=\"方法名称\"></a>方法名称</h3><ul>\n<li>getName</li>\n<li>addUserRecord</li>\n<li>get/set, add/remove, create/destroy, start/stop, insert/delete, begin/end。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">var AuthProxy = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\">AuthProxy.getName();</div></pre></td></tr></table></figure>\n<h3 id=\"私有变量\"><a href=\"#私有变量\" class=\"headerlink\" title=\"私有变量\"></a>私有变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">var AuthProxy = &#123;</div><div class=\"line\">\t_name: &apos;&apos;,</div><div class=\"line\">\t_age: &apos;&apos;</div><div class=\"line\">&#125;;</div><div class=\"line\">var person = &#123;</div><div class=\"line\">\t_setSext: function() &#123;</div><div class=\"line\">\t\t// ...</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t_setName: function() &#123;</div><div class=\"line\">\t\t// ...</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h3 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">var PI = &apos;3.1415926&apos;;</div><div class=\"line\">var URL_BIND = &apos;http://wwww.baidu.com&apos;;</div></pre></td></tr></table></figure>\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><blockquote>\n<p>总所周知，javascript是一种语法极其灵活的语言。javascript在设计之初就只是用来为HTML添加动态效果的。由于他动态，弱类型等特性，以及不同浏览器的兼容性问题，、<br>造成了开发成本要比java等语言要高很多。正因为它太灵活，我们制定了适用于网易邮箱的javascript编码规范，尽可能多的降低由于语法灵活造成的问题。<br>以下将具体介绍：</p>\n</blockquote>\n<p>变量名包括<code>全局变量</code>，<code>局部变量</code>，<code>类变量</code>，<code>函数参数</code>等等</p>\n<h6 id=\"基本规范\"><a href=\"#基本规范\" class=\"headerlink\" title=\"基本规范\"></a>基本规范</h6><p><code>变量命名</code>都以<code>类型前缀</code>+<code>有意义的单词</code>组成，单词首字母都需要大写。例如：<code>sUserName</code>，<code>nCount</code>。</p>\n<h6 id=\"前缀规范\"><a href=\"#前缀规范\" class=\"headerlink\" title=\"前缀规范\"></a>前缀规范</h6><p>每个局部变量都需要有一个类型前缀，按照类型可以分为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">s：表示字符串。例如：sName，sHtml;</div><div class=\"line\"></div><div class=\"line\">n：表示数字。例如：nPage，nTotal;</div><div class=\"line\"></div><div class=\"line\">b：表示逻辑。例如：bChecked，bHasLogin;</div><div class=\"line\"></div><div class=\"line\">a：表示数组。例如：aList，aGroup;</div><div class=\"line\"></div><div class=\"line\">r：表示正则表达式。例如：rDomain，rEmail;</div><div class=\"line\"></div><div class=\"line\">f：表示函数。例如：fGetHtml，fInit;</div><div class=\"line\"></div><div class=\"line\">o：表示以上未涉及到的其他对象，例如：oButton，oDate;</div><div class=\"line\"></div><div class=\"line\">g：global 全局变量 例如：gVersion</div></pre></td></tr></table></figure>\n<h6 id=\"例外情况：\"><a href=\"#例外情况：\" class=\"headerlink\" title=\"例外情况：\"></a>例外情况：</h6><p>1：作用域不大临时变量可以简写，比如：str，num，bol，obj，fun，arr。</p>\n<p>2：循环变量可以简写，比如：i，j，k等。</p>\n<p>为什么需要这样强制定义变量前缀?<br>正式因为javascript是弱语言造成的。在定义大量变量的时候，我们需要很明确的知道当前变量是什么属性，<br>如果只通过普通单词，是很难区分的。</p>\n<ol>\n<li>函数命名规范</li>\n</ol>\n<p>统一使用<code>动词</code>或者<code>动词[+名词]</code>形式，例如：fGetVersion()，fSubmitForm()，fInit();<br>涉及返回逻辑值的函数可以使用is，has等表示逻辑的词语代替动词。</p>\n<p>如果有内部函数，使用__f+动词[+名词]形式，内部函数必需在函数最后定义。例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function fGetNumber(nTotal) &#123;</div><div class=\"line\">\tif (nTotal &lt; 100) &#123;</div><div class=\"line\">\t\tnTotal = 100;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\treturn __fAdd(nTotal);</div><div class=\"line\"></div><div class=\"line\">\tfunction __fAdd(nNumber) &#123;</div><div class=\"line\">\t\tnNumber++;</div><div class=\"line\">\t\treturn nNumber;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">fGetNumber(30)</div></pre></td></tr></table></figure></p>\n<p>3.其他注意事项</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">1：所有命名最好使用英语表示。</div><div class=\"line\"></div><div class=\"line\">2：所有变量名应该明确而必要，尽量避免不必要的容易混淆的缩写。</div><div class=\"line\"></div><div class=\"line\">3：netease.events.mouse.Handler，而不是 netease.events.mouse.MouseEventHandler。</div><div class=\"line\"></div><div class=\"line\">4：对应的方法应该使用对应的动词，例如：get/set, add/remove, create/destroy, start/stop, insert/delete, begin/end。</div><div class=\"line\"></div><div class=\"line\">5：应该避免双重否定意义的变量，例如：bIsNotError, bIsNotFound，不可取。</div><div class=\"line\"></div><div class=\"line\">6：变量应该在最小的范围内定义，并尽可能的保持最少的活动时间。</div><div class=\"line\"></div><div class=\"line\">7：尽量避免复杂的条件语句，可以使用临时的boolean变量代替。</div><div class=\"line\"></div><div class=\"line\">8：一定要避免在条件中执行语句，例如：if((i=3)&gt;2)&#123;&#125;，不可取。</div></pre></td></tr></table></figure>\n<h2 id=\"匈牙利命名法\"><a href=\"#匈牙利命名法\" class=\"headerlink\" title=\"匈牙利命名法\"></a>匈牙利命名法</h2><h3 id=\"匈牙利命名法语法：\"><a href=\"#匈牙利命名法语法：\" class=\"headerlink\" title=\"匈牙利命名法语法：\"></a>匈牙利命名法语法：</h3><p><code>变量名</code>＝<code>类型</code>＋<code>对象描述</code><br><strong>类型</strong>指变量的类型<br><strong>对象描述</strong>指对象名字全称或名字的一部分，要求有明确含义，命名要容易记忆容易理解。<br>提示: 虽然JavaScript变量表面上没有类型，但是JavaScript内部还是会为变量赋予相应的类型。</p>\n<p>提示: 匈牙利命名法是一位微软程序员发明的，多数的C,C++程序都使用此命名法。</p>\n<p>JavaScript变量匈牙利命名类型<br>JavaScript变量起名类型    变量命名前缀<br>Array 数组    a<br>Float 浮点    l<br>Function 函数    f<br>Integer(int) 整型    n<br>Object 对象    o<br>Regular Expression 正则    r<br>String 字符串    s<br>g全局变量        g<br>JavaScript变量名匈牙利命名法示例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sWebURL=&quot;www.jb51.net&quot;;</div></pre></td></tr></table></figure></p>\n<p>从变量的名字可以看出s代表字符串WebURL是网址。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">var nCheckCount=5;</div></pre></td></tr></table></figure></p>\n<p>从变量的名字可以看出n代表Integer(整型)，CheckCount代表某种数量。</p>\n<p>使用匈牙利命名法非常简单直观，方便判断变量的类型，而且方便程序的阅读与维护。</p>\n<h2 id=\"限制\"><a href=\"#限制\" class=\"headerlink\" title=\"限制\"></a>限制</h2><ol>\n<li>尽量不要使用 eval()，冗余产生入侵</li>\n<li>缩进 在同一系统中应采用同一种缩进标准，本文提倡缩进大小为4个空格。</li>\n<li>花括号{}</li>\n<li><p>空格  任何“;”后空一格、for循环中初始化“,”后空一格、数组中”,”后空一格、对象中“:”后空一格、如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">for (var i = 0, j = 1; i &lt; 10; i += 1)&#123;</div><div class=\"line\">  var some = [1, 2, 3];</div><div class=\"line\">  var obj = &#123;aa: 1, bb: 2&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>函数参数里“,”后空一格、函数声明中花括号前空一格、函数表达式中括号前后各空一格，如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">func(a, b, c)&#123;&#125;;</div><div class=\"line\">function func() &#123;&#125;;</div><div class=\"line\">var func = function () &#123;&#125;;</div></pre></td></tr></table></figure>\n</li>\n<li><p>所有的操作符前后都跟一个空格，如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">var d = 0,</div><div class=\"line\">    a = b + 1;</div><div class=\"line\">if (a &amp;&amp; b &amp;&amp; c) &#123;</div><div class=\"line\">    d = a % c;</div><div class=\"line\">    a += d;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>换行<br>在以下位置必须换行：</p>\n<ul>\n<li>每个独立语句结束后；</li>\n<li>if、else、catch、finally、while等关键字前；</li>\n<li>运算符处换行时，运算符必须在新行的行首。</li>\n<li>对于因为单行长度超过限制时产生的换行，参考行长度中的策略进行分隔。</li>\n</ul>\n</li>\n<li><p>三元运算符过长</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//无需换行</div><div class=\"line\">var result = content?result1:result2;</div><div class=\"line\"></div><div class=\"line\">//换行</div><div class=\"line\">var data = _.isEmpty(content)</div><div class=\"line\">  ? _.isEmpty(content2)</div><div class=\"line\">    ?content3:content2</div><div class=\"line\">  :content;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Interface-接口返回参数规范\"><a href=\"#Interface-接口返回参数规范\" class=\"headerlink\" title=\"Interface 接口返回参数规范\"></a>Interface 接口返回参数规范</h2><ol>\n<li>接口名称：大驼峰吗？</li>\n<li>返回参数，小驼峰<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;status:200,data:&#123;name:&apos;admin&apos;,list:[]&#125;,info:&apos;&apos;&#125;</div><div class=\"line\">&#123;status:0,data:&apos;查询失败&apos;,info:&apos;&apos;&#125;</div><div class=\"line\">&#123;status:5005,data:&apos;服务器繁忙&apos;,info:&apos;&apos;&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Proxy-代理层\"><a href=\"#Proxy-代理层\" class=\"headerlink\" title=\"Proxy 代理层\"></a>Proxy 代理层</h2><ol>\n<li>注释：标记入参，出参</li>\n<li>将接口参数返回为标准模式参数</li>\n<li>在备注中添加，功能简介，<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * 录入赠送记录</div><div class=\"line\"> * 1. 通过。。。。</div><div class=\"line\"> * @param params</div><div class=\"line\"> * &#123;&quot;openid&quot;:&quot;微信唯一标识&quot;,&quot;from_deviceno&quot;:&quot;发起人设备号 必传&quot;,&quot;to_deviceno&quot;:&quot;接受人设备号 必传&quot;,&quot;gifts&quot;:&quot;礼物 [50M、100G] 必传&quot;,&quot;type&quot;:&quot;类型 [1]流量 必传&quot;,&quot;remark&quot;:&quot;备注 一个有规则的json串&quot;&#125;</div><div class=\"line\"> * @param callback</div><div class=\"line\"> *  &#123;&quot;data&quot;:&quot;赠送记录唯一标识&quot;,&quot;status&quot;:200,&quot;info&quot;:0&#125;</div><div class=\"line\"> * @constructor</div><div class=\"line\"> */</div><div class=\"line\">GiveFlowProxy.GfCreateGivingGiftsRecord = function (params, callback) &#123;</div><div class=\"line\">    var url = urlKit.GfCreateGivingGiftsRecord;</div><div class=\"line\">    httpUtil.post(url, params, function (error, response, content) &#123;</div><div class=\"line\">        callback(error, content);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"写注释\"><a href=\"#写注释\" class=\"headerlink\" title=\"写注释\"></a>写注释</h2><ol>\n<li>注释规范</li>\n<li>包含那些信息</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * 方法名</div><div class=\"line\"> 1. 简要写一下功能操作</div><div class=\"line\"> * @param  &#123;[type]&#125;   param    [description]</div><div class=\"line\"> * @param  &#123;Function&#125; callback [description]</div><div class=\"line\"> * @return &#123;[type]&#125;            [description]</div><div class=\"line\"> */</div><div class=\"line\">BillAndPayProxy.getWXPayData = function (param, callback) &#123;</div><div class=\"line\">    httpUtil.post(apis.wxDiscPayUrl, param, function (error, response, content) &#123;</div><div class=\"line\">        logger.info(&quot;获取微信支付数据返回结果：&quot; + JSON.stringify(param) + JSON.stringify(content));</div><div class=\"line\">        callback(error, content);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://www.php100.com/html/webkaifa/javascript/2012/0616/10550.html\" target=\"_blank\" rel=\"external\">网易前端JavaScript编码规范</a></li>\n<li><a href=\"http://www.jb51.net/article/87142.htm\" target=\"_blank\" rel=\"external\">最全的Javascript编码规范(推荐)</a></li>\n<li><a href=\"http://www.jb51.net/article/22229.htm\" target=\"_blank\" rel=\"external\">javascript 命名规则 变量命名规则</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"命名规范\"><a href=\"#命名规范\" class=\"headerlink\" title=\"命名规范\"></a>命名规范</h2><h3 id=\"命名法说明\"><a href=\"#命名法说明\" class=\"headerlink\" title=\"命名法说明\"></a>命名法说明</h3><ol>\n<li>camel命名法，形如 <code>thisIsAnApple</code></li>\n<li>pascal命名法，形如<code>ThisIsAnApple</code></li>\n<li>下划线命名法，形如<code>this_is_an_apple</code></li>\n<li>中划线命名法，形如<code>this-is-an-apple</code></li>\n<li>匈牙利命名法，<code>变量名</code>＝<code>类型</code>＋<code>对象描述</code></li>\n</ol>\n<h3 id=\"命名法说明-1\"><a href=\"#命名法说明-1\" class=\"headerlink\" title=\"命名法说明\"></a>命名法说明</h3><ol>\n<li>变量名：必须使用camel命名法</li>\n<li>参数名：必须使用camel命名法</li>\n<li>函数名：必须使用camel命名法</li>\n<li>方法/属性：必须使用camel命名法</li>\n<li>私有（保护）成员：必须以下划线_开头</li>\n<li>常量名：必须使用全部大写的下划线命名法，如IS_DEBUG_ENABLED</li>\n<li>类名：必须使用pascal命名法</li>\n<li>枚举名：必须使用pascal命名法</li>\n<li>枚举的属性：必须使用全部大写的下划线命名法</li>\n<li>命名空间：必须使用camel命名法</li>\n<li>语义：命名同时还需要关注语义，如：<ul>\n<li>变量名应当使用名词；</li>\n<li>boolean类型的应当使用is、has等起头，表示其类型；</li>\n<li>函数名应当用动宾短语；getName</li>\n<li>类名应当用名词。Person</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"项目名称\"><a href=\"#项目名称\" class=\"headerlink\" title=\"项目名称\"></a>项目名称</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mohoo-telecom-wechat-manager</div></pre></td></tr></table></figure>\n<h3 id=\"文件目录\"><a href=\"#文件目录\" class=\"headerlink\" title=\"文件目录\"></a>文件目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy</div></pre></td></tr></table></figure>\n<h3 id=\"proxy-rest-contr-文件名称\"><a href=\"#proxy-rest-contr-文件名称\" class=\"headerlink\" title=\"proxy,rest,contr 文件名称\"></a>proxy,rest,contr 文件名称</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">AuthProxy</div><div class=\"line\">AuthRest</div><div class=\"line\">AuthCtrl</div></pre></td></tr></table></figure>\n<h3 id=\"接口地址\"><a href=\"#接口地址\" class=\"headerlink\" title=\"接口地址\"></a>接口地址</h3><h3 id=\"静态资源\"><a href=\"#静态资源\" class=\"headerlink\" title=\"静态资源\"></a>静态资源</h3><ol>\n<li>js</li>\n<li>css: page-alert-span</li>\n<li>img: page-icon-add</li>\n</ol>\n<h3 id=\"router\"><a href=\"#router\" class=\"headerlink\" title=\"router\"></a>router</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">router.get(&apos;/index&apos;, auth.authWxUser, home.Index);</div><div class=\"line\">router.get(&apos;/rule&apos;, auth.authWxUser, home.Rule);</div><div class=\"line\"></div><div class=\"line\">router.get(&apos;/query/devicename&apos;, auth.authWxUser, home.deviceName);//查询</div><div class=\"line\">router.get(&apos;/create/record&apos;, auth.authWxUser, home.record);//创建</div><div class=\"line\">router.get(&apos;/update/recordstatus&apos;, auth.authWxUser, home.recordStatus);//修改</div><div class=\"line\">router.get(&apos;/delete/recordbyid&apos;, auth.authWxUser, home.recordById);//删除</div></pre></td></tr></table></figure>\n<h3 id=\"URL接口命名-单词分割\"><a href=\"#URL接口命名-单词分割\" class=\"headerlink\" title=\"URL接口命名-单词分割\"></a>URL接口命名-单词分割</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h3 id=\"类名，对象名\"><a href=\"#类名，对象名\" class=\"headerlink\" title=\"类名，对象名\"></a>类名，对象名</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function Person()&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">var BillAndPayProxy = &#123;&#125;;</div><div class=\"line\">BillAndPayProxy.getWXPayData = function (param, callback) &#123;</div><div class=\"line\">    httpUtil.post(apis.wxDiscPayUrl, param, function (error, response, content) &#123;</div><div class=\"line\">        callback(error, content);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h3 id=\"方法名称\"><a href=\"#方法名称\" class=\"headerlink\" title=\"方法名称\"></a>方法名称</h3><ul>\n<li>getName</li>\n<li>addUserRecord</li>\n<li>get/set, add/remove, create/destroy, start/stop, insert/delete, begin/end。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">var AuthProxy = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\">AuthProxy.getName();</div></pre></td></tr></table></figure>\n<h3 id=\"私有变量\"><a href=\"#私有变量\" class=\"headerlink\" title=\"私有变量\"></a>私有变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">var AuthProxy = &#123;</div><div class=\"line\">\t_name: &apos;&apos;,</div><div class=\"line\">\t_age: &apos;&apos;</div><div class=\"line\">&#125;;</div><div class=\"line\">var person = &#123;</div><div class=\"line\">\t_setSext: function() &#123;</div><div class=\"line\">\t\t// ...</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t_setName: function() &#123;</div><div class=\"line\">\t\t// ...</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h3 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">var PI = &apos;3.1415926&apos;;</div><div class=\"line\">var URL_BIND = &apos;http://wwww.baidu.com&apos;;</div></pre></td></tr></table></figure>\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><blockquote>\n<p>总所周知，javascript是一种语法极其灵活的语言。javascript在设计之初就只是用来为HTML添加动态效果的。由于他动态，弱类型等特性，以及不同浏览器的兼容性问题，、<br>造成了开发成本要比java等语言要高很多。正因为它太灵活，我们制定了适用于网易邮箱的javascript编码规范，尽可能多的降低由于语法灵活造成的问题。<br>以下将具体介绍：</p>\n</blockquote>\n<p>变量名包括<code>全局变量</code>，<code>局部变量</code>，<code>类变量</code>，<code>函数参数</code>等等</p>\n<h6 id=\"基本规范\"><a href=\"#基本规范\" class=\"headerlink\" title=\"基本规范\"></a>基本规范</h6><p><code>变量命名</code>都以<code>类型前缀</code>+<code>有意义的单词</code>组成，单词首字母都需要大写。例如：<code>sUserName</code>，<code>nCount</code>。</p>\n<h6 id=\"前缀规范\"><a href=\"#前缀规范\" class=\"headerlink\" title=\"前缀规范\"></a>前缀规范</h6><p>每个局部变量都需要有一个类型前缀，按照类型可以分为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">s：表示字符串。例如：sName，sHtml;</div><div class=\"line\"></div><div class=\"line\">n：表示数字。例如：nPage，nTotal;</div><div class=\"line\"></div><div class=\"line\">b：表示逻辑。例如：bChecked，bHasLogin;</div><div class=\"line\"></div><div class=\"line\">a：表示数组。例如：aList，aGroup;</div><div class=\"line\"></div><div class=\"line\">r：表示正则表达式。例如：rDomain，rEmail;</div><div class=\"line\"></div><div class=\"line\">f：表示函数。例如：fGetHtml，fInit;</div><div class=\"line\"></div><div class=\"line\">o：表示以上未涉及到的其他对象，例如：oButton，oDate;</div><div class=\"line\"></div><div class=\"line\">g：global 全局变量 例如：gVersion</div></pre></td></tr></table></figure>\n<h6 id=\"例外情况：\"><a href=\"#例外情况：\" class=\"headerlink\" title=\"例外情况：\"></a>例外情况：</h6><p>1：作用域不大临时变量可以简写，比如：str，num，bol，obj，fun，arr。</p>\n<p>2：循环变量可以简写，比如：i，j，k等。</p>\n<p>为什么需要这样强制定义变量前缀?<br>正式因为javascript是弱语言造成的。在定义大量变量的时候，我们需要很明确的知道当前变量是什么属性，<br>如果只通过普通单词，是很难区分的。</p>\n<ol>\n<li>函数命名规范</li>\n</ol>\n<p>统一使用<code>动词</code>或者<code>动词[+名词]</code>形式，例如：fGetVersion()，fSubmitForm()，fInit();<br>涉及返回逻辑值的函数可以使用is，has等表示逻辑的词语代替动词。</p>\n<p>如果有内部函数，使用__f+动词[+名词]形式，内部函数必需在函数最后定义。例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function fGetNumber(nTotal) &#123;</div><div class=\"line\">\tif (nTotal &lt; 100) &#123;</div><div class=\"line\">\t\tnTotal = 100;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\treturn __fAdd(nTotal);</div><div class=\"line\"></div><div class=\"line\">\tfunction __fAdd(nNumber) &#123;</div><div class=\"line\">\t\tnNumber++;</div><div class=\"line\">\t\treturn nNumber;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">fGetNumber(30)</div></pre></td></tr></table></figure></p>\n<p>3.其他注意事项</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">1：所有命名最好使用英语表示。</div><div class=\"line\"></div><div class=\"line\">2：所有变量名应该明确而必要，尽量避免不必要的容易混淆的缩写。</div><div class=\"line\"></div><div class=\"line\">3：netease.events.mouse.Handler，而不是 netease.events.mouse.MouseEventHandler。</div><div class=\"line\"></div><div class=\"line\">4：对应的方法应该使用对应的动词，例如：get/set, add/remove, create/destroy, start/stop, insert/delete, begin/end。</div><div class=\"line\"></div><div class=\"line\">5：应该避免双重否定意义的变量，例如：bIsNotError, bIsNotFound，不可取。</div><div class=\"line\"></div><div class=\"line\">6：变量应该在最小的范围内定义，并尽可能的保持最少的活动时间。</div><div class=\"line\"></div><div class=\"line\">7：尽量避免复杂的条件语句，可以使用临时的boolean变量代替。</div><div class=\"line\"></div><div class=\"line\">8：一定要避免在条件中执行语句，例如：if((i=3)&gt;2)&#123;&#125;，不可取。</div></pre></td></tr></table></figure>\n<h2 id=\"匈牙利命名法\"><a href=\"#匈牙利命名法\" class=\"headerlink\" title=\"匈牙利命名法\"></a>匈牙利命名法</h2><h3 id=\"匈牙利命名法语法：\"><a href=\"#匈牙利命名法语法：\" class=\"headerlink\" title=\"匈牙利命名法语法：\"></a>匈牙利命名法语法：</h3><p><code>变量名</code>＝<code>类型</code>＋<code>对象描述</code><br><strong>类型</strong>指变量的类型<br><strong>对象描述</strong>指对象名字全称或名字的一部分，要求有明确含义，命名要容易记忆容易理解。<br>提示: 虽然JavaScript变量表面上没有类型，但是JavaScript内部还是会为变量赋予相应的类型。</p>\n<p>提示: 匈牙利命名法是一位微软程序员发明的，多数的C,C++程序都使用此命名法。</p>\n<p>JavaScript变量匈牙利命名类型<br>JavaScript变量起名类型    变量命名前缀<br>Array 数组    a<br>Float 浮点    l<br>Function 函数    f<br>Integer(int) 整型    n<br>Object 对象    o<br>Regular Expression 正则    r<br>String 字符串    s<br>g全局变量        g<br>JavaScript变量名匈牙利命名法示例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sWebURL=&quot;www.jb51.net&quot;;</div></pre></td></tr></table></figure></p>\n<p>从变量的名字可以看出s代表字符串WebURL是网址。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">var nCheckCount=5;</div></pre></td></tr></table></figure></p>\n<p>从变量的名字可以看出n代表Integer(整型)，CheckCount代表某种数量。</p>\n<p>使用匈牙利命名法非常简单直观，方便判断变量的类型，而且方便程序的阅读与维护。</p>\n<h2 id=\"限制\"><a href=\"#限制\" class=\"headerlink\" title=\"限制\"></a>限制</h2><ol>\n<li>尽量不要使用 eval()，冗余产生入侵</li>\n<li>缩进 在同一系统中应采用同一种缩进标准，本文提倡缩进大小为4个空格。</li>\n<li>花括号{}</li>\n<li><p>空格  任何“;”后空一格、for循环中初始化“,”后空一格、数组中”,”后空一格、对象中“:”后空一格、如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">for (var i = 0, j = 1; i &lt; 10; i += 1)&#123;</div><div class=\"line\">  var some = [1, 2, 3];</div><div class=\"line\">  var obj = &#123;aa: 1, bb: 2&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>函数参数里“,”后空一格、函数声明中花括号前空一格、函数表达式中括号前后各空一格，如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">func(a, b, c)&#123;&#125;;</div><div class=\"line\">function func() &#123;&#125;;</div><div class=\"line\">var func = function () &#123;&#125;;</div></pre></td></tr></table></figure>\n</li>\n<li><p>所有的操作符前后都跟一个空格，如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">var d = 0,</div><div class=\"line\">    a = b + 1;</div><div class=\"line\">if (a &amp;&amp; b &amp;&amp; c) &#123;</div><div class=\"line\">    d = a % c;</div><div class=\"line\">    a += d;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>换行<br>在以下位置必须换行：</p>\n<ul>\n<li>每个独立语句结束后；</li>\n<li>if、else、catch、finally、while等关键字前；</li>\n<li>运算符处换行时，运算符必须在新行的行首。</li>\n<li>对于因为单行长度超过限制时产生的换行，参考行长度中的策略进行分隔。</li>\n</ul>\n</li>\n<li><p>三元运算符过长</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//无需换行</div><div class=\"line\">var result = content?result1:result2;</div><div class=\"line\"></div><div class=\"line\">//换行</div><div class=\"line\">var data = _.isEmpty(content)</div><div class=\"line\">  ? _.isEmpty(content2)</div><div class=\"line\">    ?content3:content2</div><div class=\"line\">  :content;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Interface-接口返回参数规范\"><a href=\"#Interface-接口返回参数规范\" class=\"headerlink\" title=\"Interface 接口返回参数规范\"></a>Interface 接口返回参数规范</h2><ol>\n<li>接口名称：大驼峰吗？</li>\n<li>返回参数，小驼峰<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;status:200,data:&#123;name:&apos;admin&apos;,list:[]&#125;,info:&apos;&apos;&#125;</div><div class=\"line\">&#123;status:0,data:&apos;查询失败&apos;,info:&apos;&apos;&#125;</div><div class=\"line\">&#123;status:5005,data:&apos;服务器繁忙&apos;,info:&apos;&apos;&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Proxy-代理层\"><a href=\"#Proxy-代理层\" class=\"headerlink\" title=\"Proxy 代理层\"></a>Proxy 代理层</h2><ol>\n<li>注释：标记入参，出参</li>\n<li>将接口参数返回为标准模式参数</li>\n<li>在备注中添加，功能简介，<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * 录入赠送记录</div><div class=\"line\"> * 1. 通过。。。。</div><div class=\"line\"> * @param params</div><div class=\"line\"> * &#123;&quot;openid&quot;:&quot;微信唯一标识&quot;,&quot;from_deviceno&quot;:&quot;发起人设备号 必传&quot;,&quot;to_deviceno&quot;:&quot;接受人设备号 必传&quot;,&quot;gifts&quot;:&quot;礼物 [50M、100G] 必传&quot;,&quot;type&quot;:&quot;类型 [1]流量 必传&quot;,&quot;remark&quot;:&quot;备注 一个有规则的json串&quot;&#125;</div><div class=\"line\"> * @param callback</div><div class=\"line\"> *  &#123;&quot;data&quot;:&quot;赠送记录唯一标识&quot;,&quot;status&quot;:200,&quot;info&quot;:0&#125;</div><div class=\"line\"> * @constructor</div><div class=\"line\"> */</div><div class=\"line\">GiveFlowProxy.GfCreateGivingGiftsRecord = function (params, callback) &#123;</div><div class=\"line\">    var url = urlKit.GfCreateGivingGiftsRecord;</div><div class=\"line\">    httpUtil.post(url, params, function (error, response, content) &#123;</div><div class=\"line\">        callback(error, content);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"写注释\"><a href=\"#写注释\" class=\"headerlink\" title=\"写注释\"></a>写注释</h2><ol>\n<li>注释规范</li>\n<li>包含那些信息</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * 方法名</div><div class=\"line\"> 1. 简要写一下功能操作</div><div class=\"line\"> * @param  &#123;[type]&#125;   param    [description]</div><div class=\"line\"> * @param  &#123;Function&#125; callback [description]</div><div class=\"line\"> * @return &#123;[type]&#125;            [description]</div><div class=\"line\"> */</div><div class=\"line\">BillAndPayProxy.getWXPayData = function (param, callback) &#123;</div><div class=\"line\">    httpUtil.post(apis.wxDiscPayUrl, param, function (error, response, content) &#123;</div><div class=\"line\">        logger.info(&quot;获取微信支付数据返回结果：&quot; + JSON.stringify(param) + JSON.stringify(content));</div><div class=\"line\">        callback(error, content);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://www.php100.com/html/webkaifa/javascript/2012/0616/10550.html\" target=\"_blank\" rel=\"external\">网易前端JavaScript编码规范</a></li>\n<li><a href=\"http://www.jb51.net/article/87142.htm\" target=\"_blank\" rel=\"external\">最全的Javascript编码规范(推荐)</a></li>\n<li><a href=\"http://www.jb51.net/article/22229.htm\" target=\"_blank\" rel=\"external\">javascript 命名规则 变量命名规则</a></li>\n</ul>\n"},{"title":"windows nginx natapp","_content":"\n## 实现目标\n1. 通过nginx实现本地资源代理\n2. https 学习及使用\n3. 方便本地前端服务调试\n\n\n## 相关环境\n* windows 7 64\n* nginx v 1.6\n* [natapp](https://natapp.cn)\n* phpStudy \n* 阿里云\n\n## 基本操作\n\n### 线上配置\n1. 注册个人域名\n2. 注册natapp\n3. 域名和natapp进行绑定\n\n### nginx 配置\n\n常用命令\n\n```\nnginx -s stop 强制关闭 \nnginx -s quit 安全关闭 \nnginx -s reload 改变配置文件的时候，重启nginx工作进程，来时配置文件生效 \nnginx -t  测试是否成功\n\n.\\nginx.exe -t # windows 下要添加.\\\n```\n\n**http 代理配置** \n```\n# 静态页面\nlocation /html {\n    alias   F:/HTML/year;\n}\n# 端口代理\nlocation /demo {\n    proxy_pass  http://127.0.0.1:6061;\n}\n# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n# php环境代理\nlocation ~ \\.php(.*)$  {\n\troot E:/WWW;# 这里是站点的根目录\n    fastcgi_pass   127.0.0.1:9000;\n    fastcgi_index  index.php;\n    fastcgi_split_path_info  ^((?U).+\\.php)(/?.+)$;\n    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n    fastcgi_param  PATH_INFO  $fastcgi_path_info;\n    fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;\n    include        fastcgi_params;\n}\n```\n\n\n**https 代理配置** \n\n```\nserver {\n    listen       443;\n    server_name  localhost;\n\n    ssl                  on;\n    ssl_certificate      https/214009859140175.pem; # ssl 加密文件\n    ssl_certificate_key  https/214009859140175.key; # ssl 加密文件\n\n    ssl_session_timeout  5m;\n\n    ssl_protocols  SSLv2 SSLv3 TLSv1;\n    ssl_ciphers  HIGH:!aNULL:!MD5;\n    ssl_prefer_server_ciphers   on;\n\n    location / {\n        root   html;\n        index  index.html index.htm;\n    }\n\n    # 静态页面\n    location /html {\n        alias   F:/HTML/year;\n    }\n\n    # https 功能测试\n    location /https-demo {\n        proxy_pass  http://127.0.0.1:6061;\n    }\n\n}\n\n```\n\n### phpStudy 列表\n![phpStudy 配置](/view/img/phpStudy.jpg)\n\n### Apache 服务配置\n\n![Apache 环境配置](/view/img/Apache-edit.jpg)\n\n### php 配置\n```\nphp-cgi.exe -b 127.0.0.1:9000-c E:\\WWW\n```\n不运行上面代码，无法访问php\n\n### nssm 开机启动&后台运行\n```\nnssm install natapp # 安装服务\nnssm edit natapp # 编辑服务器名\nnssm restart natapp # 重启natapp服务\nnssm remove natapp # 删除XX服务\n```\n\n![nssm 开机启动&后台运行](/view/img/nssm-edit.jpg)\n![自定义服务](/view/img/background-list.jpg)\n\n### 注意事项\n\n1. window 执行exe\n```\n.\\n\n```\n\n2. https 加密文件\n> 这两块必须要有的，可以到阿里云去申请。\n```\nssl_certificate      https/214009859140175.pem; # ssl 加密文件\nssl_certificate_key  https/214009859140175.key; # ssl 加密文件\n```\n\n3. [阿里云](https://www.aliyun.com)【管理控制台】下【证书服务】\n\n## 参考\n- [natapp](https://natapp.cn)\n- [支持https泛域名以及本地(443端口)证书,支持http/2协议](https://natapp.cn/article/https)\n- [Natapp(Ngrok) Windows下注册为服务,开机启动&后台运行](https://natapp.cn/article/windows_service)\n\n- [nssm 用法](http://nssm.cc/usage)","source":"_posts/windows nginx natapp.md","raw":"---\ntitle: windows nginx natapp\n---\n\n## 实现目标\n1. 通过nginx实现本地资源代理\n2. https 学习及使用\n3. 方便本地前端服务调试\n\n\n## 相关环境\n* windows 7 64\n* nginx v 1.6\n* [natapp](https://natapp.cn)\n* phpStudy \n* 阿里云\n\n## 基本操作\n\n### 线上配置\n1. 注册个人域名\n2. 注册natapp\n3. 域名和natapp进行绑定\n\n### nginx 配置\n\n常用命令\n\n```\nnginx -s stop 强制关闭 \nnginx -s quit 安全关闭 \nnginx -s reload 改变配置文件的时候，重启nginx工作进程，来时配置文件生效 \nnginx -t  测试是否成功\n\n.\\nginx.exe -t # windows 下要添加.\\\n```\n\n**http 代理配置** \n```\n# 静态页面\nlocation /html {\n    alias   F:/HTML/year;\n}\n# 端口代理\nlocation /demo {\n    proxy_pass  http://127.0.0.1:6061;\n}\n# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n# php环境代理\nlocation ~ \\.php(.*)$  {\n\troot E:/WWW;# 这里是站点的根目录\n    fastcgi_pass   127.0.0.1:9000;\n    fastcgi_index  index.php;\n    fastcgi_split_path_info  ^((?U).+\\.php)(/?.+)$;\n    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n    fastcgi_param  PATH_INFO  $fastcgi_path_info;\n    fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;\n    include        fastcgi_params;\n}\n```\n\n\n**https 代理配置** \n\n```\nserver {\n    listen       443;\n    server_name  localhost;\n\n    ssl                  on;\n    ssl_certificate      https/214009859140175.pem; # ssl 加密文件\n    ssl_certificate_key  https/214009859140175.key; # ssl 加密文件\n\n    ssl_session_timeout  5m;\n\n    ssl_protocols  SSLv2 SSLv3 TLSv1;\n    ssl_ciphers  HIGH:!aNULL:!MD5;\n    ssl_prefer_server_ciphers   on;\n\n    location / {\n        root   html;\n        index  index.html index.htm;\n    }\n\n    # 静态页面\n    location /html {\n        alias   F:/HTML/year;\n    }\n\n    # https 功能测试\n    location /https-demo {\n        proxy_pass  http://127.0.0.1:6061;\n    }\n\n}\n\n```\n\n### phpStudy 列表\n![phpStudy 配置](/view/img/phpStudy.jpg)\n\n### Apache 服务配置\n\n![Apache 环境配置](/view/img/Apache-edit.jpg)\n\n### php 配置\n```\nphp-cgi.exe -b 127.0.0.1:9000-c E:\\WWW\n```\n不运行上面代码，无法访问php\n\n### nssm 开机启动&后台运行\n```\nnssm install natapp # 安装服务\nnssm edit natapp # 编辑服务器名\nnssm restart natapp # 重启natapp服务\nnssm remove natapp # 删除XX服务\n```\n\n![nssm 开机启动&后台运行](/view/img/nssm-edit.jpg)\n![自定义服务](/view/img/background-list.jpg)\n\n### 注意事项\n\n1. window 执行exe\n```\n.\\n\n```\n\n2. https 加密文件\n> 这两块必须要有的，可以到阿里云去申请。\n```\nssl_certificate      https/214009859140175.pem; # ssl 加密文件\nssl_certificate_key  https/214009859140175.key; # ssl 加密文件\n```\n\n3. [阿里云](https://www.aliyun.com)【管理控制台】下【证书服务】\n\n## 参考\n- [natapp](https://natapp.cn)\n- [支持https泛域名以及本地(443端口)证书,支持http/2协议](https://natapp.cn/article/https)\n- [Natapp(Ngrok) Windows下注册为服务,开机启动&后台运行](https://natapp.cn/article/windows_service)\n\n- [nssm 用法](http://nssm.cc/usage)","slug":"windows nginx natapp","published":1,"date":"2017-08-15T00:58:00.033Z","updated":"2017-08-15T00:58:00.034Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7kas44i000hy0jh0ur78sa2","content":"<h2 id=\"实现目标\"><a href=\"#实现目标\" class=\"headerlink\" title=\"实现目标\"></a>实现目标</h2><ol>\n<li>通过nginx实现本地资源代理</li>\n<li>https 学习及使用</li>\n<li>方便本地前端服务调试</li>\n</ol>\n<h2 id=\"相关环境\"><a href=\"#相关环境\" class=\"headerlink\" title=\"相关环境\"></a>相关环境</h2><ul>\n<li>windows 7 64</li>\n<li>nginx v 1.6</li>\n<li><a href=\"https://natapp.cn\" target=\"_blank\" rel=\"external\">natapp</a></li>\n<li>phpStudy </li>\n<li>阿里云</li>\n</ul>\n<h2 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h2><h3 id=\"线上配置\"><a href=\"#线上配置\" class=\"headerlink\" title=\"线上配置\"></a>线上配置</h3><ol>\n<li>注册个人域名</li>\n<li>注册natapp</li>\n<li>域名和natapp进行绑定</li>\n</ol>\n<h3 id=\"nginx-配置\"><a href=\"#nginx-配置\" class=\"headerlink\" title=\"nginx 配置\"></a>nginx 配置</h3><p>常用命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -s stop 强制关闭 </div><div class=\"line\">nginx -s quit 安全关闭 </div><div class=\"line\">nginx -s reload 改变配置文件的时候，重启nginx工作进程，来时配置文件生效 </div><div class=\"line\">nginx -t  测试是否成功</div><div class=\"line\"></div><div class=\"line\">.\\nginx.exe -t # windows 下要添加.\\</div></pre></td></tr></table></figure>\n<p><strong>http 代理配置</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 静态页面</div><div class=\"line\">location /html &#123;</div><div class=\"line\">    alias   F:/HTML/year;</div><div class=\"line\">&#125;</div><div class=\"line\"># 端口代理</div><div class=\"line\">location /demo &#123;</div><div class=\"line\">    proxy_pass  http://127.0.0.1:6061;</div><div class=\"line\">&#125;</div><div class=\"line\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class=\"line\"># php环境代理</div><div class=\"line\">location ~ \\.php(.*)$  &#123;</div><div class=\"line\">\troot E:/WWW;# 这里是站点的根目录</div><div class=\"line\">    fastcgi_pass   127.0.0.1:9000;</div><div class=\"line\">    fastcgi_index  index.php;</div><div class=\"line\">    fastcgi_split_path_info  ^((?U).+\\.php)(/?.+)$;</div><div class=\"line\">    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</div><div class=\"line\">    fastcgi_param  PATH_INFO  $fastcgi_path_info;</div><div class=\"line\">    fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;</div><div class=\"line\">    include        fastcgi_params;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>https 代理配置</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen       443;</div><div class=\"line\">    server_name  localhost;</div><div class=\"line\"></div><div class=\"line\">    ssl                  on;</div><div class=\"line\">    ssl_certificate      https/214009859140175.pem; # ssl 加密文件</div><div class=\"line\">    ssl_certificate_key  https/214009859140175.key; # ssl 加密文件</div><div class=\"line\"></div><div class=\"line\">    ssl_session_timeout  5m;</div><div class=\"line\"></div><div class=\"line\">    ssl_protocols  SSLv2 SSLv3 TLSv1;</div><div class=\"line\">    ssl_ciphers  HIGH:!aNULL:!MD5;</div><div class=\"line\">    ssl_prefer_server_ciphers   on;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">        root   html;</div><div class=\"line\">        index  index.html index.htm;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    # 静态页面</div><div class=\"line\">    location /html &#123;</div><div class=\"line\">        alias   F:/HTML/year;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    # https 功能测试</div><div class=\"line\">    location /https-demo &#123;</div><div class=\"line\">        proxy_pass  http://127.0.0.1:6061;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"phpStudy-列表\"><a href=\"#phpStudy-列表\" class=\"headerlink\" title=\"phpStudy 列表\"></a>phpStudy 列表</h3><p><img src=\"/view/img/phpStudy.jpg\" alt=\"phpStudy 配置\"></p>\n<h3 id=\"Apache-服务配置\"><a href=\"#Apache-服务配置\" class=\"headerlink\" title=\"Apache 服务配置\"></a>Apache 服务配置</h3><p><img src=\"/view/img/Apache-edit.jpg\" alt=\"Apache 环境配置\"></p>\n<h3 id=\"php-配置\"><a href=\"#php-配置\" class=\"headerlink\" title=\"php 配置\"></a>php 配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php-cgi.exe -b 127.0.0.1:9000-c E:\\WWW</div></pre></td></tr></table></figure>\n<p>不运行上面代码，无法访问php</p>\n<h3 id=\"nssm-开机启动-amp-后台运行\"><a href=\"#nssm-开机启动-amp-后台运行\" class=\"headerlink\" title=\"nssm 开机启动&amp;后台运行\"></a>nssm 开机启动&amp;后台运行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">nssm install natapp # 安装服务</div><div class=\"line\">nssm edit natapp # 编辑服务器名</div><div class=\"line\">nssm restart natapp # 重启natapp服务</div><div class=\"line\">nssm remove natapp # 删除XX服务</div></pre></td></tr></table></figure>\n<p><img src=\"/view/img/nssm-edit.jpg\" alt=\"nssm 开机启动&amp;后台运行\"><br><img src=\"/view/img/background-list.jpg\" alt=\"自定义服务\"></p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ol>\n<li><p>window 执行exe</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.\\n</div></pre></td></tr></table></figure>\n</li>\n<li><p>https 加密文件</p>\n<blockquote>\n<p>这两块必须要有的，可以到阿里云去申请。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssl_certificate      https/214009859140175.pem; # ssl 加密文件</div><div class=\"line\">ssl_certificate_key  https/214009859140175.key; # ssl 加密文件</div></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p><a href=\"https://www.aliyun.com\" target=\"_blank\" rel=\"external\">阿里云</a>【管理控制台】下【证书服务】</p>\n</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://natapp.cn\" target=\"_blank\" rel=\"external\">natapp</a></li>\n<li><a href=\"https://natapp.cn/article/https\" target=\"_blank\" rel=\"external\">支持https泛域名以及本地(443端口)证书,支持http/2协议</a></li>\n<li><p><a href=\"https://natapp.cn/article/windows_service\" target=\"_blank\" rel=\"external\">Natapp(Ngrok) Windows下注册为服务,开机启动&amp;后台运行</a></p>\n</li>\n<li><p><a href=\"http://nssm.cc/usage\" target=\"_blank\" rel=\"external\">nssm 用法</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"实现目标\"><a href=\"#实现目标\" class=\"headerlink\" title=\"实现目标\"></a>实现目标</h2><ol>\n<li>通过nginx实现本地资源代理</li>\n<li>https 学习及使用</li>\n<li>方便本地前端服务调试</li>\n</ol>\n<h2 id=\"相关环境\"><a href=\"#相关环境\" class=\"headerlink\" title=\"相关环境\"></a>相关环境</h2><ul>\n<li>windows 7 64</li>\n<li>nginx v 1.6</li>\n<li><a href=\"https://natapp.cn\" target=\"_blank\" rel=\"external\">natapp</a></li>\n<li>phpStudy </li>\n<li>阿里云</li>\n</ul>\n<h2 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h2><h3 id=\"线上配置\"><a href=\"#线上配置\" class=\"headerlink\" title=\"线上配置\"></a>线上配置</h3><ol>\n<li>注册个人域名</li>\n<li>注册natapp</li>\n<li>域名和natapp进行绑定</li>\n</ol>\n<h3 id=\"nginx-配置\"><a href=\"#nginx-配置\" class=\"headerlink\" title=\"nginx 配置\"></a>nginx 配置</h3><p>常用命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -s stop 强制关闭 </div><div class=\"line\">nginx -s quit 安全关闭 </div><div class=\"line\">nginx -s reload 改变配置文件的时候，重启nginx工作进程，来时配置文件生效 </div><div class=\"line\">nginx -t  测试是否成功</div><div class=\"line\"></div><div class=\"line\">.\\nginx.exe -t # windows 下要添加.\\</div></pre></td></tr></table></figure>\n<p><strong>http 代理配置</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 静态页面</div><div class=\"line\">location /html &#123;</div><div class=\"line\">    alias   F:/HTML/year;</div><div class=\"line\">&#125;</div><div class=\"line\"># 端口代理</div><div class=\"line\">location /demo &#123;</div><div class=\"line\">    proxy_pass  http://127.0.0.1:6061;</div><div class=\"line\">&#125;</div><div class=\"line\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class=\"line\"># php环境代理</div><div class=\"line\">location ~ \\.php(.*)$  &#123;</div><div class=\"line\">\troot E:/WWW;# 这里是站点的根目录</div><div class=\"line\">    fastcgi_pass   127.0.0.1:9000;</div><div class=\"line\">    fastcgi_index  index.php;</div><div class=\"line\">    fastcgi_split_path_info  ^((?U).+\\.php)(/?.+)$;</div><div class=\"line\">    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</div><div class=\"line\">    fastcgi_param  PATH_INFO  $fastcgi_path_info;</div><div class=\"line\">    fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;</div><div class=\"line\">    include        fastcgi_params;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>https 代理配置</strong> </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen       443;</div><div class=\"line\">    server_name  localhost;</div><div class=\"line\"></div><div class=\"line\">    ssl                  on;</div><div class=\"line\">    ssl_certificate      https/214009859140175.pem; # ssl 加密文件</div><div class=\"line\">    ssl_certificate_key  https/214009859140175.key; # ssl 加密文件</div><div class=\"line\"></div><div class=\"line\">    ssl_session_timeout  5m;</div><div class=\"line\"></div><div class=\"line\">    ssl_protocols  SSLv2 SSLv3 TLSv1;</div><div class=\"line\">    ssl_ciphers  HIGH:!aNULL:!MD5;</div><div class=\"line\">    ssl_prefer_server_ciphers   on;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">        root   html;</div><div class=\"line\">        index  index.html index.htm;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    # 静态页面</div><div class=\"line\">    location /html &#123;</div><div class=\"line\">        alias   F:/HTML/year;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    # https 功能测试</div><div class=\"line\">    location /https-demo &#123;</div><div class=\"line\">        proxy_pass  http://127.0.0.1:6061;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"phpStudy-列表\"><a href=\"#phpStudy-列表\" class=\"headerlink\" title=\"phpStudy 列表\"></a>phpStudy 列表</h3><p><img src=\"/view/img/phpStudy.jpg\" alt=\"phpStudy 配置\"></p>\n<h3 id=\"Apache-服务配置\"><a href=\"#Apache-服务配置\" class=\"headerlink\" title=\"Apache 服务配置\"></a>Apache 服务配置</h3><p><img src=\"/view/img/Apache-edit.jpg\" alt=\"Apache 环境配置\"></p>\n<h3 id=\"php-配置\"><a href=\"#php-配置\" class=\"headerlink\" title=\"php 配置\"></a>php 配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">php-cgi.exe -b 127.0.0.1:9000-c E:\\WWW</div></pre></td></tr></table></figure>\n<p>不运行上面代码，无法访问php</p>\n<h3 id=\"nssm-开机启动-amp-后台运行\"><a href=\"#nssm-开机启动-amp-后台运行\" class=\"headerlink\" title=\"nssm 开机启动&amp;后台运行\"></a>nssm 开机启动&amp;后台运行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">nssm install natapp # 安装服务</div><div class=\"line\">nssm edit natapp # 编辑服务器名</div><div class=\"line\">nssm restart natapp # 重启natapp服务</div><div class=\"line\">nssm remove natapp # 删除XX服务</div></pre></td></tr></table></figure>\n<p><img src=\"/view/img/nssm-edit.jpg\" alt=\"nssm 开机启动&amp;后台运行\"><br><img src=\"/view/img/background-list.jpg\" alt=\"自定义服务\"></p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ol>\n<li><p>window 执行exe</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.\\n</div></pre></td></tr></table></figure>\n</li>\n<li><p>https 加密文件</p>\n<blockquote>\n<p>这两块必须要有的，可以到阿里云去申请。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssl_certificate      https/214009859140175.pem; # ssl 加密文件</div><div class=\"line\">ssl_certificate_key  https/214009859140175.key; # ssl 加密文件</div></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p><a href=\"https://www.aliyun.com\" target=\"_blank\" rel=\"external\">阿里云</a>【管理控制台】下【证书服务】</p>\n</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://natapp.cn\" target=\"_blank\" rel=\"external\">natapp</a></li>\n<li><a href=\"https://natapp.cn/article/https\" target=\"_blank\" rel=\"external\">支持https泛域名以及本地(443端口)证书,支持http/2协议</a></li>\n<li><p><a href=\"https://natapp.cn/article/windows_service\" target=\"_blank\" rel=\"external\">Natapp(Ngrok) Windows下注册为服务,开机启动&amp;后台运行</a></p>\n</li>\n<li><p><a href=\"http://nssm.cc/usage\" target=\"_blank\" rel=\"external\">nssm 用法</a></p>\n</li>\n</ul>\n"},{"title":"webstorm 优化","_content":"\n## 解决webstorm安装webpack卡顿问题\n\n### 1、常用方法 \n\n\n\n【选择node_modules】右击选择","source":"_posts/webstorm.md","raw":"---\ntitle: webstorm 优化\n---\n\n## 解决webstorm安装webpack卡顿问题\n\n### 1、常用方法 \n\n\n\n【选择node_modules】右击选择","slug":"webstorm","published":1,"date":"2017-08-15T00:58:00.030Z","updated":"2017-08-15T00:58:00.032Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7kas44o000ky0jh3feulyt8","content":"<h2 id=\"解决webstorm安装webpack卡顿问题\"><a href=\"#解决webstorm安装webpack卡顿问题\" class=\"headerlink\" title=\"解决webstorm安装webpack卡顿问题\"></a>解决webstorm安装webpack卡顿问题</h2><h3 id=\"1、常用方法\"><a href=\"#1、常用方法\" class=\"headerlink\" title=\"1、常用方法\"></a>1、常用方法</h3><p>【选择node_modules】右击选择</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"解决webstorm安装webpack卡顿问题\"><a href=\"#解决webstorm安装webpack卡顿问题\" class=\"headerlink\" title=\"解决webstorm安装webpack卡顿问题\"></a>解决webstorm安装webpack卡顿问题</h2><h3 id=\"1、常用方法\"><a href=\"#1、常用方法\" class=\"headerlink\" title=\"1、常用方法\"></a>1、常用方法</h3><p>【选择node_modules】右击选择</p>\n"},{"layout":"post","title":"记前端按钮一次点击重复请求的问题处理","date":"2017-08-17T09:55:03.000Z","_content":"\n## 分析产生重复请求的原因\n### 一、 前端js 未做限制 每点击一次就会请求一次\n\n### 二、 jQuery 或者 vue.js 等重复 加载初始化方法，将用户点击事件累加\n加载了三遍，点击btn事件了，其内部方法将会被触发3次\n```js\nvar init = function(){\n\t$('#btn').click(function(){\n\t\t//请求事件\n\t});\n};\n\ninit();\ninit();\ninit();\n\n```\n### 三、 jquery 本身处理有一定的延时性（时间极短）\n1. 使用原生js，能够实时响应。设置isAllowSubmit为true,第一遍请求时，设置为false,在ajax未响应时，下面的点击事件是无发\n重复调用ajax请求的。\n\n```js\n\nvar GiveEntity = {};\nvar isAllowSubmit = true;\n\nGiveEntity.submit = function (isShare) {\n\tif (isAllowSubmit) {\n\t\tisAllowSubmit = false;\n\t\t$('#btnConfirm').unbind('click').html('loading...');\n\n\t\t$.post('/' + app + '/create/record', params, function (data) {\n\t\t\tGiveEntity.isAllowSubmit = true;\n\n\t\t\t$('#btnConfirm').html('确认').click(function () {\n\t\t\t\tGiveEntity.loading(1)\n\t\t\t\t$(this).unbind('click').html('loading...');\n\t\t\t\tGiveEntity.submit();\n\t\t\t});\n\t\t})\n\n\t}\n}\n\n$('#btnConfirm').unbind('click').html('确认').click(function () {\n\tGiveEntity.loading(1)\n\t$(this).unbind('click').html('loading...');\n\tGiveEntity.submit();\n});\n\n","source":"_posts/repeat-request.md","raw":"---\nlayout: post\ntitle: 记前端按钮一次点击重复请求的问题处理 \ndate: 2017-08-17 17:55:03\ntags: javascript\n---\n\n## 分析产生重复请求的原因\n### 一、 前端js 未做限制 每点击一次就会请求一次\n\n### 二、 jQuery 或者 vue.js 等重复 加载初始化方法，将用户点击事件累加\n加载了三遍，点击btn事件了，其内部方法将会被触发3次\n```js\nvar init = function(){\n\t$('#btn').click(function(){\n\t\t//请求事件\n\t});\n};\n\ninit();\ninit();\ninit();\n\n```\n### 三、 jquery 本身处理有一定的延时性（时间极短）\n1. 使用原生js，能够实时响应。设置isAllowSubmit为true,第一遍请求时，设置为false,在ajax未响应时，下面的点击事件是无发\n重复调用ajax请求的。\n\n```js\n\nvar GiveEntity = {};\nvar isAllowSubmit = true;\n\nGiveEntity.submit = function (isShare) {\n\tif (isAllowSubmit) {\n\t\tisAllowSubmit = false;\n\t\t$('#btnConfirm').unbind('click').html('loading...');\n\n\t\t$.post('/' + app + '/create/record', params, function (data) {\n\t\t\tGiveEntity.isAllowSubmit = true;\n\n\t\t\t$('#btnConfirm').html('确认').click(function () {\n\t\t\t\tGiveEntity.loading(1)\n\t\t\t\t$(this).unbind('click').html('loading...');\n\t\t\t\tGiveEntity.submit();\n\t\t\t});\n\t\t})\n\n\t}\n}\n\n$('#btnConfirm').unbind('click').html('确认').click(function () {\n\tGiveEntity.loading(1)\n\t$(this).unbind('click').html('loading...');\n\tGiveEntity.submit();\n});\n\n","slug":"repeat-request","published":1,"updated":"2017-08-17T15:07:47.697Z","_id":"cj7kas44r000my0jhr4rsyo9u","comments":1,"photos":[],"link":"","content":"<h2 id=\"分析产生重复请求的原因\"><a href=\"#分析产生重复请求的原因\" class=\"headerlink\" title=\"分析产生重复请求的原因\"></a>分析产生重复请求的原因</h2><h3 id=\"一、-前端js-未做限制-每点击一次就会请求一次\"><a href=\"#一、-前端js-未做限制-每点击一次就会请求一次\" class=\"headerlink\" title=\"一、 前端js 未做限制 每点击一次就会请求一次\"></a>一、 前端js 未做限制 每点击一次就会请求一次</h3><h3 id=\"二、-jQuery-或者-vue-js-等重复-加载初始化方法，将用户点击事件累加\"><a href=\"#二、-jQuery-或者-vue-js-等重复-加载初始化方法，将用户点击事件累加\" class=\"headerlink\" title=\"二、 jQuery 或者 vue.js 等重复 加载初始化方法，将用户点击事件累加\"></a>二、 jQuery 或者 vue.js 等重复 加载初始化方法，将用户点击事件累加</h3><p>加载了三遍，点击btn事件了，其内部方法将会被触发3次<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> init = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">//请求事件</span></div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">init();</div><div class=\"line\">init();</div><div class=\"line\">init();</div></pre></td></tr></table></figure></p>\n<h3 id=\"三、-jquery-本身处理有一定的延时性（时间极短）\"><a href=\"#三、-jquery-本身处理有一定的延时性（时间极短）\" class=\"headerlink\" title=\"三、 jquery 本身处理有一定的延时性（时间极短）\"></a>三、 jquery 本身处理有一定的延时性（时间极短）</h3><ol>\n<li>使用原生js，能够实时响应。设置isAllowSubmit为true,第一遍请求时，设置为false,在ajax未响应时，下面的点击事件是无发<br>重复调用ajax请求的。</li>\n</ol>\n<p>```js</p>\n<p>var GiveEntity = {};<br>var isAllowSubmit = true;</p>\n<p>GiveEntity.submit = function (isShare) {<br>    if (isAllowSubmit) {<br>        isAllowSubmit = false;<br>        $(‘#btnConfirm’).unbind(‘click’).html(‘loading…’);</p>\n<pre><code>    $.post(&apos;/&apos; + app + &apos;/create/record&apos;, params, function (data) {\n        GiveEntity.isAllowSubmit = true;\n\n        $(&apos;#btnConfirm&apos;).html(&apos;确认&apos;).click(function () {\n            GiveEntity.loading(1)\n            $(this).unbind(&apos;click&apos;).html(&apos;loading...&apos;);\n            GiveEntity.submit();\n        });\n    })\n\n}\n</code></pre><p>}</p>\n<p>$(‘#btnConfirm’).unbind(‘click’).html(‘确认’).click(function () {<br>    GiveEntity.loading(1)<br>    $(this).unbind(‘click’).html(‘loading…’);<br>    GiveEntity.submit();<br>});</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"分析产生重复请求的原因\"><a href=\"#分析产生重复请求的原因\" class=\"headerlink\" title=\"分析产生重复请求的原因\"></a>分析产生重复请求的原因</h2><h3 id=\"一、-前端js-未做限制-每点击一次就会请求一次\"><a href=\"#一、-前端js-未做限制-每点击一次就会请求一次\" class=\"headerlink\" title=\"一、 前端js 未做限制 每点击一次就会请求一次\"></a>一、 前端js 未做限制 每点击一次就会请求一次</h3><h3 id=\"二、-jQuery-或者-vue-js-等重复-加载初始化方法，将用户点击事件累加\"><a href=\"#二、-jQuery-或者-vue-js-等重复-加载初始化方法，将用户点击事件累加\" class=\"headerlink\" title=\"二、 jQuery 或者 vue.js 等重复 加载初始化方法，将用户点击事件累加\"></a>二、 jQuery 或者 vue.js 等重复 加载初始化方法，将用户点击事件累加</h3><p>加载了三遍，点击btn事件了，其内部方法将会被触发3次<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> init = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">//请求事件</span></div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">init();</div><div class=\"line\">init();</div><div class=\"line\">init();</div></pre></td></tr></table></figure></p>\n<h3 id=\"三、-jquery-本身处理有一定的延时性（时间极短）\"><a href=\"#三、-jquery-本身处理有一定的延时性（时间极短）\" class=\"headerlink\" title=\"三、 jquery 本身处理有一定的延时性（时间极短）\"></a>三、 jquery 本身处理有一定的延时性（时间极短）</h3><ol>\n<li>使用原生js，能够实时响应。设置isAllowSubmit为true,第一遍请求时，设置为false,在ajax未响应时，下面的点击事件是无发<br>重复调用ajax请求的。</li>\n</ol>\n<p>```js</p>\n<p>var GiveEntity = {};<br>var isAllowSubmit = true;</p>\n<p>GiveEntity.submit = function (isShare) {<br>    if (isAllowSubmit) {<br>        isAllowSubmit = false;<br>        $(‘#btnConfirm’).unbind(‘click’).html(‘loading…’);</p>\n<pre><code>    $.post(&apos;/&apos; + app + &apos;/create/record&apos;, params, function (data) {\n        GiveEntity.isAllowSubmit = true;\n\n        $(&apos;#btnConfirm&apos;).html(&apos;确认&apos;).click(function () {\n            GiveEntity.loading(1)\n            $(this).unbind(&apos;click&apos;).html(&apos;loading...&apos;);\n            GiveEntity.submit();\n        });\n    })\n\n}\n</code></pre><p>}</p>\n<p>$(‘#btnConfirm’).unbind(‘click’).html(‘确认’).click(function () {<br>    GiveEntity.loading(1)<br>    $(this).unbind(‘click’).html(‘loading…’);<br>    GiveEntity.submit();<br>});</p>\n"},{"title":"开发常用工具","_content":"\n## window 平台下\n* XMind\n* Sygwin Terminal\n* Cmder\n* GifCam-4.5.CHS\n* Xshell 5\n* 小书屋\n* Listary\n* Visual Studio Code\n* XMind 7\n* filezilla 上传工具\n* navicat 数据库\n* Google Chrome\n* Mozilla Firefox\n* 网易闪电邮 and Foxmail\n* 迅雷极速版\n* PicPick\n* 人生日历\n* Secure\n* phpStudy\n* 微信web开发者工具\n* 净网大师\n* 有道云\n* 钉钉\n* webstorm\n* sublime\n* SourceTree\n\n\n## 浏览器下\n1. Anything to QRcode\n2. JSON Formatter\n3. JSON-handle\n4. Momentum\n5. Octotree\n6. OneTab\n7. Page Ruler\n8. Postman\n9. WEB前端助手(FeHelper)\n\n持续维护中。。。","source":"_posts/tool/常用工具.md","raw":"---\ntitle: 开发常用工具\n---\n\n## window 平台下\n* XMind\n* Sygwin Terminal\n* Cmder\n* GifCam-4.5.CHS\n* Xshell 5\n* 小书屋\n* Listary\n* Visual Studio Code\n* XMind 7\n* filezilla 上传工具\n* navicat 数据库\n* Google Chrome\n* Mozilla Firefox\n* 网易闪电邮 and Foxmail\n* 迅雷极速版\n* PicPick\n* 人生日历\n* Secure\n* phpStudy\n* 微信web开发者工具\n* 净网大师\n* 有道云\n* 钉钉\n* webstorm\n* sublime\n* SourceTree\n\n\n## 浏览器下\n1. Anything to QRcode\n2. JSON Formatter\n3. JSON-handle\n4. Momentum\n5. Octotree\n6. OneTab\n7. Page Ruler\n8. Postman\n9. WEB前端助手(FeHelper)\n\n持续维护中。。。","slug":"tool/常用工具","published":1,"date":"2017-08-15T00:58:00.027Z","updated":"2017-08-15T00:58:00.029Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7kas459000qy0jh52uth1s7","content":"<h2 id=\"window-平台下\"><a href=\"#window-平台下\" class=\"headerlink\" title=\"window 平台下\"></a>window 平台下</h2><ul>\n<li>XMind</li>\n<li>Sygwin Terminal</li>\n<li>Cmder</li>\n<li>GifCam-4.5.CHS</li>\n<li>Xshell 5</li>\n<li>小书屋</li>\n<li>Listary</li>\n<li>Visual Studio Code</li>\n<li>XMind 7</li>\n<li>filezilla 上传工具</li>\n<li>navicat 数据库</li>\n<li>Google Chrome</li>\n<li>Mozilla Firefox</li>\n<li>网易闪电邮 and Foxmail</li>\n<li>迅雷极速版</li>\n<li>PicPick</li>\n<li>人生日历</li>\n<li>Secure</li>\n<li>phpStudy</li>\n<li>微信web开发者工具</li>\n<li>净网大师</li>\n<li>有道云</li>\n<li>钉钉</li>\n<li>webstorm</li>\n<li>sublime</li>\n<li>SourceTree</li>\n</ul>\n<h2 id=\"浏览器下\"><a href=\"#浏览器下\" class=\"headerlink\" title=\"浏览器下\"></a>浏览器下</h2><ol>\n<li>Anything to QRcode</li>\n<li>JSON Formatter</li>\n<li>JSON-handle</li>\n<li>Momentum</li>\n<li>Octotree</li>\n<li>OneTab</li>\n<li>Page Ruler</li>\n<li>Postman</li>\n<li>WEB前端助手(FeHelper)</li>\n</ol>\n<p>持续维护中。。。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"window-平台下\"><a href=\"#window-平台下\" class=\"headerlink\" title=\"window 平台下\"></a>window 平台下</h2><ul>\n<li>XMind</li>\n<li>Sygwin Terminal</li>\n<li>Cmder</li>\n<li>GifCam-4.5.CHS</li>\n<li>Xshell 5</li>\n<li>小书屋</li>\n<li>Listary</li>\n<li>Visual Studio Code</li>\n<li>XMind 7</li>\n<li>filezilla 上传工具</li>\n<li>navicat 数据库</li>\n<li>Google Chrome</li>\n<li>Mozilla Firefox</li>\n<li>网易闪电邮 and Foxmail</li>\n<li>迅雷极速版</li>\n<li>PicPick</li>\n<li>人生日历</li>\n<li>Secure</li>\n<li>phpStudy</li>\n<li>微信web开发者工具</li>\n<li>净网大师</li>\n<li>有道云</li>\n<li>钉钉</li>\n<li>webstorm</li>\n<li>sublime</li>\n<li>SourceTree</li>\n</ul>\n<h2 id=\"浏览器下\"><a href=\"#浏览器下\" class=\"headerlink\" title=\"浏览器下\"></a>浏览器下</h2><ol>\n<li>Anything to QRcode</li>\n<li>JSON Formatter</li>\n<li>JSON-handle</li>\n<li>Momentum</li>\n<li>Octotree</li>\n<li>OneTab</li>\n<li>Page Ruler</li>\n<li>Postman</li>\n<li>WEB前端助手(FeHelper)</li>\n</ol>\n<p>持续维护中。。。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj7kas42u0008y0jhth7wfluc","tag_id":"cj7kas430000ay0jh1jpi9sak","_id":"cj7kas43o000cy0jhfwbu1h6r"},{"post_id":"cj7kas44d000fy0jhm7simjon","tag_id":"cj7kas44n000jy0jhi75xrexq","_id":"cj7kas44w000oy0jh6iioji6g"},{"post_id":"cj7kas44r000my0jhr4rsyo9u","tag_id":"cj7kas44w000ny0jhtvsamrmu","_id":"cj7kas44y000py0jhyxa3ek45"},{"post_id":"cj7kas42h0005y0jhr6ldynmb","tag_id":"cj7ouv0ca0000b4v0aff5mcnu","_id":"cj7ouv0cl0001b4v0dzk8um85"}],"Tag":[{"name":"node.js","_id":"cj7kas430000ay0jh1jpi9sak"},{"name":"node.js, 规范","_id":"cj7kas44n000jy0jhi75xrexq"},{"name":"javascript","_id":"cj7kas44w000ny0jhtvsamrmu"},{"name":"book","_id":"cj7ouv0ca0000b4v0aff5mcnu"}]}}